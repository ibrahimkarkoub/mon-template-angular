{"ast":null,"code":"import _assertThisInitialized from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _toConsumableArray from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Splitter, hasBgRendering, createFormatter, ViewContextType, ContentContainer, BaseComponent, DateComponent, diffDays, buildNavLinkAttrs, WeekNumberContainer, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, NowTimer, NowIndicatorContainer, renderScrollShim, rangeContainsMarker, startOfDay, asRoughMs, createDuration, RefMap, PositionCache, MoreLinkContainer, SegHierarchy, groupIntersectingEntries, binarySearch, getEntrySpanEnd, buildEntryKey, StandardEvent, memoize, sortEventSegs, DayCellContainer, hasCustomDayCellContent, getSegMeta, buildIsoString, computeEarliestSegStart, buildEventRangeKey, BgEvent, renderFill, addDurations, multiplyDuration, wholeDivideDurations, Slicer, intersectRanges, formatIsoTimeString, DayHeader, DaySeriesModel, DayTableModel, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createElement, createRef, Fragment } from '@fullcalendar/core/preact.js';\nimport { DayTable } from '@fullcalendar/daygrid/internal.js';\n\nvar AllDaySplitter = /*#__PURE__*/function (_Splitter) {\n  _inherits(AllDaySplitter, _Splitter);\n\n  var _super = _createSuper(AllDaySplitter);\n\n  function AllDaySplitter() {\n    _classCallCheck(this, AllDaySplitter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AllDaySplitter, [{\n    key: \"getKeyInfo\",\n    value: function getKeyInfo() {\n      return {\n        allDay: {},\n        timed: {}\n      };\n    }\n  }, {\n    key: \"getKeysForDateSpan\",\n    value: function getKeysForDateSpan(dateSpan) {\n      if (dateSpan.allDay) {\n        return ['allDay'];\n      }\n\n      return ['timed'];\n    }\n  }, {\n    key: \"getKeysForEventDef\",\n    value: function getKeysForEventDef(eventDef) {\n      if (!eventDef.allDay) {\n        return ['timed'];\n      }\n\n      if (hasBgRendering(eventDef)) {\n        return ['timed', 'allDay'];\n      }\n\n      return ['allDay'];\n    }\n  }]);\n\n  return AllDaySplitter;\n}(Splitter);\n\nvar DEFAULT_SLAT_LABEL_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'short'\n});\n\nfunction TimeColsAxisCell(props) {\n  var classNames = ['fc-timegrid-slot', 'fc-timegrid-slot-label', props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor'];\n  return createElement(ViewContextType.Consumer, null, function (context) {\n    if (!props.isLabeled) {\n      return createElement(\"td\", {\n        className: classNames.join(' '),\n        \"data-time\": props.isoTimeStr\n      });\n    }\n\n    var dateEnv = context.dateEnv,\n        options = context.options,\n        viewApi = context.viewApi;\n    var labelFormat = // TODO: fully pre-parse\n    options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT : Array.isArray(options.slotLabelFormat) ? createFormatter(options.slotLabelFormat[0]) : createFormatter(options.slotLabelFormat);\n    var renderProps = {\n      level: 0,\n      time: props.time,\n      date: dateEnv.toDate(props.date),\n      view: viewApi,\n      text: dateEnv.format(props.date, labelFormat)\n    };\n    return createElement(ContentContainer, {\n      elTag: \"td\",\n      elClasses: classNames,\n      elAttrs: {\n        'data-time': props.isoTimeStr\n      },\n      renderProps: renderProps,\n      generatorName: \"slotLabelContent\",\n      customGenerator: options.slotLabelContent,\n      defaultGenerator: renderInnerContent,\n      classNameGenerator: options.slotLabelClassNames,\n      didMount: options.slotLabelDidMount,\n      willUnmount: options.slotLabelWillUnmount\n    }, function (InnerContent) {\n      return createElement(\"div\", {\n        className: \"fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame\"\n      }, createElement(InnerContent, {\n        elTag: \"div\",\n        elClasses: ['fc-timegrid-slot-label-cushion', 'fc-scrollgrid-shrink-cushion']\n      }));\n    });\n  });\n}\n\nfunction renderInnerContent(props) {\n  return props.text;\n}\n\nvar TimeBodyAxis = /*#__PURE__*/function (_BaseComponent) {\n  _inherits(TimeBodyAxis, _BaseComponent);\n\n  var _super2 = _createSuper(TimeBodyAxis);\n\n  function TimeBodyAxis() {\n    _classCallCheck(this, TimeBodyAxis);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(TimeBodyAxis, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.slatMetas.map(function (slatMeta) {\n        return createElement(\"tr\", {\n          key: slatMeta.key\n        }, createElement(TimeColsAxisCell, Object.assign({}, slatMeta)));\n      });\n    }\n  }]);\n\n  return TimeBodyAxis;\n}(BaseComponent);\n\nvar DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'short'\n});\nvar AUTO_ALL_DAY_MAX_EVENT_ROWS = 5;\n\nvar TimeColsView = /*#__PURE__*/function (_DateComponent) {\n  _inherits(TimeColsView, _DateComponent);\n\n  var _super3 = _createSuper(TimeColsView);\n\n  function TimeColsView() {\n    var _this;\n\n    _classCallCheck(this, TimeColsView);\n\n    _this = _super3.apply(this, arguments);\n    _this.allDaySplitter = new AllDaySplitter(); // for use by subclasses\n\n    _this.headerElRef = createRef();\n    _this.rootElRef = createRef();\n    _this.scrollerElRef = createRef();\n    _this.state = {\n      slatCoords: null\n    };\n\n    _this.handleScrollTopRequest = function (scrollTop) {\n      var scrollerEl = _this.scrollerElRef.current;\n\n      if (scrollerEl) {\n        // TODO: not sure how this could ever be null. weirdness with the reducer\n        scrollerEl.scrollTop = scrollTop;\n      }\n    };\n    /* Header Render Methods\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    _this.renderHeadAxis = function (rowKey) {\n      var frameHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var options = _this.context.options;\n      var dateProfile = _this.props.dateProfile;\n      var range = dateProfile.renderRange;\n      var dayCnt = diffDays(range.start, range.end); // only do in day views (to avoid doing in week views that dont need it)\n\n      var navLinkAttrs = dayCnt === 1 ? buildNavLinkAttrs(_this.context, range.start, 'week') : {};\n\n      if (options.weekNumbers && rowKey === 'day') {\n        return createElement(WeekNumberContainer, {\n          elTag: \"th\",\n          elClasses: ['fc-timegrid-axis', 'fc-scrollgrid-shrink'],\n          elAttrs: {\n            'aria-hidden': true\n          },\n          date: range.start,\n          defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n        }, function (InnerContent) {\n          return createElement(\"div\", {\n            className: ['fc-timegrid-axis-frame', 'fc-scrollgrid-shrink-frame', 'fc-timegrid-axis-frame-liquid'].join(' '),\n            style: {\n              height: frameHeight\n            }\n          }, createElement(InnerContent, {\n            elTag: \"a\",\n            elClasses: ['fc-timegrid-axis-cushion', 'fc-scrollgrid-shrink-cushion', 'fc-scrollgrid-sync-inner'],\n            elAttrs: navLinkAttrs\n          }));\n        });\n      }\n\n      return createElement(\"th\", {\n        \"aria-hidden\": true,\n        className: \"fc-timegrid-axis\"\n      }, createElement(\"div\", {\n        className: \"fc-timegrid-axis-frame\",\n        style: {\n          height: frameHeight\n        }\n      }));\n    };\n    /* Table Component Render Methods\n    ------------------------------------------------------------------------------------------------------------------*/\n    // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,\n    // but DayGrid still needs to have classNames on inner elements in order to measure.\n\n\n    _this.renderTableRowAxis = function (rowHeight) {\n      var _this$context = _this.context,\n          options = _this$context.options,\n          viewApi = _this$context.viewApi;\n      var renderProps = {\n        text: options.allDayText,\n        view: viewApi\n      };\n      return (// TODO: make reusable hook. used in list view too\n        createElement(ContentContainer, {\n          elTag: \"td\",\n          elClasses: ['fc-timegrid-axis', 'fc-scrollgrid-shrink'],\n          elAttrs: {\n            'aria-hidden': true\n          },\n          renderProps: renderProps,\n          generatorName: \"allDayContent\",\n          customGenerator: options.allDayContent,\n          defaultGenerator: renderAllDayInner,\n          classNameGenerator: options.allDayClassNames,\n          didMount: options.allDayDidMount,\n          willUnmount: options.allDayWillUnmount\n        }, function (InnerContent) {\n          return createElement(\"div\", {\n            className: ['fc-timegrid-axis-frame', 'fc-scrollgrid-shrink-frame', rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : ''].join(' '),\n            style: {\n              height: rowHeight\n            }\n          }, createElement(InnerContent, {\n            elTag: \"span\",\n            elClasses: ['fc-timegrid-axis-cushion', 'fc-scrollgrid-shrink-cushion', 'fc-scrollgrid-sync-inner']\n          }));\n        })\n      );\n    };\n\n    _this.handleSlatCoords = function (slatCoords) {\n      _this.setState({\n        slatCoords: slatCoords\n      });\n    };\n\n    return _this;\n  } // rendering\n  // ----------------------------------------------------------------------------------------------------\n\n\n  _createClass(TimeColsView, [{\n    key: \"renderSimpleLayout\",\n    value: function renderSimpleLayout(headerRowContent, allDayContent, timeContent) {\n      var context = this.context,\n          props = this.props;\n      var sections = [];\n      var stickyHeaderDates = getStickyHeaderDates(context.options);\n\n      if (headerRowContent) {\n        sections.push({\n          type: 'header',\n          key: 'header',\n          isSticky: stickyHeaderDates,\n          chunk: {\n            elRef: this.headerElRef,\n            tableClassName: 'fc-col-header',\n            rowContent: headerRowContent\n          }\n        });\n      }\n\n      if (allDayContent) {\n        sections.push({\n          type: 'body',\n          key: 'all-day',\n          chunk: {\n            content: allDayContent\n          }\n        });\n        sections.push({\n          type: 'body',\n          key: 'all-day-divider',\n          outerContent: // TODO: rename to cellContent so don't need to define <tr>?\n          createElement(\"tr\", {\n            role: \"presentation\",\n            className: \"fc-scrollgrid-section\"\n          }, createElement(\"td\", {\n            className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded')\n          }))\n        });\n      }\n\n      sections.push({\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        expandRows: Boolean(context.options.expandRows),\n        chunk: {\n          scrollerElRef: this.scrollerElRef,\n          content: timeContent\n        }\n      });\n      return createElement(ViewContainer, {\n        elRef: this.rootElRef,\n        elClasses: ['fc-timegrid'],\n        viewSpec: context.viewSpec\n      }, createElement(SimpleScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        cols: [{\n          width: 'shrink'\n        }],\n        sections: sections\n      }));\n    }\n  }, {\n    key: \"renderHScrollLayout\",\n    value: function renderHScrollLayout(headerRowContent, allDayContent, timeContent, colCnt, dayMinWidth, slatMetas, slatCoords) {\n      var _this2 = this;\n\n      var ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n\n      if (!ScrollGrid) {\n        throw new Error('No ScrollGrid implementation');\n      }\n\n      var context = this.context,\n          props = this.props;\n      var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n      var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n      var sections = [];\n\n      if (headerRowContent) {\n        sections.push({\n          type: 'header',\n          key: 'header',\n          isSticky: stickyHeaderDates,\n          syncRowHeights: true,\n          chunks: [{\n            key: 'axis',\n            rowContent: function rowContent(arg) {\n              return createElement(\"tr\", {\n                role: \"presentation\"\n              }, _this2.renderHeadAxis('day', arg.rowSyncHeights[0]));\n            }\n          }, {\n            key: 'cols',\n            elRef: this.headerElRef,\n            tableClassName: 'fc-col-header',\n            rowContent: headerRowContent\n          }]\n        });\n      }\n\n      if (allDayContent) {\n        sections.push({\n          type: 'body',\n          key: 'all-day',\n          syncRowHeights: true,\n          chunks: [{\n            key: 'axis',\n            rowContent: function rowContent(contentArg) {\n              return createElement(\"tr\", {\n                role: \"presentation\"\n              }, _this2.renderTableRowAxis(contentArg.rowSyncHeights[0]));\n            }\n          }, {\n            key: 'cols',\n            content: allDayContent\n          }]\n        });\n        sections.push({\n          key: 'all-day-divider',\n          type: 'body',\n          outerContent: // TODO: rename to cellContent so don't need to define <tr>?\n          createElement(\"tr\", {\n            role: \"presentation\",\n            className: \"fc-scrollgrid-section\"\n          }, createElement(\"td\", {\n            colSpan: 2,\n            className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded')\n          }))\n        });\n      }\n\n      var isNowIndicator = context.options.nowIndicator;\n      sections.push({\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        expandRows: Boolean(context.options.expandRows),\n        chunks: [{\n          key: 'axis',\n          content: function content(arg) {\n            return (// TODO: make this now-indicator arrow more DRY with TimeColsContent\n              createElement(\"div\", {\n                className: \"fc-timegrid-axis-chunk\"\n              }, createElement(\"table\", {\n                \"aria-hidden\": true,\n                style: {\n                  height: arg.expandRows ? arg.clientHeight : ''\n                }\n              }, arg.tableColGroupNode, createElement(\"tbody\", null, createElement(TimeBodyAxis, {\n                slatMetas: slatMetas\n              }))), createElement(\"div\", {\n                className: \"fc-timegrid-now-indicator-container\"\n              }, createElement(NowTimer, {\n                unit: isNowIndicator ? 'minute' : 'day'\n                /* hacky */\n\n              }, function (nowDate) {\n                var nowIndicatorTop = isNowIndicator && slatCoords && slatCoords.safeComputeTop(nowDate); // might return void\n\n                if (typeof nowIndicatorTop === 'number') {\n                  return createElement(NowIndicatorContainer, {\n                    elClasses: ['fc-timegrid-now-indicator-arrow'],\n                    elStyle: {\n                      top: nowIndicatorTop\n                    },\n                    isAxis: true,\n                    date: nowDate\n                  });\n                }\n\n                return null;\n              })))\n            );\n          }\n        }, {\n          key: 'cols',\n          scrollerElRef: this.scrollerElRef,\n          content: timeContent\n        }]\n      });\n\n      if (stickyFooterScrollbar) {\n        sections.push({\n          key: 'footer',\n          type: 'footer',\n          isSticky: true,\n          chunks: [{\n            key: 'axis',\n            content: renderScrollShim\n          }, {\n            key: 'cols',\n            content: renderScrollShim\n          }]\n        });\n      }\n\n      return createElement(ViewContainer, {\n        elRef: this.rootElRef,\n        elClasses: ['fc-timegrid'],\n        viewSpec: context.viewSpec\n      }, createElement(ScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        forPrint: props.forPrint,\n        collapsibleWidth: false,\n        colGroups: [{\n          width: 'shrink',\n          cols: [{\n            width: 'shrink'\n          }]\n        }, {\n          cols: [{\n            span: colCnt,\n            minWidth: dayMinWidth\n          }]\n        }],\n        sections: sections\n      }));\n    }\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n\n  }, {\n    key: \"getAllDayMaxEventProps\",\n    value: function getAllDayMaxEventProps() {\n      var _this$context$options = this.context.options,\n          dayMaxEvents = _this$context$options.dayMaxEvents,\n          dayMaxEventRows = _this$context$options.dayMaxEventRows;\n\n      if (dayMaxEvents === true || dayMaxEventRows === true) {\n        // is auto?\n        dayMaxEvents = undefined;\n        dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS; // make sure \"auto\" goes to a real number\n      }\n\n      return {\n        dayMaxEvents: dayMaxEvents,\n        dayMaxEventRows: dayMaxEventRows\n      };\n    }\n  }]);\n\n  return TimeColsView;\n}(DateComponent);\n\nfunction renderAllDayInner(renderProps) {\n  return renderProps.text;\n}\n\nvar TimeColsSlatsCoords = /*#__PURE__*/function () {\n  function TimeColsSlatsCoords(positions, dateProfile, slotDuration) {\n    _classCallCheck(this, TimeColsSlatsCoords);\n\n    this.positions = positions;\n    this.dateProfile = dateProfile;\n    this.slotDuration = slotDuration;\n  }\n\n  _createClass(TimeColsSlatsCoords, [{\n    key: \"safeComputeTop\",\n    value: function safeComputeTop(date) {\n      var dateProfile = this.dateProfile;\n\n      if (rangeContainsMarker(dateProfile.currentRange, date)) {\n        var startOfDayDate = startOfDay(date);\n        var timeMs = date.valueOf() - startOfDayDate.valueOf();\n\n        if (timeMs >= asRoughMs(dateProfile.slotMinTime) && timeMs < asRoughMs(dateProfile.slotMaxTime)) {\n          return this.computeTimeTop(createDuration(timeMs));\n        }\n      }\n\n      return null;\n    } // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n    // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n\n  }, {\n    key: \"computeDateTop\",\n    value: function computeDateTop(when, startOfDayDate) {\n      if (!startOfDayDate) {\n        startOfDayDate = startOfDay(when);\n      }\n\n      return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()));\n    } // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n    // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.\n    // Eventually allow computation with arbirary slat dates.\n\n  }, {\n    key: \"computeTimeTop\",\n    value: function computeTimeTop(duration) {\n      var positions = this.positions,\n          dateProfile = this.dateProfile;\n      var len = positions.els.length; // floating-point value of # of slots covered\n\n      var slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) / asRoughMs(this.slotDuration);\n      var slatIndex;\n      var slatRemainder; // compute a floating-point number for how many slats should be progressed through.\n      // from 0 to number of slats (inclusive)\n      // constrained because slotMinTime/slotMaxTime might be customized.\n\n      slatCoverage = Math.max(0, slatCoverage);\n      slatCoverage = Math.min(len, slatCoverage); // an integer index of the furthest whole slat\n      // from 0 to number slats (*exclusive*, so len-1)\n\n      slatIndex = Math.floor(slatCoverage);\n      slatIndex = Math.min(slatIndex, len - 1); // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n      // could be 1.0 if slatCoverage is covering *all* the slots\n\n      slatRemainder = slatCoverage - slatIndex;\n      return positions.tops[slatIndex] + positions.getHeight(slatIndex) * slatRemainder;\n    }\n  }]);\n\n  return TimeColsSlatsCoords;\n}();\n\nvar TimeColsSlatsBody = /*#__PURE__*/function (_BaseComponent2) {\n  _inherits(TimeColsSlatsBody, _BaseComponent2);\n\n  var _super4 = _createSuper(TimeColsSlatsBody);\n\n  function TimeColsSlatsBody() {\n    _classCallCheck(this, TimeColsSlatsBody);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(TimeColsSlatsBody, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n          context = this.context;\n      var options = context.options;\n      var slatElRefs = props.slatElRefs;\n      return createElement(\"tbody\", null, props.slatMetas.map(function (slatMeta, i) {\n        var renderProps = {\n          time: slatMeta.time,\n          date: context.dateEnv.toDate(slatMeta.date),\n          view: context.viewApi\n        };\n        return createElement(\"tr\", {\n          key: slatMeta.key,\n          ref: slatElRefs.createRef(slatMeta.key)\n        }, props.axis && createElement(TimeColsAxisCell, Object.assign({}, slatMeta)), createElement(ContentContainer, {\n          elTag: \"td\",\n          elClasses: ['fc-timegrid-slot', 'fc-timegrid-slot-lane', !slatMeta.isLabeled && 'fc-timegrid-slot-minor'],\n          elAttrs: {\n            'data-time': slatMeta.isoTimeStr\n          },\n          renderProps: renderProps,\n          generatorName: \"slotLaneContent\",\n          customGenerator: options.slotLaneContent,\n          classNameGenerator: options.slotLaneClassNames,\n          didMount: options.slotLaneDidMount,\n          willUnmount: options.slotLaneWillUnmount\n        }));\n      }));\n    }\n  }]);\n\n  return TimeColsSlatsBody;\n}(BaseComponent);\n/*\nfor the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n*/\n\n\nvar TimeColsSlats = /*#__PURE__*/function (_BaseComponent3) {\n  _inherits(TimeColsSlats, _BaseComponent3);\n\n  var _super5 = _createSuper(TimeColsSlats);\n\n  function TimeColsSlats() {\n    var _this3;\n\n    _classCallCheck(this, TimeColsSlats);\n\n    _this3 = _super5.apply(this, arguments);\n    _this3.rootElRef = createRef();\n    _this3.slatElRefs = new RefMap();\n    return _this3;\n  }\n\n  _createClass(TimeColsSlats, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n          context = this.context;\n      return createElement(\"div\", {\n        ref: this.rootElRef,\n        className: \"fc-timegrid-slots\"\n      }, createElement(\"table\", {\n        \"aria-hidden\": true,\n        className: context.theme.getClass('table'),\n        style: {\n          minWidth: props.tableMinWidth,\n          width: props.clientWidth,\n          height: props.minHeight\n        }\n      }, props.tableColGroupNode\n      /* relies on there only being a single <col> for the axis */\n      , createElement(TimeColsSlatsBody, {\n        slatElRefs: this.slatElRefs,\n        axis: props.axis,\n        slatMetas: props.slatMetas\n      })));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateSizing();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateSizing();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.onCoords) {\n        this.props.onCoords(null);\n      }\n    }\n  }, {\n    key: \"updateSizing\",\n    value: function updateSizing() {\n      var context = this.context,\n          props = this.props;\n\n      if (props.onCoords && props.clientWidth !== null // means sizing has stabilized\n      ) {\n        var rootEl = this.rootElRef.current;\n\n        if (rootEl.offsetHeight) {\n          // not hidden by css\n          props.onCoords(new TimeColsSlatsCoords(new PositionCache(this.rootElRef.current, collectSlatEls(this.slatElRefs.currentMap, props.slatMetas), false, true), this.props.dateProfile, context.options.slotDuration));\n        }\n      }\n    }\n  }]);\n\n  return TimeColsSlats;\n}(BaseComponent);\n\nfunction collectSlatEls(elMap, slatMetas) {\n  return slatMetas.map(function (slatMeta) {\n    return elMap[slatMeta.key];\n  });\n}\n\nfunction splitSegsByCol(segs, colCnt) {\n  var segsByCol = [];\n  var i;\n\n  for (i = 0; i < colCnt; i += 1) {\n    segsByCol.push([]);\n  }\n\n  if (segs) {\n    for (i = 0; i < segs.length; i += 1) {\n      segsByCol[segs[i].col].push(segs[i]);\n    }\n  }\n\n  return segsByCol;\n}\n\nfunction splitInteractionByCol(ui, colCnt) {\n  var byRow = [];\n\n  if (!ui) {\n    for (var i = 0; i < colCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (var _i = 0; _i < colCnt; _i += 1) {\n      byRow[_i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n\n    var _iterator = _createForOfIteratorHelper(ui.segs),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var seg = _step.value;\n        byRow[seg.col].segs.push(seg);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return byRow;\n}\n\nvar TimeColMoreLink = /*#__PURE__*/function (_BaseComponent4) {\n  _inherits(TimeColMoreLink, _BaseComponent4);\n\n  var _super6 = _createSuper(TimeColMoreLink);\n\n  function TimeColMoreLink() {\n    _classCallCheck(this, TimeColMoreLink);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(TimeColMoreLink, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return createElement(MoreLinkContainer, {\n        elClasses: ['fc-timegrid-more-link'],\n        elStyle: {\n          top: props.top,\n          bottom: props.bottom\n        },\n        allDayDate: null,\n        moreCnt: props.hiddenSegs.length,\n        allSegs: props.hiddenSegs,\n        hiddenSegs: props.hiddenSegs,\n        extraDateSpan: props.extraDateSpan,\n        dateProfile: props.dateProfile,\n        todayRange: props.todayRange,\n        popoverContent: function popoverContent() {\n          return renderPlainFgSegs(props.hiddenSegs, props);\n        },\n        defaultGenerator: renderMoreLinkInner,\n        forceTimed: true\n      }, function (InnerContent) {\n        return createElement(InnerContent, {\n          elTag: \"div\",\n          elClasses: ['fc-timegrid-more-link-inner', 'fc-sticky']\n        });\n      });\n    }\n  }]);\n\n  return TimeColMoreLink;\n}(BaseComponent);\n\nfunction renderMoreLinkInner(props) {\n  return props.shortText;\n} // segInputs assumed sorted\n\n\nfunction buildPositioning(segInputs, strictOrder, maxStackCnt) {\n  var hierarchy = new SegHierarchy();\n\n  if (strictOrder != null) {\n    hierarchy.strictOrder = strictOrder;\n  }\n\n  if (maxStackCnt != null) {\n    hierarchy.maxStackCnt = maxStackCnt;\n  }\n\n  var hiddenEntries = hierarchy.addSegs(segInputs);\n  var hiddenGroups = groupIntersectingEntries(hiddenEntries);\n  var web = buildWeb(hierarchy);\n  web = stretchWeb(web, 1); // all levelCoords/thickness will have 0.0-1.0\n\n  var segRects = webToRects(web);\n  return {\n    segRects: segRects,\n    hiddenGroups: hiddenGroups\n  };\n}\n\nfunction buildWeb(hierarchy) {\n  var entriesByLevel = hierarchy.entriesByLevel;\n  var buildNode = cacheable(function (level, lateral) {\n    return level + ':' + lateral;\n  }, function (level, lateral) {\n    var siblingRange = findNextLevelSegs(hierarchy, level, lateral);\n    var nextLevelRes = buildNodes(siblingRange, buildNode);\n    var entry = entriesByLevel[level][lateral];\n    return [Object.assign(Object.assign({}, entry), {\n      nextLevelNodes: nextLevelRes[0]\n    }), entry.thickness + nextLevelRes[1] // the pressure builds\n    ];\n  });\n  return buildNodes(entriesByLevel.length ? {\n    level: 0,\n    lateralStart: 0,\n    lateralEnd: entriesByLevel[0].length\n  } : null, buildNode)[0];\n}\n\nfunction buildNodes(siblingRange, buildNode) {\n  if (!siblingRange) {\n    return [[], 0];\n  }\n\n  var level = siblingRange.level,\n      lateralStart = siblingRange.lateralStart,\n      lateralEnd = siblingRange.lateralEnd;\n  var lateral = lateralStart;\n  var pairs = [];\n\n  while (lateral < lateralEnd) {\n    pairs.push(buildNode(level, lateral));\n    lateral += 1;\n  }\n\n  pairs.sort(cmpDescPressures);\n  return [pairs.map(extractNode), pairs[0][1] // first item's pressure\n  ];\n}\n\nfunction cmpDescPressures(a, b) {\n  return b[1] - a[1];\n}\n\nfunction extractNode(a) {\n  return a[0];\n}\n\nfunction findNextLevelSegs(hierarchy, subjectLevel, subjectLateral) {\n  var levelCoords = hierarchy.levelCoords,\n      entriesByLevel = hierarchy.entriesByLevel;\n  var subjectEntry = entriesByLevel[subjectLevel][subjectLateral];\n  var afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness;\n  var levelCnt = levelCoords.length;\n  var level = subjectLevel; // skip past levels that are too high up\n\n  for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1) {\n    ;\n  } // do nothing\n\n\n  for (; level < levelCnt; level += 1) {\n    var entries = entriesByLevel[level];\n    var entry = void 0;\n    var searchIndex = binarySearch(entries, subjectEntry.span.start, getEntrySpanEnd);\n    var lateralStart = searchIndex[0] + searchIndex[1]; // if exact match (which doesn't collide), go to next one\n\n    var lateralEnd = lateralStart;\n\n    while ( // loop through entries that horizontally intersect\n    (entry = entries[lateralEnd]) && // but not past the whole seg list\n    entry.span.start < subjectEntry.span.end) {\n      lateralEnd += 1;\n    }\n\n    if (lateralStart < lateralEnd) {\n      return {\n        level: level,\n        lateralStart: lateralStart,\n        lateralEnd: lateralEnd\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction stretchWeb(topLevelNodes, totalThickness) {\n  var stretchNode = cacheable(function (node, startCoord, prevThickness) {\n    return buildEntryKey(node);\n  }, function (node, startCoord, prevThickness) {\n    var nextLevelNodes = node.nextLevelNodes,\n        thickness = node.thickness;\n    var allThickness = thickness + prevThickness;\n    var thicknessFraction = thickness / allThickness;\n    var endCoord;\n    var newChildren = [];\n\n    if (!nextLevelNodes.length) {\n      endCoord = totalThickness;\n    } else {\n      var _iterator2 = _createForOfIteratorHelper(nextLevelNodes),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var childNode = _step2.value;\n\n          if (endCoord === undefined) {\n            var res = stretchNode(childNode, startCoord, allThickness);\n            endCoord = res[0];\n            newChildren.push(res[1]);\n          } else {\n            var _res = stretchNode(childNode, endCoord, 0);\n\n            newChildren.push(_res[1]);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    var newThickness = (endCoord - startCoord) * thicknessFraction;\n    return [endCoord - newThickness, Object.assign(Object.assign({}, node), {\n      thickness: newThickness,\n      nextLevelNodes: newChildren\n    })];\n  });\n  return topLevelNodes.map(function (node) {\n    return stretchNode(node, 0, 0)[1];\n  });\n} // not sorted in any particular order\n\n\nfunction webToRects(topLevelNodes) {\n  var rects = [];\n  var processNode = cacheable(function (node, levelCoord, stackDepth) {\n    return buildEntryKey(node);\n  }, function (node, levelCoord, stackDepth) {\n    var rect = Object.assign(Object.assign({}, node), {\n      levelCoord: levelCoord,\n      stackDepth: stackDepth,\n      stackForward: 0\n    });\n    rects.push(rect);\n    return rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1;\n  });\n\n  function processNodes(nodes, levelCoord, stackDepth) {\n    var stackForward = 0;\n\n    var _iterator3 = _createForOfIteratorHelper(nodes),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var node = _step3.value;\n        stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    return stackForward;\n  }\n\n  processNodes(topLevelNodes, 0, 0);\n  return rects; // TODO: sort rects by levelCoord to be consistent with toRects?\n} // TODO: move to general util\n\n\nfunction cacheable(keyFunc, workFunc) {\n  var cache = {};\n  return function () {\n    var key = keyFunc.apply(void 0, arguments);\n    return key in cache ? cache[key] : cache[key] = workFunc.apply(void 0, arguments);\n  };\n}\n\nfunction computeSegVCoords(segs, colDate) {\n  var slatCoords = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var eventMinHeight = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var vcoords = [];\n\n  if (slatCoords) {\n    for (var i = 0; i < segs.length; i += 1) {\n      var seg = segs[i];\n      var spanStart = slatCoords.computeDateTop(seg.start, colDate);\n      var spanEnd = Math.max(spanStart + (eventMinHeight || 0), // :(\n      slatCoords.computeDateTop(seg.end, colDate));\n      vcoords.push({\n        start: Math.round(spanStart),\n        end: Math.round(spanEnd) //\n\n      });\n    }\n  }\n\n  return vcoords;\n}\n\nfunction computeFgSegPlacements(segs, segVCoords, // might not have for every seg\neventOrderStrict, eventMaxStack) {\n  var segInputs = [];\n  var dumbSegs = []; // segs without coords\n\n  for (var i = 0; i < segs.length; i += 1) {\n    var vcoords = segVCoords[i];\n\n    if (vcoords) {\n      segInputs.push({\n        index: i,\n        thickness: 1,\n        span: vcoords\n      });\n    } else {\n      dumbSegs.push(segs[i]);\n    }\n  }\n\n  var _buildPositioning = buildPositioning(segInputs, eventOrderStrict, eventMaxStack),\n      segRects = _buildPositioning.segRects,\n      hiddenGroups = _buildPositioning.hiddenGroups;\n\n  var segPlacements = [];\n\n  var _iterator4 = _createForOfIteratorHelper(segRects),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var segRect = _step4.value;\n      segPlacements.push({\n        seg: segs[segRect.index],\n        rect: segRect\n      });\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  for (var _i2 = 0, _dumbSegs = dumbSegs; _i2 < _dumbSegs.length; _i2++) {\n    var dumbSeg = _dumbSegs[_i2];\n    segPlacements.push({\n      seg: dumbSeg,\n      rect: null\n    });\n  }\n\n  return {\n    segPlacements: segPlacements,\n    hiddenGroups: hiddenGroups\n  };\n}\n\nvar DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  meridiem: false\n});\n\nvar TimeColEvent = /*#__PURE__*/function (_BaseComponent5) {\n  _inherits(TimeColEvent, _BaseComponent5);\n\n  var _super7 = _createSuper(TimeColEvent);\n\n  function TimeColEvent() {\n    _classCallCheck(this, TimeColEvent);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(TimeColEvent, [{\n    key: \"render\",\n    value: function render() {\n      return createElement(StandardEvent, Object.assign({}, this.props, {\n        elClasses: ['fc-timegrid-event', 'fc-v-event', this.props.isShort && 'fc-timegrid-event-short'],\n        defaultTimeFormat: DEFAULT_TIME_FORMAT\n      }));\n    }\n  }]);\n\n  return TimeColEvent;\n}(BaseComponent);\n\nvar TimeCol = /*#__PURE__*/function (_BaseComponent6) {\n  _inherits(TimeCol, _BaseComponent6);\n\n  var _super8 = _createSuper(TimeCol);\n\n  function TimeCol() {\n    var _this4;\n\n    _classCallCheck(this, TimeCol);\n\n    _this4 = _super8.apply(this, arguments);\n    _this4.sortEventSegs = memoize(sortEventSegs);\n    return _this4;\n  } // TODO: memoize event-placement?\n\n\n  _createClass(TimeCol, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var props = this.props,\n          context = this.context;\n      var options = context.options;\n      var isSelectMirror = options.selectMirror;\n      var mirrorSegs = // yuck\n      props.eventDrag && props.eventDrag.segs || props.eventResize && props.eventResize.segs || isSelectMirror && props.dateSelectionSegs || [];\n      var interactionAffectedInstances = // TODO: messy way to compute this\n      props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n      var sortedFgSegs = this.sortEventSegs(props.fgEventSegs, options.eventOrder);\n      return createElement(DayCellContainer, {\n        elTag: \"td\",\n        elRef: props.elRef,\n        elClasses: ['fc-timegrid-col'].concat(_toConsumableArray(props.extraClassNames || [])),\n        elAttrs: Object.assign({\n          role: 'gridcell'\n        }, props.extraDataAttrs),\n        date: props.date,\n        dateProfile: props.dateProfile,\n        todayRange: props.todayRange,\n        extraRenderProps: props.extraRenderProps\n      }, function (InnerContent) {\n        return createElement(\"div\", {\n          className: \"fc-timegrid-col-frame\"\n        }, createElement(\"div\", {\n          className: \"fc-timegrid-col-bg\"\n        }, _this5.renderFillSegs(props.businessHourSegs, 'non-business'), _this5.renderFillSegs(props.bgEventSegs, 'bg-event'), _this5.renderFillSegs(props.dateSelectionSegs, 'highlight')), createElement(\"div\", {\n          className: \"fc-timegrid-col-events\"\n        }, _this5.renderFgSegs(sortedFgSegs, interactionAffectedInstances, false, false, false)), createElement(\"div\", {\n          className: \"fc-timegrid-col-events\"\n        }, _this5.renderFgSegs(mirrorSegs, {}, Boolean(props.eventDrag), Boolean(props.eventResize), Boolean(isSelectMirror), 'mirror')), createElement(\"div\", {\n          className: \"fc-timegrid-now-indicator-container\"\n        }, _this5.renderNowIndicator(props.nowIndicatorSegs)), hasCustomDayCellContent(options) && createElement(InnerContent, {\n          elTag: \"div\",\n          elClasses: ['fc-timegrid-col-misc']\n        }));\n      });\n    }\n  }, {\n    key: \"renderFgSegs\",\n    value: function renderFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n      var props = this.props;\n\n      if (props.forPrint) {\n        return renderPlainFgSegs(sortedFgSegs, props);\n      }\n\n      return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey);\n    }\n  }, {\n    key: \"renderPositionedFgSegs\",\n    value: function renderPositionedFgSegs(segs, // if not mirror, needs to be sorted\n    segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n      var _this6 = this;\n\n      var _this$context$options2 = this.context.options,\n          eventMaxStack = _this$context$options2.eventMaxStack,\n          eventShortHeight = _this$context$options2.eventShortHeight,\n          eventOrderStrict = _this$context$options2.eventOrderStrict,\n          eventMinHeight = _this$context$options2.eventMinHeight;\n      var _this$props = this.props,\n          date = _this$props.date,\n          slatCoords = _this$props.slatCoords,\n          eventSelection = _this$props.eventSelection,\n          todayRange = _this$props.todayRange,\n          nowDate = _this$props.nowDate;\n      var isMirror = isDragging || isResizing || isDateSelecting;\n      var segVCoords = computeSegVCoords(segs, date, slatCoords, eventMinHeight);\n\n      var _computeFgSegPlacemen = computeFgSegPlacements(segs, segVCoords, eventOrderStrict, eventMaxStack),\n          segPlacements = _computeFgSegPlacemen.segPlacements,\n          hiddenGroups = _computeFgSegPlacemen.hiddenGroups;\n\n      return createElement(Fragment, null, this.renderHiddenGroups(hiddenGroups, segs), segPlacements.map(function (segPlacement) {\n        var seg = segPlacement.seg,\n            rect = segPlacement.rect;\n        var instanceId = seg.eventRange.instance.instanceId;\n        var isVisible = isMirror || Boolean(!segIsInvisible[instanceId] && rect);\n        var vStyle = computeSegVStyle(rect && rect.span);\n        var hStyle = !isMirror && rect ? _this6.computeSegHStyle(rect) : {\n          left: 0,\n          right: 0\n        };\n        var isInset = Boolean(rect) && rect.stackForward > 0;\n        var isShort = Boolean(rect) && rect.span.end - rect.span.start < eventShortHeight; // look at other places for this problem\n\n        return createElement(\"div\", {\n          className: 'fc-timegrid-event-harness' + (isInset ? ' fc-timegrid-event-harness-inset' : ''),\n          key: forcedKey || instanceId,\n          style: Object.assign(Object.assign({\n            visibility: isVisible ? '' : 'hidden'\n          }, vStyle), hStyle)\n        }, createElement(TimeColEvent, Object.assign({\n          seg: seg,\n          isDragging: isDragging,\n          isResizing: isResizing,\n          isDateSelecting: isDateSelecting,\n          isSelected: instanceId === eventSelection,\n          isShort: isShort\n        }, getSegMeta(seg, todayRange, nowDate))));\n      }));\n    } // will already have eventMinHeight applied because segInputs already had it\n\n  }, {\n    key: \"renderHiddenGroups\",\n    value: function renderHiddenGroups(hiddenGroups, segs) {\n      var _this$props2 = this.props,\n          extraDateSpan = _this$props2.extraDateSpan,\n          dateProfile = _this$props2.dateProfile,\n          todayRange = _this$props2.todayRange,\n          nowDate = _this$props2.nowDate,\n          eventSelection = _this$props2.eventSelection,\n          eventDrag = _this$props2.eventDrag,\n          eventResize = _this$props2.eventResize;\n      return createElement(Fragment, null, hiddenGroups.map(function (hiddenGroup) {\n        var positionCss = computeSegVStyle(hiddenGroup.span);\n        var hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs);\n        return createElement(TimeColMoreLink, {\n          key: buildIsoString(computeEarliestSegStart(hiddenSegs)),\n          hiddenSegs: hiddenSegs,\n          top: positionCss.top,\n          bottom: positionCss.bottom,\n          extraDateSpan: extraDateSpan,\n          dateProfile: dateProfile,\n          todayRange: todayRange,\n          nowDate: nowDate,\n          eventSelection: eventSelection,\n          eventDrag: eventDrag,\n          eventResize: eventResize\n        });\n      }));\n    }\n  }, {\n    key: \"renderFillSegs\",\n    value: function renderFillSegs(segs, fillType) {\n      var props = this.props,\n          context = this.context;\n      var segVCoords = computeSegVCoords(segs, props.date, props.slatCoords, context.options.eventMinHeight); // don't assume all populated\n\n      var children = segVCoords.map(function (vcoords, i) {\n        var seg = segs[i];\n        return createElement(\"div\", {\n          key: buildEventRangeKey(seg.eventRange),\n          className: \"fc-timegrid-bg-harness\",\n          style: computeSegVStyle(vcoords)\n        }, fillType === 'bg-event' ? createElement(BgEvent, Object.assign({\n          seg: seg\n        }, getSegMeta(seg, props.todayRange, props.nowDate))) : renderFill(fillType));\n      });\n      return createElement(Fragment, null, children);\n    }\n  }, {\n    key: \"renderNowIndicator\",\n    value: function renderNowIndicator(segs) {\n      var _this$props3 = this.props,\n          slatCoords = _this$props3.slatCoords,\n          date = _this$props3.date;\n\n      if (!slatCoords) {\n        return null;\n      }\n\n      return segs.map(function (seg, i) {\n        return createElement(NowIndicatorContainer // key doesn't matter. will only ever be one\n        , {\n          // key doesn't matter. will only ever be one\n          key: i,\n          elClasses: ['fc-timegrid-now-indicator-line'],\n          elStyle: {\n            top: slatCoords.computeDateTop(seg.start, date)\n          },\n          isAxis: false,\n          date: date\n        });\n      });\n    }\n  }, {\n    key: \"computeSegHStyle\",\n    value: function computeSegHStyle(segHCoords) {\n      var _this$context2 = this.context,\n          isRtl = _this$context2.isRtl,\n          options = _this$context2.options;\n      var shouldOverlap = options.slotEventOverlap;\n      var nearCoord = segHCoords.levelCoord; // the left side if LTR. the right side if RTL. floating-point\n\n      var farCoord = segHCoords.levelCoord + segHCoords.thickness; // the right side if LTR. the left side if RTL. floating-point\n\n      var left; // amount of space from left edge, a fraction of the total width\n\n      var right; // amount of space from right edge, a fraction of the total width\n\n      if (shouldOverlap) {\n        // double the width, but don't go beyond the maximum forward coordinate (1.0)\n        farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2);\n      }\n\n      if (isRtl) {\n        left = 1 - farCoord;\n        right = nearCoord;\n      } else {\n        left = nearCoord;\n        right = 1 - farCoord;\n      }\n\n      var props = {\n        zIndex: segHCoords.stackDepth + 1,\n        left: left * 100 + '%',\n        right: right * 100 + '%'\n      };\n\n      if (shouldOverlap && !segHCoords.stackForward) {\n        // add padding to the edge so that forward stacked events don't cover the resizer's icon\n        props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\n      }\n\n      return props;\n    }\n  }]);\n\n  return TimeCol;\n}(BaseComponent);\n\nfunction renderPlainFgSegs(sortedFgSegs, _ref) {\n  var todayRange = _ref.todayRange,\n      nowDate = _ref.nowDate,\n      eventSelection = _ref.eventSelection,\n      eventDrag = _ref.eventDrag,\n      eventResize = _ref.eventResize;\n  var hiddenInstances = (eventDrag ? eventDrag.affectedInstances : null) || (eventResize ? eventResize.affectedInstances : null) || {};\n  return createElement(Fragment, null, sortedFgSegs.map(function (seg) {\n    var instanceId = seg.eventRange.instance.instanceId;\n    return createElement(\"div\", {\n      key: instanceId,\n      style: {\n        visibility: hiddenInstances[instanceId] ? 'hidden' : ''\n      }\n    }, createElement(TimeColEvent, Object.assign({\n      seg: seg,\n      isDragging: false,\n      isResizing: false,\n      isDateSelecting: false,\n      isSelected: instanceId === eventSelection,\n      isShort: false\n    }, getSegMeta(seg, todayRange, nowDate))));\n  }));\n}\n\nfunction computeSegVStyle(segVCoords) {\n  if (!segVCoords) {\n    return {\n      top: '',\n      bottom: ''\n    };\n  }\n\n  return {\n    top: segVCoords.start,\n    bottom: -segVCoords.end\n  };\n}\n\nfunction compileSegsFromEntries(segEntries, allSegs) {\n  return segEntries.map(function (segEntry) {\n    return allSegs[segEntry.index];\n  });\n}\n\nvar TimeColsContent = /*#__PURE__*/function (_BaseComponent7) {\n  _inherits(TimeColsContent, _BaseComponent7);\n\n  var _super9 = _createSuper(TimeColsContent);\n\n  function TimeColsContent() {\n    var _this7;\n\n    _classCallCheck(this, TimeColsContent);\n\n    _this7 = _super9.apply(this, arguments);\n    _this7.splitFgEventSegs = memoize(splitSegsByCol);\n    _this7.splitBgEventSegs = memoize(splitSegsByCol);\n    _this7.splitBusinessHourSegs = memoize(splitSegsByCol);\n    _this7.splitNowIndicatorSegs = memoize(splitSegsByCol);\n    _this7.splitDateSelectionSegs = memoize(splitSegsByCol);\n    _this7.splitEventDrag = memoize(splitInteractionByCol);\n    _this7.splitEventResize = memoize(splitInteractionByCol);\n    _this7.rootElRef = createRef();\n    _this7.cellElRefs = new RefMap();\n    return _this7;\n  }\n\n  _createClass(TimeColsContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var props = this.props,\n          context = this.context;\n      var nowIndicatorTop = context.options.nowIndicator && props.slatCoords && props.slatCoords.safeComputeTop(props.nowDate); // might return void\n\n      var colCnt = props.cells.length;\n      var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt);\n      var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt);\n      var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt);\n      var nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt);\n      var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt);\n      var eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt);\n      var eventResizeByRow = this.splitEventResize(props.eventResize, colCnt);\n      return createElement(\"div\", {\n        className: \"fc-timegrid-cols\",\n        ref: this.rootElRef\n      }, createElement(\"table\", {\n        role: \"presentation\",\n        style: {\n          minWidth: props.tableMinWidth,\n          width: props.clientWidth\n        }\n      }, props.tableColGroupNode, createElement(\"tbody\", {\n        role: \"presentation\"\n      }, createElement(\"tr\", {\n        role: \"row\"\n      }, props.axis && createElement(\"td\", {\n        \"aria-hidden\": true,\n        className: \"fc-timegrid-col fc-timegrid-axis\"\n      }, createElement(\"div\", {\n        className: \"fc-timegrid-col-frame\"\n      }, createElement(\"div\", {\n        className: \"fc-timegrid-now-indicator-container\"\n      }, typeof nowIndicatorTop === 'number' && createElement(NowIndicatorContainer, {\n        elClasses: ['fc-timegrid-now-indicator-arrow'],\n        elStyle: {\n          top: nowIndicatorTop\n        },\n        isAxis: true,\n        date: props.nowDate\n      })))), props.cells.map(function (cell, i) {\n        return createElement(TimeCol, {\n          key: cell.key,\n          elRef: _this8.cellElRefs.createRef(cell.key),\n          dateProfile: props.dateProfile,\n          date: cell.date,\n          nowDate: props.nowDate,\n          todayRange: props.todayRange,\n          extraRenderProps: cell.extraRenderProps,\n          extraDataAttrs: cell.extraDataAttrs,\n          extraClassNames: cell.extraClassNames,\n          extraDateSpan: cell.extraDateSpan,\n          fgEventSegs: fgEventSegsByRow[i],\n          bgEventSegs: bgEventSegsByRow[i],\n          businessHourSegs: businessHourSegsByRow[i],\n          nowIndicatorSegs: nowIndicatorSegsByRow[i],\n          dateSelectionSegs: dateSelectionSegsByRow[i],\n          eventDrag: eventDragByRow[i],\n          eventResize: eventResizeByRow[i],\n          slatCoords: props.slatCoords,\n          eventSelection: props.eventSelection,\n          forPrint: props.forPrint\n        });\n      })))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateCoords();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateCoords();\n    }\n  }, {\n    key: \"updateCoords\",\n    value: function updateCoords() {\n      var props = this.props;\n\n      if (props.onColCoords && props.clientWidth !== null // means sizing has stabilized\n      ) {\n        props.onColCoords(new PositionCache(this.rootElRef.current, collectCellEls(this.cellElRefs.currentMap, props.cells), true, // horizontal\n        false));\n      }\n    }\n  }]);\n\n  return TimeColsContent;\n}(BaseComponent);\n\nfunction collectCellEls(elMap, cells) {\n  return cells.map(function (cell) {\n    return elMap[cell.key];\n  });\n}\n/* A component that renders one or more columns of vertical time slots\n----------------------------------------------------------------------------------------------------------------------*/\n\n\nvar TimeCols = /*#__PURE__*/function (_DateComponent2) {\n  _inherits(TimeCols, _DateComponent2);\n\n  var _super10 = _createSuper(TimeCols);\n\n  function TimeCols() {\n    var _this9;\n\n    _classCallCheck(this, TimeCols);\n\n    _this9 = _super10.apply(this, arguments);\n    _this9.processSlotOptions = memoize(processSlotOptions);\n    _this9.state = {\n      slatCoords: null\n    };\n\n    _this9.handleRootEl = function (el) {\n      if (el) {\n        _this9.context.registerInteractiveComponent(_assertThisInitialized(_this9), {\n          el: el,\n          isHitComboAllowed: _this9.props.isHitComboAllowed\n        });\n      } else {\n        _this9.context.unregisterInteractiveComponent(_assertThisInitialized(_this9));\n      }\n    };\n\n    _this9.handleScrollRequest = function (request) {\n      var onScrollTopRequest = _this9.props.onScrollTopRequest;\n      var slatCoords = _this9.state.slatCoords;\n\n      if (onScrollTopRequest && slatCoords) {\n        if (request.time) {\n          var top = slatCoords.computeTimeTop(request.time);\n          top = Math.ceil(top); // zoom can give weird floating-point values. rather scroll a little bit further\n\n          if (top) {\n            top += 1; // to overcome top border that slots beyond the first have. looks better\n          }\n\n          onScrollTopRequest(top);\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    _this9.handleColCoords = function (colCoords) {\n      _this9.colCoords = colCoords;\n    };\n\n    _this9.handleSlatCoords = function (slatCoords) {\n      _this9.setState({\n        slatCoords: slatCoords\n      });\n\n      if (_this9.props.onSlatCoords) {\n        _this9.props.onSlatCoords(slatCoords);\n      }\n    };\n\n    return _this9;\n  }\n\n  _createClass(TimeCols, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n          state = this.state;\n      return createElement(\"div\", {\n        className: \"fc-timegrid-body\",\n        ref: this.handleRootEl,\n        style: {\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth\n        }\n      }, createElement(TimeColsSlats, {\n        axis: props.axis,\n        dateProfile: props.dateProfile,\n        slatMetas: props.slatMetas,\n        clientWidth: props.clientWidth,\n        minHeight: props.expandRows ? props.clientHeight : '',\n        tableMinWidth: props.tableMinWidth,\n        tableColGroupNode: props.axis ? props.tableColGroupNode : null\n        /* axis depends on the colgroup's shrinking */\n        ,\n        onCoords: this.handleSlatCoords\n      }), createElement(TimeColsContent, {\n        cells: props.cells,\n        axis: props.axis,\n        dateProfile: props.dateProfile,\n        businessHourSegs: props.businessHourSegs,\n        bgEventSegs: props.bgEventSegs,\n        fgEventSegs: props.fgEventSegs,\n        dateSelectionSegs: props.dateSelectionSegs,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        todayRange: props.todayRange,\n        nowDate: props.nowDate,\n        nowIndicatorSegs: props.nowIndicatorSegs,\n        clientWidth: props.clientWidth,\n        tableMinWidth: props.tableMinWidth,\n        tableColGroupNode: props.tableColGroupNode,\n        slatCoords: state.slatCoords,\n        onColCoords: this.handleColCoords,\n        forPrint: props.forPrint\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.scrollResponder.detach();\n    }\n  }, {\n    key: \"queryHit\",\n    value: function queryHit(positionLeft, positionTop) {\n      var _this$context3 = this.context,\n          dateEnv = _this$context3.dateEnv,\n          options = _this$context3.options;\n      var colCoords = this.colCoords;\n      var dateProfile = this.props.dateProfile;\n      var slatCoords = this.state.slatCoords;\n\n      var _this$processSlotOpti = this.processSlotOptions(this.props.slotDuration, options.snapDuration),\n          snapDuration = _this$processSlotOpti.snapDuration,\n          snapsPerSlot = _this$processSlotOpti.snapsPerSlot;\n\n      var colIndex = colCoords.leftToIndex(positionLeft);\n      var slatIndex = slatCoords.positions.topToIndex(positionTop);\n\n      if (colIndex != null && slatIndex != null) {\n        var cell = this.props.cells[colIndex];\n        var slatTop = slatCoords.positions.tops[slatIndex];\n        var slatHeight = slatCoords.positions.getHeight(slatIndex);\n        var partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1\n\n        var localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\n\n        var snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\n        var dayDate = this.props.cells[colIndex].date;\n        var time = addDurations(dateProfile.slotMinTime, multiplyDuration(snapDuration, snapIndex));\n        var start = dateEnv.add(dayDate, time);\n        var end = dateEnv.add(start, snapDuration);\n        return {\n          dateProfile: dateProfile,\n          dateSpan: Object.assign({\n            range: {\n              start: start,\n              end: end\n            },\n            allDay: false\n          }, cell.extraDateSpan),\n          dayEl: colCoords.els[colIndex],\n          rect: {\n            left: colCoords.lefts[colIndex],\n            right: colCoords.rights[colIndex],\n            top: slatTop,\n            bottom: slatTop + slatHeight\n          },\n          layer: 0\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return TimeCols;\n}(DateComponent);\n\nfunction processSlotOptions(slotDuration, snapDurationOverride) {\n  var snapDuration = snapDurationOverride || slotDuration;\n  var snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration);\n\n  if (snapsPerSlot === null) {\n    snapDuration = slotDuration;\n    snapsPerSlot = 1; // TODO: say warning?\n  }\n\n  return {\n    snapDuration: snapDuration,\n    snapsPerSlot: snapsPerSlot\n  };\n}\n\nvar DayTimeColsSlicer = /*#__PURE__*/function (_Slicer) {\n  _inherits(DayTimeColsSlicer, _Slicer);\n\n  var _super11 = _createSuper(DayTimeColsSlicer);\n\n  function DayTimeColsSlicer() {\n    _classCallCheck(this, DayTimeColsSlicer);\n\n    return _super11.apply(this, arguments);\n  }\n\n  _createClass(DayTimeColsSlicer, [{\n    key: \"sliceRange\",\n    value: function sliceRange(range, dayRanges) {\n      var segs = [];\n\n      for (var col = 0; col < dayRanges.length; col += 1) {\n        var segRange = intersectRanges(range, dayRanges[col]);\n\n        if (segRange) {\n          segs.push({\n            start: segRange.start,\n            end: segRange.end,\n            isStart: segRange.start.valueOf() === range.start.valueOf(),\n            isEnd: segRange.end.valueOf() === range.end.valueOf(),\n            col: col\n          });\n        }\n      }\n\n      return segs;\n    }\n  }]);\n\n  return DayTimeColsSlicer;\n}(Slicer);\n\nvar DayTimeCols = /*#__PURE__*/function (_DateComponent3) {\n  _inherits(DayTimeCols, _DateComponent3);\n\n  var _super12 = _createSuper(DayTimeCols);\n\n  function DayTimeCols() {\n    var _this10;\n\n    _classCallCheck(this, DayTimeCols);\n\n    _this10 = _super12.apply(this, arguments);\n    _this10.buildDayRanges = memoize(buildDayRanges);\n    _this10.slicer = new DayTimeColsSlicer();\n    _this10.timeColsRef = createRef();\n    return _this10;\n  }\n\n  _createClass(DayTimeCols, [{\n    key: \"render\",\n    value: function render() {\n      var _this11 = this;\n\n      var props = this.props,\n          context = this.context;\n      var dateProfile = props.dateProfile,\n          dayTableModel = props.dayTableModel;\n      var _context$options = context.options,\n          nowIndicator = _context$options.nowIndicator,\n          nextDayThreshold = _context$options.nextDayThreshold;\n      var dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv); // give it the first row of cells\n      // TODO: would move this further down hierarchy, but sliceNowDate needs it\n\n      return createElement(NowTimer, {\n        unit: nowIndicator ? 'minute' : 'day'\n      }, function (nowDate, todayRange) {\n        return createElement(TimeCols, Object.assign({\n          ref: _this11.timeColsRef\n        }, _this11.slicer.sliceProps(props, dateProfile, null, context, dayRanges), {\n          forPrint: props.forPrint,\n          axis: props.axis,\n          dateProfile: dateProfile,\n          slatMetas: props.slatMetas,\n          slotDuration: props.slotDuration,\n          cells: dayTableModel.cells[0],\n          tableColGroupNode: props.tableColGroupNode,\n          tableMinWidth: props.tableMinWidth,\n          clientWidth: props.clientWidth,\n          clientHeight: props.clientHeight,\n          expandRows: props.expandRows,\n          nowDate: nowDate,\n          nowIndicatorSegs: nowIndicator && _this11.slicer.sliceNowDate(nowDate, dateProfile, nextDayThreshold, context, dayRanges),\n          todayRange: todayRange,\n          onScrollTopRequest: props.onScrollTopRequest,\n          onSlatCoords: props.onSlatCoords\n        }));\n      });\n    }\n  }]);\n\n  return DayTimeCols;\n}(DateComponent);\n\nfunction buildDayRanges(dayTableModel, dateProfile, dateEnv) {\n  var ranges = [];\n\n  var _iterator5 = _createForOfIteratorHelper(dayTableModel.headerDates),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var date = _step5.value;\n      ranges.push({\n        start: dateEnv.add(date, dateProfile.slotMinTime),\n        end: dateEnv.add(date, dateProfile.slotMaxTime)\n      });\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  return ranges;\n} // potential nice values for the slot-duration and interval-duration\n// from largest to smallest\n\n\nvar STOCK_SUB_DURATIONS = [{\n  hours: 1\n}, {\n  minutes: 30\n}, {\n  minutes: 15\n}, {\n  seconds: 30\n}, {\n  seconds: 15\n}];\n\nfunction buildSlatMetas(slotMinTime, slotMaxTime, explicitLabelInterval, slotDuration, dateEnv) {\n  var dayStart = new Date(0);\n  var slatTime = slotMinTime;\n  var slatIterator = createDuration(0);\n  var labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration);\n  var metas = [];\n\n  while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {\n    var date = dateEnv.add(dayStart, slatTime);\n    var isLabeled = wholeDivideDurations(slatIterator, labelInterval) !== null;\n    metas.push({\n      date: date,\n      time: slatTime,\n      key: date.toISOString(),\n      isoTimeStr: formatIsoTimeString(date),\n      isLabeled: isLabeled\n    });\n    slatTime = addDurations(slatTime, slotDuration);\n    slatIterator = addDurations(slatIterator, slotDuration);\n  }\n\n  return metas;\n} // Computes an automatic value for slotLabelInterval\n\n\nfunction computeLabelInterval(slotDuration) {\n  var i;\n  var labelInterval;\n  var slotsPerLabel; // find the smallest stock label interval that results in more than one slots-per-label\n\n  for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {\n    labelInterval = createDuration(STOCK_SUB_DURATIONS[i]);\n    slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration);\n\n    if (slotsPerLabel !== null && slotsPerLabel > 1) {\n      return labelInterval;\n    }\n  }\n\n  return slotDuration; // fall back\n}\n\nvar DayTimeColsView = /*#__PURE__*/function (_TimeColsView) {\n  _inherits(DayTimeColsView, _TimeColsView);\n\n  var _super13 = _createSuper(DayTimeColsView);\n\n  function DayTimeColsView() {\n    var _this12;\n\n    _classCallCheck(this, DayTimeColsView);\n\n    _this12 = _super13.apply(this, arguments);\n    _this12.buildTimeColsModel = memoize(buildTimeColsModel);\n    _this12.buildSlatMetas = memoize(buildSlatMetas);\n    return _this12;\n  }\n\n  _createClass(DayTimeColsView, [{\n    key: \"render\",\n    value: function render() {\n      var _this13 = this;\n\n      var _this$context4 = this.context,\n          options = _this$context4.options,\n          dateEnv = _this$context4.dateEnv,\n          dateProfileGenerator = _this$context4.dateProfileGenerator;\n      var props = this.props;\n      var dateProfile = props.dateProfile;\n      var dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator);\n      var splitProps = this.allDaySplitter.splitProps(props);\n      var slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);\n      var dayMinWidth = options.dayMinWidth;\n      var hasAttachedAxis = !dayMinWidth;\n      var hasDetachedAxis = dayMinWidth;\n      var headerContent = options.dayHeaders && createElement(DayHeader, {\n        dates: dayTableModel.headerDates,\n        dateProfile: dateProfile,\n        datesRepDistinctDays: true,\n        renderIntro: hasAttachedAxis ? this.renderHeadAxis : null\n      });\n\n      var allDayContent = options.allDaySlot !== false && function (contentArg) {\n        return createElement(DayTable, Object.assign({}, splitProps.allDay, {\n          dateProfile: dateProfile,\n          dayTableModel: dayTableModel,\n          nextDayThreshold: options.nextDayThreshold,\n          tableMinWidth: contentArg.tableMinWidth,\n          colGroupNode: contentArg.tableColGroupNode,\n          renderRowIntro: hasAttachedAxis ? _this13.renderTableRowAxis : null,\n          showWeekNumbers: false,\n          expandRows: false,\n          headerAlignElRef: _this13.headerElRef,\n          clientWidth: contentArg.clientWidth,\n          clientHeight: contentArg.clientHeight,\n          forPrint: props.forPrint\n        }, _this13.getAllDayMaxEventProps()));\n      };\n\n      var timeGridContent = function timeGridContent(contentArg) {\n        return createElement(DayTimeCols, Object.assign({}, splitProps.timed, {\n          dayTableModel: dayTableModel,\n          dateProfile: dateProfile,\n          axis: hasAttachedAxis,\n          slotDuration: options.slotDuration,\n          slatMetas: slatMetas,\n          forPrint: props.forPrint,\n          tableColGroupNode: contentArg.tableColGroupNode,\n          tableMinWidth: contentArg.tableMinWidth,\n          clientWidth: contentArg.clientWidth,\n          clientHeight: contentArg.clientHeight,\n          onSlatCoords: _this13.handleSlatCoords,\n          expandRows: contentArg.expandRows,\n          onScrollTopRequest: _this13.handleScrollTopRequest\n        }));\n      };\n\n      return hasDetachedAxis ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, dayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords) : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);\n    }\n  }]);\n\n  return DayTimeColsView;\n}(TimeColsView);\n\nfunction buildTimeColsModel(dateProfile, dateProfileGenerator) {\n  var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, false);\n}\n\nvar css_248z = \".fc-v-event{background-color:var(--fc-event-bg-color);border:1px solid var(--fc-event-border-color);display:block}.fc-v-event .fc-event-main{color:var(--fc-event-text-color);height:100%}.fc-v-event .fc-event-main-frame{display:flex;flex-direction:column;height:100%}.fc-v-event .fc-event-time{flex-grow:0;flex-shrink:0;max-height:100%;overflow:hidden}.fc-v-event .fc-event-title-container{flex-grow:1;flex-shrink:1;min-height:0}.fc-v-event .fc-event-title{bottom:0;max-height:100%;overflow:hidden;top:0}.fc-v-event:not(.fc-event-start){border-top-left-radius:0;border-top-right-radius:0;border-top-width:0}.fc-v-event:not(.fc-event-end){border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-width:0}.fc-v-event.fc-event-selected:before{left:-10px;right:-10px}.fc-v-event .fc-event-resizer-start{cursor:n-resize}.fc-v-event .fc-event-resizer-end{cursor:s-resize}.fc-v-event:not(.fc-event-selected) .fc-event-resizer{height:var(--fc-event-resizer-thickness);left:0;right:0}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-start{top:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer{left:50%;margin-left:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-start{top:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc .fc-timegrid .fc-daygrid-body{z-index:2}.fc .fc-timegrid-divider{padding:0 0 2px}.fc .fc-timegrid-body{min-height:100%;position:relative;z-index:1}.fc .fc-timegrid-axis-chunk{position:relative}.fc .fc-timegrid-axis-chunk>table,.fc .fc-timegrid-slots{position:relative;z-index:1}.fc .fc-timegrid-slot{border-bottom:0;height:1.5em}.fc .fc-timegrid-slot:empty:before{content:\\\"\\\\00a0\\\"}.fc .fc-timegrid-slot-minor{border-top-style:dotted}.fc .fc-timegrid-slot-label-cushion{display:inline-block;white-space:nowrap}.fc .fc-timegrid-slot-label{vertical-align:middle}.fc .fc-timegrid-axis-cushion,.fc .fc-timegrid-slot-label-cushion{padding:0 4px}.fc .fc-timegrid-axis-frame-liquid{height:100%}.fc .fc-timegrid-axis-frame{align-items:center;display:flex;justify-content:flex-end;overflow:hidden}.fc .fc-timegrid-axis-cushion{flex-shrink:0;max-width:60px}.fc-direction-ltr .fc-timegrid-slot-label-frame{text-align:right}.fc-direction-rtl .fc-timegrid-slot-label-frame{text-align:left}.fc-liquid-hack .fc-timegrid-axis-frame-liquid{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-timegrid-col-frame{min-height:100%;position:relative}.fc-media-screen.fc-liquid-hack .fc-timegrid-col-frame{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols{bottom:0;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols>table{height:100%}.fc-media-screen .fc-timegrid-col-bg,.fc-media-screen .fc-timegrid-col-events,.fc-media-screen .fc-timegrid-now-indicator-container{left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col-bg{z-index:2}.fc .fc-timegrid-col-bg .fc-non-business{z-index:1}.fc .fc-timegrid-col-bg .fc-bg-event{z-index:2}.fc .fc-timegrid-col-bg .fc-highlight{z-index:3}.fc .fc-timegrid-bg-harness{left:0;position:absolute;right:0}.fc .fc-timegrid-col-events{z-index:3}.fc .fc-timegrid-now-indicator-container{bottom:0;overflow:hidden}.fc-direction-ltr .fc-timegrid-col-events{margin:0 2.5% 0 2px}.fc-direction-rtl .fc-timegrid-col-events{margin:0 2px 0 2.5%}.fc-timegrid-event-harness{position:absolute}.fc-timegrid-event-harness>.fc-timegrid-event{bottom:0;left:0;position:absolute;right:0;top:0}.fc-timegrid-event-harness-inset .fc-timegrid-event,.fc-timegrid-event.fc-event-mirror,.fc-timegrid-more-link{box-shadow:0 0 0 1px var(--fc-page-bg-color)}.fc-timegrid-event,.fc-timegrid-more-link{border-radius:3px;font-size:var(--fc-small-font-size)}.fc-timegrid-event{margin-bottom:1px}.fc-timegrid-event .fc-event-main{padding:1px 1px 0}.fc-timegrid-event .fc-event-time{font-size:var(--fc-small-font-size);margin-bottom:1px;white-space:nowrap}.fc-timegrid-event-short .fc-event-main-frame{flex-direction:row;overflow:hidden}.fc-timegrid-event-short .fc-event-time:after{content:\\\"\\\\00a0-\\\\00a0\\\"}.fc-timegrid-event-short .fc-event-title{font-size:var(--fc-small-font-size)}.fc-timegrid-more-link{background:var(--fc-more-link-bg-color);color:var(--fc-more-link-text-color);cursor:pointer;margin-bottom:1px;position:absolute;z-index:9999}.fc-timegrid-more-link-inner{padding:3px 2px;top:0}.fc-direction-ltr .fc-timegrid-more-link{right:0}.fc-direction-rtl .fc-timegrid-more-link{left:0}.fc .fc-timegrid-now-indicator-line{border-color:var(--fc-now-indicator-color);border-style:solid;border-width:1px 0 0;left:0;position:absolute;right:0;z-index:4}.fc .fc-timegrid-now-indicator-arrow{border-color:var(--fc-now-indicator-color);border-style:solid;margin-top:-5px;position:absolute;z-index:4}.fc-direction-ltr .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 0 5px 6px;left:0}.fc-direction-rtl .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 6px 5px 0;right:0}\";\ninjectStyles(css_248z);\nexport { DayTimeCols, DayTimeColsSlicer, DayTimeColsView, TimeCols, TimeColsSlatsCoords, TimeColsView, buildDayRanges, buildSlatMetas, buildTimeColsModel };","map":{"version":3,"names":["Splitter","hasBgRendering","createFormatter","ViewContextType","ContentContainer","BaseComponent","DateComponent","diffDays","buildNavLinkAttrs","WeekNumberContainer","getStickyHeaderDates","ViewContainer","SimpleScrollGrid","getStickyFooterScrollbar","NowTimer","NowIndicatorContainer","renderScrollShim","rangeContainsMarker","startOfDay","asRoughMs","createDuration","RefMap","PositionCache","MoreLinkContainer","SegHierarchy","groupIntersectingEntries","binarySearch","getEntrySpanEnd","buildEntryKey","StandardEvent","memoize","sortEventSegs","DayCellContainer","hasCustomDayCellContent","getSegMeta","buildIsoString","computeEarliestSegStart","buildEventRangeKey","BgEvent","renderFill","addDurations","multiplyDuration","wholeDivideDurations","Slicer","intersectRanges","formatIsoTimeString","DayHeader","DaySeriesModel","DayTableModel","injectStyles","createElement","createRef","Fragment","DayTable","AllDaySplitter","allDay","timed","dateSpan","eventDef","DEFAULT_SLAT_LABEL_FORMAT","hour","minute","omitZeroMinute","meridiem","TimeColsAxisCell","props","classNames","isLabeled","Consumer","context","className","join","isoTimeStr","dateEnv","options","viewApi","labelFormat","slotLabelFormat","Array","isArray","renderProps","level","time","date","toDate","view","text","format","elTag","elClasses","elAttrs","generatorName","customGenerator","slotLabelContent","defaultGenerator","renderInnerContent","classNameGenerator","slotLabelClassNames","didMount","slotLabelDidMount","willUnmount","slotLabelWillUnmount","InnerContent","TimeBodyAxis","slatMetas","map","slatMeta","key","Object","assign","DEFAULT_WEEK_NUM_FORMAT","week","AUTO_ALL_DAY_MAX_EVENT_ROWS","TimeColsView","arguments","allDaySplitter","headerElRef","rootElRef","scrollerElRef","state","slatCoords","handleScrollTopRequest","scrollTop","scrollerEl","current","renderHeadAxis","rowKey","frameHeight","dateProfile","range","renderRange","dayCnt","start","end","navLinkAttrs","weekNumbers","defaultFormat","style","height","renderTableRowAxis","rowHeight","allDayText","allDayContent","renderAllDayInner","allDayClassNames","allDayDidMount","allDayWillUnmount","handleSlatCoords","setState","headerRowContent","timeContent","sections","stickyHeaderDates","push","type","isSticky","chunk","elRef","tableClassName","rowContent","content","outerContent","role","theme","getClass","liquid","expandRows","Boolean","viewSpec","isHeightAuto","forPrint","collapsibleWidth","cols","width","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","syncRowHeights","chunks","arg","rowSyncHeights","contentArg","colSpan","isNowIndicator","nowIndicator","clientHeight","tableColGroupNode","unit","nowDate","nowIndicatorTop","safeComputeTop","elStyle","top","isAxis","colGroups","span","minWidth","dayMaxEvents","dayMaxEventRows","undefined","TimeColsSlatsCoords","positions","slotDuration","currentRange","startOfDayDate","timeMs","valueOf","slotMinTime","slotMaxTime","computeTimeTop","when","duration","len","els","length","slatCoverage","milliseconds","slatIndex","slatRemainder","Math","max","min","floor","tops","getHeight","TimeColsSlatsBody","slatElRefs","i","ref","axis","slotLaneContent","slotLaneClassNames","slotLaneDidMount","slotLaneWillUnmount","TimeColsSlats","tableMinWidth","clientWidth","minHeight","updateSizing","onCoords","rootEl","offsetHeight","collectSlatEls","currentMap","elMap","splitSegsByCol","segs","segsByCol","col","splitInteractionByCol","ui","byRow","affectedInstances","isEvent","seg","TimeColMoreLink","bottom","allDayDate","moreCnt","hiddenSegs","allSegs","extraDateSpan","todayRange","popoverContent","renderPlainFgSegs","renderMoreLinkInner","forceTimed","shortText","buildPositioning","segInputs","strictOrder","maxStackCnt","hierarchy","hiddenEntries","addSegs","hiddenGroups","web","buildWeb","stretchWeb","segRects","webToRects","entriesByLevel","buildNode","cacheable","lateral","siblingRange","findNextLevelSegs","nextLevelRes","buildNodes","entry","nextLevelNodes","thickness","lateralStart","lateralEnd","pairs","sort","cmpDescPressures","extractNode","a","b","subjectLevel","subjectLateral","levelCoords","subjectEntry","afterSubject","levelCnt","entries","searchIndex","topLevelNodes","totalThickness","stretchNode","node","startCoord","prevThickness","allThickness","thicknessFraction","endCoord","newChildren","childNode","res","newThickness","rects","processNode","levelCoord","stackDepth","rect","stackForward","processNodes","nodes","keyFunc","workFunc","cache","computeSegVCoords","colDate","eventMinHeight","vcoords","spanStart","computeDateTop","spanEnd","round","computeFgSegPlacements","segVCoords","eventOrderStrict","eventMaxStack","dumbSegs","index","segPlacements","segRect","dumbSeg","DEFAULT_TIME_FORMAT","TimeColEvent","isShort","defaultTimeFormat","TimeCol","isSelectMirror","selectMirror","mirrorSegs","eventDrag","eventResize","dateSelectionSegs","interactionAffectedInstances","sortedFgSegs","fgEventSegs","eventOrder","extraClassNames","extraDataAttrs","extraRenderProps","renderFillSegs","businessHourSegs","bgEventSegs","renderFgSegs","renderNowIndicator","nowIndicatorSegs","segIsInvisible","isDragging","isResizing","isDateSelecting","forcedKey","renderPositionedFgSegs","eventShortHeight","eventSelection","isMirror","renderHiddenGroups","segPlacement","instanceId","eventRange","instance","isVisible","vStyle","computeSegVStyle","hStyle","computeSegHStyle","left","right","isInset","visibility","isSelected","hiddenGroup","positionCss","compileSegsFromEntries","fillType","children","segHCoords","isRtl","shouldOverlap","slotEventOverlap","nearCoord","farCoord","zIndex","hiddenInstances","segEntries","segEntry","TimeColsContent","splitFgEventSegs","splitBgEventSegs","splitBusinessHourSegs","splitNowIndicatorSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","cellElRefs","cells","fgEventSegsByRow","bgEventSegsByRow","businessHourSegsByRow","nowIndicatorSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","cell","updateCoords","onColCoords","collectCellEls","TimeCols","processSlotOptions","handleRootEl","el","registerInteractiveComponent","isHitComboAllowed","unregisterInteractiveComponent","handleScrollRequest","request","onScrollTopRequest","ceil","handleColCoords","colCoords","onSlatCoords","scrollResponder","createScrollResponder","prevProps","update","detach","positionLeft","positionTop","snapDuration","snapsPerSlot","colIndex","leftToIndex","topToIndex","slatTop","slatHeight","partial","localSnapIndex","snapIndex","dayDate","add","dayEl","lefts","rights","layer","snapDurationOverride","DayTimeColsSlicer","dayRanges","segRange","isStart","isEnd","DayTimeCols","buildDayRanges","slicer","timeColsRef","dayTableModel","nextDayThreshold","sliceProps","sliceNowDate","ranges","headerDates","STOCK_SUB_DURATIONS","hours","minutes","seconds","buildSlatMetas","explicitLabelInterval","dayStart","Date","slatTime","slatIterator","labelInterval","computeLabelInterval","metas","toISOString","slotsPerLabel","DayTimeColsView","buildTimeColsModel","dateProfileGenerator","splitProps","slotLabelInterval","hasAttachedAxis","hasDetachedAxis","headerContent","dayHeaders","dates","datesRepDistinctDays","renderIntro","allDaySlot","colGroupNode","renderRowIntro","showWeekNumbers","headerAlignElRef","getAllDayMaxEventProps","timeGridContent","renderHScrollLayout","renderSimpleLayout","daySeries","css_248z"],"sources":["C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@fullcalendar/timegrid/internal.js"],"sourcesContent":["import { Splitter, hasBgRendering, createFormatter, ViewContextType, ContentContainer, BaseComponent, DateComponent, diffDays, buildNavLinkAttrs, WeekNumberContainer, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, NowTimer, NowIndicatorContainer, renderScrollShim, rangeContainsMarker, startOfDay, asRoughMs, createDuration, RefMap, PositionCache, MoreLinkContainer, SegHierarchy, groupIntersectingEntries, binarySearch, getEntrySpanEnd, buildEntryKey, StandardEvent, memoize, sortEventSegs, DayCellContainer, hasCustomDayCellContent, getSegMeta, buildIsoString, computeEarliestSegStart, buildEventRangeKey, BgEvent, renderFill, addDurations, multiplyDuration, wholeDivideDurations, Slicer, intersectRanges, formatIsoTimeString, DayHeader, DaySeriesModel, DayTableModel, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createElement, createRef, Fragment } from '@fullcalendar/core/preact.js';\nimport { DayTable } from '@fullcalendar/daygrid/internal.js';\n\nclass AllDaySplitter extends Splitter {\n    getKeyInfo() {\n        return {\n            allDay: {},\n            timed: {},\n        };\n    }\n    getKeysForDateSpan(dateSpan) {\n        if (dateSpan.allDay) {\n            return ['allDay'];\n        }\n        return ['timed'];\n    }\n    getKeysForEventDef(eventDef) {\n        if (!eventDef.allDay) {\n            return ['timed'];\n        }\n        if (hasBgRendering(eventDef)) {\n            return ['timed', 'allDay'];\n        }\n        return ['allDay'];\n    }\n}\n\nconst DEFAULT_SLAT_LABEL_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'short',\n});\nfunction TimeColsAxisCell(props) {\n    let classNames = [\n        'fc-timegrid-slot',\n        'fc-timegrid-slot-label',\n        props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor',\n    ];\n    return (createElement(ViewContextType.Consumer, null, (context) => {\n        if (!props.isLabeled) {\n            return (createElement(\"td\", { className: classNames.join(' '), \"data-time\": props.isoTimeStr }));\n        }\n        let { dateEnv, options, viewApi } = context;\n        let labelFormat = // TODO: fully pre-parse\n         options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT :\n            Array.isArray(options.slotLabelFormat) ? createFormatter(options.slotLabelFormat[0]) :\n                createFormatter(options.slotLabelFormat);\n        let renderProps = {\n            level: 0,\n            time: props.time,\n            date: dateEnv.toDate(props.date),\n            view: viewApi,\n            text: dateEnv.format(props.date, labelFormat),\n        };\n        return (createElement(ContentContainer, { elTag: \"td\", elClasses: classNames, elAttrs: {\n                'data-time': props.isoTimeStr,\n            }, renderProps: renderProps, generatorName: \"slotLabelContent\", customGenerator: options.slotLabelContent, defaultGenerator: renderInnerContent, classNameGenerator: options.slotLabelClassNames, didMount: options.slotLabelDidMount, willUnmount: options.slotLabelWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame\" },\n            createElement(InnerContent, { elTag: \"div\", elClasses: [\n                    'fc-timegrid-slot-label-cushion',\n                    'fc-scrollgrid-shrink-cushion',\n                ] })))));\n    }));\n}\nfunction renderInnerContent(props) {\n    return props.text;\n}\n\nclass TimeBodyAxis extends BaseComponent {\n    render() {\n        return this.props.slatMetas.map((slatMeta) => (createElement(\"tr\", { key: slatMeta.key },\n            createElement(TimeColsAxisCell, Object.assign({}, slatMeta)))));\n    }\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'short' });\nconst AUTO_ALL_DAY_MAX_EVENT_ROWS = 5;\nclass TimeColsView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.allDaySplitter = new AllDaySplitter(); // for use by subclasses\n        this.headerElRef = createRef();\n        this.rootElRef = createRef();\n        this.scrollerElRef = createRef();\n        this.state = {\n            slatCoords: null,\n        };\n        this.handleScrollTopRequest = (scrollTop) => {\n            let scrollerEl = this.scrollerElRef.current;\n            if (scrollerEl) { // TODO: not sure how this could ever be null. weirdness with the reducer\n                scrollerEl.scrollTop = scrollTop;\n            }\n        };\n        /* Header Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        this.renderHeadAxis = (rowKey, frameHeight = '') => {\n            let { options } = this.context;\n            let { dateProfile } = this.props;\n            let range = dateProfile.renderRange;\n            let dayCnt = diffDays(range.start, range.end);\n            // only do in day views (to avoid doing in week views that dont need it)\n            let navLinkAttrs = (dayCnt === 1)\n                ? buildNavLinkAttrs(this.context, range.start, 'week')\n                : {};\n            if (options.weekNumbers && rowKey === 'day') {\n                return (createElement(WeekNumberContainer, { elTag: \"th\", elClasses: [\n                        'fc-timegrid-axis',\n                        'fc-scrollgrid-shrink',\n                    ], elAttrs: {\n                        'aria-hidden': true,\n                    }, date: range.start, defaultFormat: DEFAULT_WEEK_NUM_FORMAT }, (InnerContent) => (createElement(\"div\", { className: [\n                        'fc-timegrid-axis-frame',\n                        'fc-scrollgrid-shrink-frame',\n                        'fc-timegrid-axis-frame-liquid',\n                    ].join(' '), style: { height: frameHeight } },\n                    createElement(InnerContent, { elTag: \"a\", elClasses: [\n                            'fc-timegrid-axis-cushion',\n                            'fc-scrollgrid-shrink-cushion',\n                            'fc-scrollgrid-sync-inner',\n                        ], elAttrs: navLinkAttrs })))));\n            }\n            return (createElement(\"th\", { \"aria-hidden\": true, className: \"fc-timegrid-axis\" },\n                createElement(\"div\", { className: \"fc-timegrid-axis-frame\", style: { height: frameHeight } })));\n        };\n        /* Table Component Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,\n        // but DayGrid still needs to have classNames on inner elements in order to measure.\n        this.renderTableRowAxis = (rowHeight) => {\n            let { options, viewApi } = this.context;\n            let renderProps = {\n                text: options.allDayText,\n                view: viewApi,\n            };\n            return (\n            // TODO: make reusable hook. used in list view too\n            createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                    'fc-timegrid-axis',\n                    'fc-scrollgrid-shrink',\n                ], elAttrs: {\n                    'aria-hidden': true,\n                }, renderProps: renderProps, generatorName: \"allDayContent\", customGenerator: options.allDayContent, defaultGenerator: renderAllDayInner, classNameGenerator: options.allDayClassNames, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }, (InnerContent) => (createElement(\"div\", { className: [\n                    'fc-timegrid-axis-frame',\n                    'fc-scrollgrid-shrink-frame',\n                    rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : '',\n                ].join(' '), style: { height: rowHeight } },\n                createElement(InnerContent, { elTag: \"span\", elClasses: [\n                        'fc-timegrid-axis-cushion',\n                        'fc-scrollgrid-shrink-cushion',\n                        'fc-scrollgrid-sync-inner',\n                    ] })))));\n        };\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n        };\n    }\n    // rendering\n    // ----------------------------------------------------------------------------------------------------\n    renderSimpleLayout(headerRowContent, allDayContent, timeContent) {\n        let { context, props } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                chunk: { content: allDayContent },\n            });\n            sections.push({\n                type: 'body',\n                key: 'all-day-divider',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { role: \"presentation\", className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunk: {\n                scrollerElRef: this.scrollerElRef,\n                content: timeContent,\n            },\n        });\n        return (createElement(ViewContainer, { elRef: this.rootElRef, elClasses: ['fc-timegrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [{ width: 'shrink' }], sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, allDayContent, timeContent, colCnt, dayMinWidth, slatMetas, slatCoords) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { context, props } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: (arg) => (createElement(\"tr\", { role: \"presentation\" }, this.renderHeadAxis('day', arg.rowSyncHeights[0]))),\n                    },\n                    {\n                        key: 'cols',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    },\n                ],\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: (contentArg) => (createElement(\"tr\", { role: \"presentation\" }, this.renderTableRowAxis(contentArg.rowSyncHeights[0]))),\n                    },\n                    {\n                        key: 'cols',\n                        content: allDayContent,\n                    },\n                ],\n            });\n            sections.push({\n                key: 'all-day-divider',\n                type: 'body',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { role: \"presentation\", className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { colSpan: 2, className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        let isNowIndicator = context.options.nowIndicator;\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunks: [\n                {\n                    key: 'axis',\n                    content: (arg) => (\n                    // TODO: make this now-indicator arrow more DRY with TimeColsContent\n                    createElement(\"div\", { className: \"fc-timegrid-axis-chunk\" },\n                        createElement(\"table\", { \"aria-hidden\": true, style: { height: arg.expandRows ? arg.clientHeight : '' } },\n                            arg.tableColGroupNode,\n                            createElement(\"tbody\", null,\n                                createElement(TimeBodyAxis, { slatMetas: slatMetas }))),\n                        createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" },\n                            createElement(NowTimer, { unit: isNowIndicator ? 'minute' : 'day' /* hacky */ }, (nowDate) => {\n                                let nowIndicatorTop = isNowIndicator &&\n                                    slatCoords &&\n                                    slatCoords.safeComputeTop(nowDate); // might return void\n                                if (typeof nowIndicatorTop === 'number') {\n                                    return (createElement(NowIndicatorContainer, { elClasses: ['fc-timegrid-now-indicator-arrow'], elStyle: { top: nowIndicatorTop }, isAxis: true, date: nowDate }));\n                                }\n                                return null;\n                            })))),\n                },\n                {\n                    key: 'cols',\n                    scrollerElRef: this.scrollerElRef,\n                    content: timeContent,\n                },\n            ],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                key: 'footer',\n                type: 'footer',\n                isSticky: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        content: renderScrollShim,\n                    },\n                    {\n                        key: 'cols',\n                        content: renderScrollShim,\n                    },\n                ],\n            });\n        }\n        return (createElement(ViewContainer, { elRef: this.rootElRef, elClasses: ['fc-timegrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: false, colGroups: [\n                    { width: 'shrink', cols: [{ width: 'shrink' }] },\n                    { cols: [{ span: colCnt, minWidth: dayMinWidth }] },\n                ], sections: sections })));\n    }\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n    getAllDayMaxEventProps() {\n        let { dayMaxEvents, dayMaxEventRows } = this.context.options;\n        if (dayMaxEvents === true || dayMaxEventRows === true) { // is auto?\n            dayMaxEvents = undefined;\n            dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS; // make sure \"auto\" goes to a real number\n        }\n        return { dayMaxEvents, dayMaxEventRows };\n    }\n}\nfunction renderAllDayInner(renderProps) {\n    return renderProps.text;\n}\n\nclass TimeColsSlatsCoords {\n    constructor(positions, dateProfile, slotDuration) {\n        this.positions = positions;\n        this.dateProfile = dateProfile;\n        this.slotDuration = slotDuration;\n    }\n    safeComputeTop(date) {\n        let { dateProfile } = this;\n        if (rangeContainsMarker(dateProfile.currentRange, date)) {\n            let startOfDayDate = startOfDay(date);\n            let timeMs = date.valueOf() - startOfDayDate.valueOf();\n            if (timeMs >= asRoughMs(dateProfile.slotMinTime) &&\n                timeMs < asRoughMs(dateProfile.slotMaxTime)) {\n                return this.computeTimeTop(createDuration(timeMs));\n            }\n        }\n        return null;\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n    // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n    computeDateTop(when, startOfDayDate) {\n        if (!startOfDayDate) {\n            startOfDayDate = startOfDay(when);\n        }\n        return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()));\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n    // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.\n    // Eventually allow computation with arbirary slat dates.\n    computeTimeTop(duration) {\n        let { positions, dateProfile } = this;\n        let len = positions.els.length;\n        // floating-point value of # of slots covered\n        let slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) / asRoughMs(this.slotDuration);\n        let slatIndex;\n        let slatRemainder;\n        // compute a floating-point number for how many slats should be progressed through.\n        // from 0 to number of slats (inclusive)\n        // constrained because slotMinTime/slotMaxTime might be customized.\n        slatCoverage = Math.max(0, slatCoverage);\n        slatCoverage = Math.min(len, slatCoverage);\n        // an integer index of the furthest whole slat\n        // from 0 to number slats (*exclusive*, so len-1)\n        slatIndex = Math.floor(slatCoverage);\n        slatIndex = Math.min(slatIndex, len - 1);\n        // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n        // could be 1.0 if slatCoverage is covering *all* the slots\n        slatRemainder = slatCoverage - slatIndex;\n        return positions.tops[slatIndex] +\n            positions.getHeight(slatIndex) * slatRemainder;\n    }\n}\n\nclass TimeColsSlatsBody extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { slatElRefs } = props;\n        return (createElement(\"tbody\", null, props.slatMetas.map((slatMeta, i) => {\n            let renderProps = {\n                time: slatMeta.time,\n                date: context.dateEnv.toDate(slatMeta.date),\n                view: context.viewApi,\n            };\n            return (createElement(\"tr\", { key: slatMeta.key, ref: slatElRefs.createRef(slatMeta.key) },\n                props.axis && (createElement(TimeColsAxisCell, Object.assign({}, slatMeta))),\n                createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                        'fc-timegrid-slot',\n                        'fc-timegrid-slot-lane',\n                        !slatMeta.isLabeled && 'fc-timegrid-slot-minor',\n                    ], elAttrs: {\n                        'data-time': slatMeta.isoTimeStr,\n                    }, renderProps: renderProps, generatorName: \"slotLaneContent\", customGenerator: options.slotLaneContent, classNameGenerator: options.slotLaneClassNames, didMount: options.slotLaneDidMount, willUnmount: options.slotLaneWillUnmount })));\n        })));\n    }\n}\n\n/*\nfor the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n*/\nclass TimeColsSlats extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.slatElRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(\"div\", { ref: this.rootElRef, className: \"fc-timegrid-slots\" },\n            createElement(\"table\", { \"aria-hidden\": true, className: context.theme.getClass('table'), style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                    height: props.minHeight,\n                } },\n                props.tableColGroupNode /* relies on there only being a single <col> for the axis */,\n                createElement(TimeColsSlatsBody, { slatElRefs: this.slatElRefs, axis: props.axis, slatMetas: props.slatMetas }))));\n    }\n    componentDidMount() {\n        this.updateSizing();\n    }\n    componentDidUpdate() {\n        this.updateSizing();\n    }\n    componentWillUnmount() {\n        if (this.props.onCoords) {\n            this.props.onCoords(null);\n        }\n    }\n    updateSizing() {\n        let { context, props } = this;\n        if (props.onCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            let rootEl = this.rootElRef.current;\n            if (rootEl.offsetHeight) { // not hidden by css\n                props.onCoords(new TimeColsSlatsCoords(new PositionCache(this.rootElRef.current, collectSlatEls(this.slatElRefs.currentMap, props.slatMetas), false, true), this.props.dateProfile, context.options.slotDuration));\n            }\n        }\n    }\n}\nfunction collectSlatEls(elMap, slatMetas) {\n    return slatMetas.map((slatMeta) => elMap[slatMeta.key]);\n}\n\nfunction splitSegsByCol(segs, colCnt) {\n    let segsByCol = [];\n    let i;\n    for (i = 0; i < colCnt; i += 1) {\n        segsByCol.push([]);\n    }\n    if (segs) {\n        for (i = 0; i < segs.length; i += 1) {\n            segsByCol[segs[i].col].push(segs[i]);\n        }\n    }\n    return segsByCol;\n}\nfunction splitInteractionByCol(ui, colCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < colCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < colCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.col].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nclass TimeColMoreLink extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-timegrid-more-link'], elStyle: {\n                top: props.top,\n                bottom: props.bottom,\n            }, allDayDate: null, moreCnt: props.hiddenSegs.length, allSegs: props.hiddenSegs, hiddenSegs: props.hiddenSegs, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, todayRange: props.todayRange, popoverContent: () => renderPlainFgSegs(props.hiddenSegs, props), defaultGenerator: renderMoreLinkInner, forceTimed: true }, (InnerContent) => (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-timegrid-more-link-inner', 'fc-sticky'] }))));\n    }\n}\nfunction renderMoreLinkInner(props) {\n    return props.shortText;\n}\n\n// segInputs assumed sorted\nfunction buildPositioning(segInputs, strictOrder, maxStackCnt) {\n    let hierarchy = new SegHierarchy();\n    if (strictOrder != null) {\n        hierarchy.strictOrder = strictOrder;\n    }\n    if (maxStackCnt != null) {\n        hierarchy.maxStackCnt = maxStackCnt;\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let hiddenGroups = groupIntersectingEntries(hiddenEntries);\n    let web = buildWeb(hierarchy);\n    web = stretchWeb(web, 1); // all levelCoords/thickness will have 0.0-1.0\n    let segRects = webToRects(web);\n    return { segRects, hiddenGroups };\n}\nfunction buildWeb(hierarchy) {\n    const { entriesByLevel } = hierarchy;\n    const buildNode = cacheable((level, lateral) => level + ':' + lateral, (level, lateral) => {\n        let siblingRange = findNextLevelSegs(hierarchy, level, lateral);\n        let nextLevelRes = buildNodes(siblingRange, buildNode);\n        let entry = entriesByLevel[level][lateral];\n        return [\n            Object.assign(Object.assign({}, entry), { nextLevelNodes: nextLevelRes[0] }),\n            entry.thickness + nextLevelRes[1], // the pressure builds\n        ];\n    });\n    return buildNodes(entriesByLevel.length\n        ? { level: 0, lateralStart: 0, lateralEnd: entriesByLevel[0].length }\n        : null, buildNode)[0];\n}\nfunction buildNodes(siblingRange, buildNode) {\n    if (!siblingRange) {\n        return [[], 0];\n    }\n    let { level, lateralStart, lateralEnd } = siblingRange;\n    let lateral = lateralStart;\n    let pairs = [];\n    while (lateral < lateralEnd) {\n        pairs.push(buildNode(level, lateral));\n        lateral += 1;\n    }\n    pairs.sort(cmpDescPressures);\n    return [\n        pairs.map(extractNode),\n        pairs[0][1], // first item's pressure\n    ];\n}\nfunction cmpDescPressures(a, b) {\n    return b[1] - a[1];\n}\nfunction extractNode(a) {\n    return a[0];\n}\nfunction findNextLevelSegs(hierarchy, subjectLevel, subjectLateral) {\n    let { levelCoords, entriesByLevel } = hierarchy;\n    let subjectEntry = entriesByLevel[subjectLevel][subjectLateral];\n    let afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness;\n    let levelCnt = levelCoords.length;\n    let level = subjectLevel;\n    // skip past levels that are too high up\n    for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1)\n        ; // do nothing\n    for (; level < levelCnt; level += 1) {\n        let entries = entriesByLevel[level];\n        let entry;\n        let searchIndex = binarySearch(entries, subjectEntry.span.start, getEntrySpanEnd);\n        let lateralStart = searchIndex[0] + searchIndex[1]; // if exact match (which doesn't collide), go to next one\n        let lateralEnd = lateralStart;\n        while ( // loop through entries that horizontally intersect\n        (entry = entries[lateralEnd]) && // but not past the whole seg list\n            entry.span.start < subjectEntry.span.end) {\n            lateralEnd += 1;\n        }\n        if (lateralStart < lateralEnd) {\n            return { level, lateralStart, lateralEnd };\n        }\n    }\n    return null;\n}\nfunction stretchWeb(topLevelNodes, totalThickness) {\n    const stretchNode = cacheable((node, startCoord, prevThickness) => buildEntryKey(node), (node, startCoord, prevThickness) => {\n        let { nextLevelNodes, thickness } = node;\n        let allThickness = thickness + prevThickness;\n        let thicknessFraction = thickness / allThickness;\n        let endCoord;\n        let newChildren = [];\n        if (!nextLevelNodes.length) {\n            endCoord = totalThickness;\n        }\n        else {\n            for (let childNode of nextLevelNodes) {\n                if (endCoord === undefined) {\n                    let res = stretchNode(childNode, startCoord, allThickness);\n                    endCoord = res[0];\n                    newChildren.push(res[1]);\n                }\n                else {\n                    let res = stretchNode(childNode, endCoord, 0);\n                    newChildren.push(res[1]);\n                }\n            }\n        }\n        let newThickness = (endCoord - startCoord) * thicknessFraction;\n        return [endCoord - newThickness, Object.assign(Object.assign({}, node), { thickness: newThickness, nextLevelNodes: newChildren })];\n    });\n    return topLevelNodes.map((node) => stretchNode(node, 0, 0)[1]);\n}\n// not sorted in any particular order\nfunction webToRects(topLevelNodes) {\n    let rects = [];\n    const processNode = cacheable((node, levelCoord, stackDepth) => buildEntryKey(node), (node, levelCoord, stackDepth) => {\n        let rect = Object.assign(Object.assign({}, node), { levelCoord,\n            stackDepth, stackForward: 0 });\n        rects.push(rect);\n        return (rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1);\n    });\n    function processNodes(nodes, levelCoord, stackDepth) {\n        let stackForward = 0;\n        for (let node of nodes) {\n            stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward);\n        }\n        return stackForward;\n    }\n    processNodes(topLevelNodes, 0, 0);\n    return rects; // TODO: sort rects by levelCoord to be consistent with toRects?\n}\n// TODO: move to general util\nfunction cacheable(keyFunc, workFunc) {\n    const cache = {};\n    return (...args) => {\n        let key = keyFunc(...args);\n        return (key in cache)\n            ? cache[key]\n            : (cache[key] = workFunc(...args));\n    };\n}\n\nfunction computeSegVCoords(segs, colDate, slatCoords = null, eventMinHeight = 0) {\n    let vcoords = [];\n    if (slatCoords) {\n        for (let i = 0; i < segs.length; i += 1) {\n            let seg = segs[i];\n            let spanStart = slatCoords.computeDateTop(seg.start, colDate);\n            let spanEnd = Math.max(spanStart + (eventMinHeight || 0), // :(\n            slatCoords.computeDateTop(seg.end, colDate));\n            vcoords.push({\n                start: Math.round(spanStart),\n                end: Math.round(spanEnd), //\n            });\n        }\n    }\n    return vcoords;\n}\nfunction computeFgSegPlacements(segs, segVCoords, // might not have for every seg\neventOrderStrict, eventMaxStack) {\n    let segInputs = [];\n    let dumbSegs = []; // segs without coords\n    for (let i = 0; i < segs.length; i += 1) {\n        let vcoords = segVCoords[i];\n        if (vcoords) {\n            segInputs.push({\n                index: i,\n                thickness: 1,\n                span: vcoords,\n            });\n        }\n        else {\n            dumbSegs.push(segs[i]);\n        }\n    }\n    let { segRects, hiddenGroups } = buildPositioning(segInputs, eventOrderStrict, eventMaxStack);\n    let segPlacements = [];\n    for (let segRect of segRects) {\n        segPlacements.push({\n            seg: segs[segRect.index],\n            rect: segRect,\n        });\n    }\n    for (let dumbSeg of dumbSegs) {\n        segPlacements.push({ seg: dumbSeg, rect: null });\n    }\n    return { segPlacements, hiddenGroups };\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    meridiem: false,\n});\nclass TimeColEvent extends BaseComponent {\n    render() {\n        return (createElement(StandardEvent, Object.assign({}, this.props, { elClasses: [\n                'fc-timegrid-event',\n                'fc-v-event',\n                this.props.isShort && 'fc-timegrid-event-short',\n            ], defaultTimeFormat: DEFAULT_TIME_FORMAT })));\n    }\n}\n\nclass TimeCol extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.sortEventSegs = memoize(sortEventSegs);\n    }\n    // TODO: memoize event-placement?\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let isSelectMirror = options.selectMirror;\n        let mirrorSegs = // yuck\n         (props.eventDrag && props.eventDrag.segs) ||\n            (props.eventResize && props.eventResize.segs) ||\n            (isSelectMirror && props.dateSelectionSegs) ||\n            [];\n        let interactionAffectedInstances = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        let sortedFgSegs = this.sortEventSegs(props.fgEventSegs, options.eventOrder);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: props.elRef, elClasses: [\n                'fc-timegrid-col',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign({ role: 'gridcell' }, props.extraDataAttrs), date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraRenderProps: props.extraRenderProps }, (InnerContent) => (createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n            createElement(\"div\", { className: \"fc-timegrid-col-bg\" },\n                this.renderFillSegs(props.businessHourSegs, 'non-business'),\n                this.renderFillSegs(props.bgEventSegs, 'bg-event'),\n                this.renderFillSegs(props.dateSelectionSegs, 'highlight')),\n            createElement(\"div\", { className: \"fc-timegrid-col-events\" }, this.renderFgSegs(sortedFgSegs, interactionAffectedInstances, false, false, false)),\n            createElement(\"div\", { className: \"fc-timegrid-col-events\" }, this.renderFgSegs(mirrorSegs, {}, Boolean(props.eventDrag), Boolean(props.eventResize), Boolean(isSelectMirror), 'mirror')),\n            createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, this.renderNowIndicator(props.nowIndicatorSegs)),\n            hasCustomDayCellContent(options) && (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-timegrid-col-misc'] }))))));\n    }\n    renderFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n        let { props } = this;\n        if (props.forPrint) {\n            return renderPlainFgSegs(sortedFgSegs, props);\n        }\n        return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey);\n    }\n    renderPositionedFgSegs(segs, // if not mirror, needs to be sorted\n    segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n        let { eventMaxStack, eventShortHeight, eventOrderStrict, eventMinHeight } = this.context.options;\n        let { date, slatCoords, eventSelection, todayRange, nowDate } = this.props;\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let segVCoords = computeSegVCoords(segs, date, slatCoords, eventMinHeight);\n        let { segPlacements, hiddenGroups } = computeFgSegPlacements(segs, segVCoords, eventOrderStrict, eventMaxStack);\n        return (createElement(Fragment, null,\n            this.renderHiddenGroups(hiddenGroups, segs),\n            segPlacements.map((segPlacement) => {\n                let { seg, rect } = segPlacement;\n                let instanceId = seg.eventRange.instance.instanceId;\n                let isVisible = isMirror || Boolean(!segIsInvisible[instanceId] && rect);\n                let vStyle = computeSegVStyle(rect && rect.span);\n                let hStyle = (!isMirror && rect) ? this.computeSegHStyle(rect) : { left: 0, right: 0 };\n                let isInset = Boolean(rect) && rect.stackForward > 0;\n                let isShort = Boolean(rect) && (rect.span.end - rect.span.start) < eventShortHeight; // look at other places for this problem\n                return (createElement(\"div\", { className: 'fc-timegrid-event-harness' +\n                        (isInset ? ' fc-timegrid-event-harness-inset' : ''), key: forcedKey || instanceId, style: Object.assign(Object.assign({ visibility: isVisible ? '' : 'hidden' }, vStyle), hStyle) },\n                    createElement(TimeColEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, isShort: isShort }, getSegMeta(seg, todayRange, nowDate)))));\n            })));\n    }\n    // will already have eventMinHeight applied because segInputs already had it\n    renderHiddenGroups(hiddenGroups, segs) {\n        let { extraDateSpan, dateProfile, todayRange, nowDate, eventSelection, eventDrag, eventResize } = this.props;\n        return (createElement(Fragment, null, hiddenGroups.map((hiddenGroup) => {\n            let positionCss = computeSegVStyle(hiddenGroup.span);\n            let hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs);\n            return (createElement(TimeColMoreLink, { key: buildIsoString(computeEarliestSegStart(hiddenSegs)), hiddenSegs: hiddenSegs, top: positionCss.top, bottom: positionCss.bottom, extraDateSpan: extraDateSpan, dateProfile: dateProfile, todayRange: todayRange, nowDate: nowDate, eventSelection: eventSelection, eventDrag: eventDrag, eventResize: eventResize }));\n        })));\n    }\n    renderFillSegs(segs, fillType) {\n        let { props, context } = this;\n        let segVCoords = computeSegVCoords(segs, props.date, props.slatCoords, context.options.eventMinHeight); // don't assume all populated\n        let children = segVCoords.map((vcoords, i) => {\n            let seg = segs[i];\n            return (createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-timegrid-bg-harness\", style: computeSegVStyle(vcoords) }, fillType === 'bg-event' ?\n                createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, props.todayRange, props.nowDate))) :\n                renderFill(fillType)));\n        });\n        return createElement(Fragment, null, children);\n    }\n    renderNowIndicator(segs) {\n        let { slatCoords, date } = this.props;\n        if (!slatCoords) {\n            return null;\n        }\n        return segs.map((seg, i) => (createElement(NowIndicatorContainer\n        // key doesn't matter. will only ever be one\n        , { \n            // key doesn't matter. will only ever be one\n            key: i, elClasses: ['fc-timegrid-now-indicator-line'], elStyle: {\n                top: slatCoords.computeDateTop(seg.start, date),\n            }, isAxis: false, date: date })));\n    }\n    computeSegHStyle(segHCoords) {\n        let { isRtl, options } = this.context;\n        let shouldOverlap = options.slotEventOverlap;\n        let nearCoord = segHCoords.levelCoord; // the left side if LTR. the right side if RTL. floating-point\n        let farCoord = segHCoords.levelCoord + segHCoords.thickness; // the right side if LTR. the left side if RTL. floating-point\n        let left; // amount of space from left edge, a fraction of the total width\n        let right; // amount of space from right edge, a fraction of the total width\n        if (shouldOverlap) {\n            // double the width, but don't go beyond the maximum forward coordinate (1.0)\n            farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2);\n        }\n        if (isRtl) {\n            left = 1 - farCoord;\n            right = nearCoord;\n        }\n        else {\n            left = nearCoord;\n            right = 1 - farCoord;\n        }\n        let props = {\n            zIndex: segHCoords.stackDepth + 1,\n            left: left * 100 + '%',\n            right: right * 100 + '%',\n        };\n        if (shouldOverlap && !segHCoords.stackForward) {\n            // add padding to the edge so that forward stacked events don't cover the resizer's icon\n            props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\n        }\n        return props;\n    }\n}\nfunction renderPlainFgSegs(sortedFgSegs, { todayRange, nowDate, eventSelection, eventDrag, eventResize }) {\n    let hiddenInstances = (eventDrag ? eventDrag.affectedInstances : null) ||\n        (eventResize ? eventResize.affectedInstances : null) ||\n        {};\n    return (createElement(Fragment, null, sortedFgSegs.map((seg) => {\n        let instanceId = seg.eventRange.instance.instanceId;\n        return (createElement(\"div\", { key: instanceId, style: { visibility: hiddenInstances[instanceId] ? 'hidden' : '' } },\n            createElement(TimeColEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === eventSelection, isShort: false }, getSegMeta(seg, todayRange, nowDate)))));\n    })));\n}\nfunction computeSegVStyle(segVCoords) {\n    if (!segVCoords) {\n        return { top: '', bottom: '' };\n    }\n    return {\n        top: segVCoords.start,\n        bottom: -segVCoords.end,\n    };\n}\nfunction compileSegsFromEntries(segEntries, allSegs) {\n    return segEntries.map((segEntry) => allSegs[segEntry.index]);\n}\n\nclass TimeColsContent extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.splitFgEventSegs = memoize(splitSegsByCol);\n        this.splitBgEventSegs = memoize(splitSegsByCol);\n        this.splitBusinessHourSegs = memoize(splitSegsByCol);\n        this.splitNowIndicatorSegs = memoize(splitSegsByCol);\n        this.splitDateSelectionSegs = memoize(splitSegsByCol);\n        this.splitEventDrag = memoize(splitInteractionByCol);\n        this.splitEventResize = memoize(splitInteractionByCol);\n        this.rootElRef = createRef();\n        this.cellElRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let nowIndicatorTop = context.options.nowIndicator &&\n            props.slatCoords &&\n            props.slatCoords.safeComputeTop(props.nowDate); // might return void\n        let colCnt = props.cells.length;\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt);\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt);\n        let nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, colCnt);\n        return (createElement(\"div\", { className: \"fc-timegrid-cols\", ref: this.rootElRef },\n            createElement(\"table\", { role: \"presentation\", style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                } },\n                props.tableColGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(\"tr\", { role: \"row\" },\n                        props.axis && (createElement(\"td\", { \"aria-hidden\": true, className: \"fc-timegrid-col fc-timegrid-axis\" },\n                            createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n                                createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, typeof nowIndicatorTop === 'number' && (createElement(NowIndicatorContainer, { elClasses: ['fc-timegrid-now-indicator-arrow'], elStyle: { top: nowIndicatorTop }, isAxis: true, date: props.nowDate })))))),\n                        props.cells.map((cell, i) => (createElement(TimeCol, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), dateProfile: props.dateProfile, date: cell.date, nowDate: props.nowDate, todayRange: props.todayRange, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, fgEventSegs: fgEventSegsByRow[i], bgEventSegs: bgEventSegsByRow[i], businessHourSegs: businessHourSegsByRow[i], nowIndicatorSegs: nowIndicatorSegsByRow[i], dateSelectionSegs: dateSelectionSegsByRow[i], eventDrag: eventDragByRow[i], eventResize: eventResizeByRow[i], slatCoords: props.slatCoords, eventSelection: props.eventSelection, forPrint: props.forPrint }))))))));\n    }\n    componentDidMount() {\n        this.updateCoords();\n    }\n    componentDidUpdate() {\n        this.updateCoords();\n    }\n    updateCoords() {\n        let { props } = this;\n        if (props.onColCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            props.onColCoords(new PositionCache(this.rootElRef.current, collectCellEls(this.cellElRefs.currentMap, props.cells), true, // horizontal\n            false));\n        }\n    }\n}\nfunction collectCellEls(elMap, cells) {\n    return cells.map((cell) => elMap[cell.key]);\n}\n\n/* A component that renders one or more columns of vertical time slots\n----------------------------------------------------------------------------------------------------------------------*/\nclass TimeCols extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.processSlotOptions = memoize(processSlotOptions);\n        this.state = {\n            slatCoords: null,\n        };\n        this.handleRootEl = (el) => {\n            if (el) {\n                this.context.registerInteractiveComponent(this, {\n                    el,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n        this.handleScrollRequest = (request) => {\n            let { onScrollTopRequest } = this.props;\n            let { slatCoords } = this.state;\n            if (onScrollTopRequest && slatCoords) {\n                if (request.time) {\n                    let top = slatCoords.computeTimeTop(request.time);\n                    top = Math.ceil(top); // zoom can give weird floating-point values. rather scroll a little bit further\n                    if (top) {\n                        top += 1; // to overcome top border that slots beyond the first have. looks better\n                    }\n                    onScrollTopRequest(top);\n                }\n                return true;\n            }\n            return false;\n        };\n        this.handleColCoords = (colCoords) => {\n            this.colCoords = colCoords;\n        };\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n            if (this.props.onSlatCoords) {\n                this.props.onSlatCoords(slatCoords);\n            }\n        };\n    }\n    render() {\n        let { props, state } = this;\n        return (createElement(\"div\", { className: \"fc-timegrid-body\", ref: this.handleRootEl, style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(TimeColsSlats, { axis: props.axis, dateProfile: props.dateProfile, slatMetas: props.slatMetas, clientWidth: props.clientWidth, minHeight: props.expandRows ? props.clientHeight : '', tableMinWidth: props.tableMinWidth, tableColGroupNode: props.axis ? props.tableColGroupNode : null /* axis depends on the colgroup's shrinking */, onCoords: this.handleSlatCoords }),\n            createElement(TimeColsContent, { cells: props.cells, axis: props.axis, dateProfile: props.dateProfile, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange, nowDate: props.nowDate, nowIndicatorSegs: props.nowIndicatorSegs, clientWidth: props.clientWidth, tableMinWidth: props.tableMinWidth, tableColGroupNode: props.tableColGroupNode, slatCoords: state.slatCoords, onColCoords: this.handleColCoords, forPrint: props.forPrint })));\n    }\n    componentDidMount() {\n        this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);\n    }\n    componentDidUpdate(prevProps) {\n        this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);\n    }\n    componentWillUnmount() {\n        this.scrollResponder.detach();\n    }\n    queryHit(positionLeft, positionTop) {\n        let { dateEnv, options } = this.context;\n        let { colCoords } = this;\n        let { dateProfile } = this.props;\n        let { slatCoords } = this.state;\n        let { snapDuration, snapsPerSlot } = this.processSlotOptions(this.props.slotDuration, options.snapDuration);\n        let colIndex = colCoords.leftToIndex(positionLeft);\n        let slatIndex = slatCoords.positions.topToIndex(positionTop);\n        if (colIndex != null && slatIndex != null) {\n            let cell = this.props.cells[colIndex];\n            let slatTop = slatCoords.positions.tops[slatIndex];\n            let slatHeight = slatCoords.positions.getHeight(slatIndex);\n            let partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1\n            let localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\n            let snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\n            let dayDate = this.props.cells[colIndex].date;\n            let time = addDurations(dateProfile.slotMinTime, multiplyDuration(snapDuration, snapIndex));\n            let start = dateEnv.add(dayDate, time);\n            let end = dateEnv.add(start, snapDuration);\n            return {\n                dateProfile,\n                dateSpan: Object.assign({ range: { start, end }, allDay: false }, cell.extraDateSpan),\n                dayEl: colCoords.els[colIndex],\n                rect: {\n                    left: colCoords.lefts[colIndex],\n                    right: colCoords.rights[colIndex],\n                    top: slatTop,\n                    bottom: slatTop + slatHeight,\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n}\nfunction processSlotOptions(slotDuration, snapDurationOverride) {\n    let snapDuration = snapDurationOverride || slotDuration;\n    let snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration);\n    if (snapsPerSlot === null) {\n        snapDuration = slotDuration;\n        snapsPerSlot = 1;\n        // TODO: say warning?\n    }\n    return { snapDuration, snapsPerSlot };\n}\n\nclass DayTimeColsSlicer extends Slicer {\n    sliceRange(range, dayRanges) {\n        let segs = [];\n        for (let col = 0; col < dayRanges.length; col += 1) {\n            let segRange = intersectRanges(range, dayRanges[col]);\n            if (segRange) {\n                segs.push({\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: segRange.end.valueOf() === range.end.valueOf(),\n                    col,\n                });\n            }\n        }\n        return segs;\n    }\n}\n\nclass DayTimeCols extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.buildDayRanges = memoize(buildDayRanges);\n        this.slicer = new DayTimeColsSlicer();\n        this.timeColsRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        let { dateProfile, dayTableModel } = props;\n        let { nowIndicator, nextDayThreshold } = context.options;\n        let dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv);\n        // give it the first row of cells\n        // TODO: would move this further down hierarchy, but sliceNowDate needs it\n        return (createElement(NowTimer, { unit: nowIndicator ? 'minute' : 'day' }, (nowDate, todayRange) => (createElement(TimeCols, Object.assign({ ref: this.timeColsRef }, this.slicer.sliceProps(props, dateProfile, null, context, dayRanges), { forPrint: props.forPrint, axis: props.axis, dateProfile: dateProfile, slatMetas: props.slatMetas, slotDuration: props.slotDuration, cells: dayTableModel.cells[0], tableColGroupNode: props.tableColGroupNode, tableMinWidth: props.tableMinWidth, clientWidth: props.clientWidth, clientHeight: props.clientHeight, expandRows: props.expandRows, nowDate: nowDate, nowIndicatorSegs: nowIndicator && this.slicer.sliceNowDate(nowDate, dateProfile, nextDayThreshold, context, dayRanges), todayRange: todayRange, onScrollTopRequest: props.onScrollTopRequest, onSlatCoords: props.onSlatCoords })))));\n    }\n}\nfunction buildDayRanges(dayTableModel, dateProfile, dateEnv) {\n    let ranges = [];\n    for (let date of dayTableModel.headerDates) {\n        ranges.push({\n            start: dateEnv.add(date, dateProfile.slotMinTime),\n            end: dateEnv.add(date, dateProfile.slotMaxTime),\n        });\n    }\n    return ranges;\n}\n\n// potential nice values for the slot-duration and interval-duration\n// from largest to smallest\nconst STOCK_SUB_DURATIONS = [\n    { hours: 1 },\n    { minutes: 30 },\n    { minutes: 15 },\n    { seconds: 30 },\n    { seconds: 15 },\n];\nfunction buildSlatMetas(slotMinTime, slotMaxTime, explicitLabelInterval, slotDuration, dateEnv) {\n    let dayStart = new Date(0);\n    let slatTime = slotMinTime;\n    let slatIterator = createDuration(0);\n    let labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration);\n    let metas = [];\n    while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {\n        let date = dateEnv.add(dayStart, slatTime);\n        let isLabeled = wholeDivideDurations(slatIterator, labelInterval) !== null;\n        metas.push({\n            date,\n            time: slatTime,\n            key: date.toISOString(),\n            isoTimeStr: formatIsoTimeString(date),\n            isLabeled,\n        });\n        slatTime = addDurations(slatTime, slotDuration);\n        slatIterator = addDurations(slatIterator, slotDuration);\n    }\n    return metas;\n}\n// Computes an automatic value for slotLabelInterval\nfunction computeLabelInterval(slotDuration) {\n    let i;\n    let labelInterval;\n    let slotsPerLabel;\n    // find the smallest stock label interval that results in more than one slots-per-label\n    for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {\n        labelInterval = createDuration(STOCK_SUB_DURATIONS[i]);\n        slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration);\n        if (slotsPerLabel !== null && slotsPerLabel > 1) {\n            return labelInterval;\n        }\n    }\n    return slotDuration; // fall back\n}\n\nclass DayTimeColsView extends TimeColsView {\n    constructor() {\n        super(...arguments);\n        this.buildTimeColsModel = memoize(buildTimeColsModel);\n        this.buildSlatMetas = memoize(buildSlatMetas);\n    }\n    render() {\n        let { options, dateEnv, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let { dateProfile } = props;\n        let dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator);\n        let splitProps = this.allDaySplitter.splitProps(props);\n        let slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);\n        let { dayMinWidth } = options;\n        let hasAttachedAxis = !dayMinWidth;\n        let hasDetachedAxis = dayMinWidth;\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { dates: dayTableModel.headerDates, dateProfile: dateProfile, datesRepDistinctDays: true, renderIntro: hasAttachedAxis ? this.renderHeadAxis : null }));\n        let allDayContent = (options.allDaySlot !== false) && ((contentArg) => (createElement(DayTable, Object.assign({}, splitProps.allDay, { dateProfile: dateProfile, dayTableModel: dayTableModel, nextDayThreshold: options.nextDayThreshold, tableMinWidth: contentArg.tableMinWidth, colGroupNode: contentArg.tableColGroupNode, renderRowIntro: hasAttachedAxis ? this.renderTableRowAxis : null, showWeekNumbers: false, expandRows: false, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }, this.getAllDayMaxEventProps()))));\n        let timeGridContent = (contentArg) => (createElement(DayTimeCols, Object.assign({}, splitProps.timed, { dayTableModel: dayTableModel, dateProfile: dateProfile, axis: hasAttachedAxis, slotDuration: options.slotDuration, slatMetas: slatMetas, forPrint: props.forPrint, tableColGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, onSlatCoords: this.handleSlatCoords, expandRows: contentArg.expandRows, onScrollTopRequest: this.handleScrollTopRequest })));\n        return hasDetachedAxis\n            ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, dayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords)\n            : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);\n    }\n}\nfunction buildTimeColsModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, false);\n}\n\nvar css_248z = \".fc-v-event{background-color:var(--fc-event-bg-color);border:1px solid var(--fc-event-border-color);display:block}.fc-v-event .fc-event-main{color:var(--fc-event-text-color);height:100%}.fc-v-event .fc-event-main-frame{display:flex;flex-direction:column;height:100%}.fc-v-event .fc-event-time{flex-grow:0;flex-shrink:0;max-height:100%;overflow:hidden}.fc-v-event .fc-event-title-container{flex-grow:1;flex-shrink:1;min-height:0}.fc-v-event .fc-event-title{bottom:0;max-height:100%;overflow:hidden;top:0}.fc-v-event:not(.fc-event-start){border-top-left-radius:0;border-top-right-radius:0;border-top-width:0}.fc-v-event:not(.fc-event-end){border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-width:0}.fc-v-event.fc-event-selected:before{left:-10px;right:-10px}.fc-v-event .fc-event-resizer-start{cursor:n-resize}.fc-v-event .fc-event-resizer-end{cursor:s-resize}.fc-v-event:not(.fc-event-selected) .fc-event-resizer{height:var(--fc-event-resizer-thickness);left:0;right:0}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-start{top:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer{left:50%;margin-left:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-start{top:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc .fc-timegrid .fc-daygrid-body{z-index:2}.fc .fc-timegrid-divider{padding:0 0 2px}.fc .fc-timegrid-body{min-height:100%;position:relative;z-index:1}.fc .fc-timegrid-axis-chunk{position:relative}.fc .fc-timegrid-axis-chunk>table,.fc .fc-timegrid-slots{position:relative;z-index:1}.fc .fc-timegrid-slot{border-bottom:0;height:1.5em}.fc .fc-timegrid-slot:empty:before{content:\\\"\\\\00a0\\\"}.fc .fc-timegrid-slot-minor{border-top-style:dotted}.fc .fc-timegrid-slot-label-cushion{display:inline-block;white-space:nowrap}.fc .fc-timegrid-slot-label{vertical-align:middle}.fc .fc-timegrid-axis-cushion,.fc .fc-timegrid-slot-label-cushion{padding:0 4px}.fc .fc-timegrid-axis-frame-liquid{height:100%}.fc .fc-timegrid-axis-frame{align-items:center;display:flex;justify-content:flex-end;overflow:hidden}.fc .fc-timegrid-axis-cushion{flex-shrink:0;max-width:60px}.fc-direction-ltr .fc-timegrid-slot-label-frame{text-align:right}.fc-direction-rtl .fc-timegrid-slot-label-frame{text-align:left}.fc-liquid-hack .fc-timegrid-axis-frame-liquid{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-timegrid-col-frame{min-height:100%;position:relative}.fc-media-screen.fc-liquid-hack .fc-timegrid-col-frame{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols{bottom:0;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols>table{height:100%}.fc-media-screen .fc-timegrid-col-bg,.fc-media-screen .fc-timegrid-col-events,.fc-media-screen .fc-timegrid-now-indicator-container{left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col-bg{z-index:2}.fc .fc-timegrid-col-bg .fc-non-business{z-index:1}.fc .fc-timegrid-col-bg .fc-bg-event{z-index:2}.fc .fc-timegrid-col-bg .fc-highlight{z-index:3}.fc .fc-timegrid-bg-harness{left:0;position:absolute;right:0}.fc .fc-timegrid-col-events{z-index:3}.fc .fc-timegrid-now-indicator-container{bottom:0;overflow:hidden}.fc-direction-ltr .fc-timegrid-col-events{margin:0 2.5% 0 2px}.fc-direction-rtl .fc-timegrid-col-events{margin:0 2px 0 2.5%}.fc-timegrid-event-harness{position:absolute}.fc-timegrid-event-harness>.fc-timegrid-event{bottom:0;left:0;position:absolute;right:0;top:0}.fc-timegrid-event-harness-inset .fc-timegrid-event,.fc-timegrid-event.fc-event-mirror,.fc-timegrid-more-link{box-shadow:0 0 0 1px var(--fc-page-bg-color)}.fc-timegrid-event,.fc-timegrid-more-link{border-radius:3px;font-size:var(--fc-small-font-size)}.fc-timegrid-event{margin-bottom:1px}.fc-timegrid-event .fc-event-main{padding:1px 1px 0}.fc-timegrid-event .fc-event-time{font-size:var(--fc-small-font-size);margin-bottom:1px;white-space:nowrap}.fc-timegrid-event-short .fc-event-main-frame{flex-direction:row;overflow:hidden}.fc-timegrid-event-short .fc-event-time:after{content:\\\"\\\\00a0-\\\\00a0\\\"}.fc-timegrid-event-short .fc-event-title{font-size:var(--fc-small-font-size)}.fc-timegrid-more-link{background:var(--fc-more-link-bg-color);color:var(--fc-more-link-text-color);cursor:pointer;margin-bottom:1px;position:absolute;z-index:9999}.fc-timegrid-more-link-inner{padding:3px 2px;top:0}.fc-direction-ltr .fc-timegrid-more-link{right:0}.fc-direction-rtl .fc-timegrid-more-link{left:0}.fc .fc-timegrid-now-indicator-line{border-color:var(--fc-now-indicator-color);border-style:solid;border-width:1px 0 0;left:0;position:absolute;right:0;z-index:4}.fc .fc-timegrid-now-indicator-arrow{border-color:var(--fc-now-indicator-color);border-style:solid;margin-top:-5px;position:absolute;z-index:4}.fc-direction-ltr .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 0 5px 6px;left:0}.fc-direction-rtl .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 6px 5px 0;right:0}\";\ninjectStyles(css_248z);\n\nexport { DayTimeCols, DayTimeColsSlicer, DayTimeColsView, TimeCols, TimeColsSlatsCoords, TimeColsView, buildDayRanges, buildSlatMetas, buildTimeColsModel };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}