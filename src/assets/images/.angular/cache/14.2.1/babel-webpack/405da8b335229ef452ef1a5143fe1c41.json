{"ast":null,"code":"import _get from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _toConsumableArray from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { DateComponent, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DayHeader, DaySeriesModel, DayTableModel, DateProfileGenerator, addWeeks, diffWeeks, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createRef, createElement, Fragment } from '@fullcalendar/core/preact.js';\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nvar TableView = /*#__PURE__*/function (_DateComponent) {\n  _inherits(TableView, _DateComponent);\n\n  var _super = _createSuper(TableView);\n\n  function TableView() {\n    var _this;\n\n    _classCallCheck(this, TableView);\n\n    _this = _super.apply(this, arguments);\n    _this.headerElRef = createRef();\n    return _this;\n  }\n\n  _createClass(TableView, [{\n    key: \"renderSimpleLayout\",\n    value: function renderSimpleLayout(headerRowContent, bodyContent) {\n      var props = this.props,\n          context = this.context;\n      var sections = [];\n      var stickyHeaderDates = getStickyHeaderDates(context.options);\n\n      if (headerRowContent) {\n        sections.push({\n          type: 'header',\n          key: 'header',\n          isSticky: stickyHeaderDates,\n          chunk: {\n            elRef: this.headerElRef,\n            tableClassName: 'fc-col-header',\n            rowContent: headerRowContent\n          }\n        });\n      }\n\n      sections.push({\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        chunk: {\n          content: bodyContent\n        }\n      });\n      return createElement(ViewContainer, {\n        elClasses: ['fc-daygrid'],\n        viewSpec: context.viewSpec\n      }, createElement(SimpleScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        cols: []\n        /* TODO: make optional? */\n        ,\n        sections: sections\n      }));\n    }\n  }, {\n    key: \"renderHScrollLayout\",\n    value: function renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n      var ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n\n      if (!ScrollGrid) {\n        throw new Error('No ScrollGrid implementation');\n      }\n\n      var props = this.props,\n          context = this.context;\n      var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n      var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n      var sections = [];\n\n      if (headerRowContent) {\n        sections.push({\n          type: 'header',\n          key: 'header',\n          isSticky: stickyHeaderDates,\n          chunks: [{\n            key: 'main',\n            elRef: this.headerElRef,\n            tableClassName: 'fc-col-header',\n            rowContent: headerRowContent\n          }]\n        });\n      }\n\n      sections.push({\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        chunks: [{\n          key: 'main',\n          content: bodyContent\n        }]\n      });\n\n      if (stickyFooterScrollbar) {\n        sections.push({\n          type: 'footer',\n          key: 'footer',\n          isSticky: true,\n          chunks: [{\n            key: 'main',\n            content: renderScrollShim\n          }]\n        });\n      }\n\n      return createElement(ViewContainer, {\n        elClasses: ['fc-daygrid'],\n        viewSpec: context.viewSpec\n      }, createElement(ScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        forPrint: props.forPrint,\n        collapsibleWidth: props.forPrint,\n        colGroups: [{\n          cols: [{\n            span: colCnt,\n            minWidth: dayMinWidth\n          }]\n        }],\n        sections: sections\n      }));\n    }\n  }]);\n\n  return TableView;\n}(DateComponent);\n\nfunction splitSegsByRow(segs, rowCnt) {\n  var byRow = [];\n\n  for (var i = 0; i < rowCnt; i += 1) {\n    byRow[i] = [];\n  }\n\n  var _iterator = _createForOfIteratorHelper(segs),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var seg = _step.value;\n      byRow[seg.row].push(seg);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return byRow;\n}\n\nfunction splitSegsByFirstCol(segs, colCnt) {\n  var byCol = [];\n\n  for (var i = 0; i < colCnt; i += 1) {\n    byCol[i] = [];\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(segs),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var seg = _step2.value;\n      byCol[seg.firstCol].push(seg);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return byCol;\n}\n\nfunction splitInteractionByRow(ui, rowCnt) {\n  var byRow = [];\n\n  if (!ui) {\n    for (var i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (var _i = 0; _i < rowCnt; _i += 1) {\n      byRow[_i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n\n    var _iterator3 = _createForOfIteratorHelper(ui.segs),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var seg = _step3.value;\n        byRow[seg.row].segs.push(seg);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  return byRow;\n}\n\nvar DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow'\n});\n\nfunction hasListItemDisplay(seg) {\n  var display = seg.eventRange.ui.display;\n  return display === 'list-item' || display === 'auto' && !seg.eventRange.def.allDay && seg.firstCol === seg.lastCol && // can't be multi-day\n  seg.isStart && // \"\n  seg.isEnd // \"\n  ;\n}\n\nvar TableBlockEvent = /*#__PURE__*/function (_BaseComponent) {\n  _inherits(TableBlockEvent, _BaseComponent);\n\n  var _super2 = _createSuper(TableBlockEvent);\n\n  function TableBlockEvent() {\n    _classCallCheck(this, TableBlockEvent);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(TableBlockEvent, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return createElement(StandardEvent, Object.assign({}, props, {\n        elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'],\n        defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT,\n        defaultDisplayEventEnd: props.defaultDisplayEventEnd,\n        disableResizing: !props.seg.eventRange.def.allDay\n      }));\n    }\n  }]);\n\n  return TableBlockEvent;\n}(BaseComponent);\n\nvar TableListItemEvent = /*#__PURE__*/function (_BaseComponent2) {\n  _inherits(TableListItemEvent, _BaseComponent2);\n\n  var _super3 = _createSuper(TableListItemEvent);\n\n  function TableListItemEvent() {\n    _classCallCheck(this, TableListItemEvent);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(TableListItemEvent, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n          context = this.context;\n      var options = context.options;\n      var seg = props.seg;\n      var timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n      var timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n      return createElement(EventContainer, Object.assign({}, props, {\n        elTag: \"a\",\n        elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'],\n        elAttrs: getSegAnchorAttrs(props.seg, context),\n        defaultGenerator: renderInnerContent,\n        timeText: timeText,\n        isResizing: false,\n        isDateSelecting: false\n      }));\n    }\n  }]);\n\n  return TableListItemEvent;\n}(BaseComponent);\n\nfunction renderInnerContent(renderProps) {\n  return createElement(Fragment, null, createElement(\"div\", {\n    className: \"fc-daygrid-event-dot\",\n    style: {\n      borderColor: renderProps.borderColor || renderProps.backgroundColor\n    }\n  }), renderProps.timeText && createElement(\"div\", {\n    className: \"fc-event-time\"\n  }, renderProps.timeText), createElement(\"div\", {\n    className: \"fc-event-title\"\n  }, renderProps.event.title || createElement(Fragment, null, \"\\xA0\")));\n}\n\nvar TableCellMoreLink = /*#__PURE__*/function (_BaseComponent3) {\n  _inherits(TableCellMoreLink, _BaseComponent3);\n\n  var _super4 = _createSuper(TableCellMoreLink);\n\n  function TableCellMoreLink() {\n    var _this2;\n\n    _classCallCheck(this, TableCellMoreLink);\n\n    _this2 = _super4.apply(this, arguments);\n    _this2.compileSegs = memoize(compileSegs);\n    return _this2;\n  }\n\n  _createClass(TableCellMoreLink, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n\n      var _this$compileSegs = this.compileSegs(props.singlePlacements),\n          allSegs = _this$compileSegs.allSegs,\n          invisibleSegs = _this$compileSegs.invisibleSegs;\n\n      return createElement(MoreLinkContainer, {\n        elClasses: ['fc-daygrid-more-link'],\n        dateProfile: props.dateProfile,\n        todayRange: props.todayRange,\n        allDayDate: props.allDayDate,\n        moreCnt: props.moreCnt,\n        allSegs: allSegs,\n        hiddenSegs: invisibleSegs,\n        alignmentElRef: props.alignmentElRef,\n        alignGridTop: props.alignGridTop,\n        extraDateSpan: props.extraDateSpan,\n        popoverContent: function popoverContent() {\n          var isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) || (props.eventResize ? props.eventResize.affectedInstances : null) || {};\n          return createElement(Fragment, null, allSegs.map(function (seg) {\n            var instanceId = seg.eventRange.instance.instanceId;\n            return createElement(\"div\", {\n              className: \"fc-daygrid-event-harness\",\n              key: instanceId,\n              style: {\n                visibility: isForcedInvisible[instanceId] ? 'hidden' : ''\n              }\n            }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, Object.assign({\n              seg: seg,\n              isDragging: false,\n              isSelected: instanceId === props.eventSelection,\n              defaultDisplayEventEnd: false\n            }, getSegMeta(seg, props.todayRange))) : createElement(TableBlockEvent, Object.assign({\n              seg: seg,\n              isDragging: false,\n              isResizing: false,\n              isDateSelecting: false,\n              isSelected: instanceId === props.eventSelection,\n              defaultDisplayEventEnd: false\n            }, getSegMeta(seg, props.todayRange))));\n          }));\n        }\n      });\n    }\n  }]);\n\n  return TableCellMoreLink;\n}(BaseComponent);\n\nfunction compileSegs(singlePlacements) {\n  var allSegs = [];\n  var invisibleSegs = [];\n\n  var _iterator4 = _createForOfIteratorHelper(singlePlacements),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var placement = _step4.value;\n      allSegs.push(placement.seg);\n\n      if (!placement.isVisible) {\n        invisibleSegs.push(placement.seg);\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  return {\n    allSegs: allSegs,\n    invisibleSegs: invisibleSegs\n  };\n}\n\nvar DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'narrow'\n});\n\nvar TableCell = /*#__PURE__*/function (_DateComponent2) {\n  _inherits(TableCell, _DateComponent2);\n\n  var _super5 = _createSuper(TableCell);\n\n  function TableCell() {\n    var _this3;\n\n    _classCallCheck(this, TableCell);\n\n    _this3 = _super5.apply(this, arguments);\n    _this3.rootElRef = createRef();\n    _this3.state = {\n      dayNumberId: getUniqueDomId()\n    };\n\n    _this3.handleRootEl = function (el) {\n      setRef(_this3.rootElRef, el);\n      setRef(_this3.props.elRef, el);\n    };\n\n    return _this3;\n  }\n\n  _createClass(TableCell, [{\n    key: \"render\",\n    value: function render() {\n      var context = this.context,\n          props = this.props,\n          state = this.state,\n          rootElRef = this.rootElRef;\n      var options = context.options,\n          dateEnv = context.dateEnv;\n      var date = props.date,\n          dateProfile = props.dateProfile; // TODO: memoize this?\n\n      var isMonthStart = props.showDayNumber && shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n      return createElement(DayCellContainer, {\n        elTag: \"td\",\n        elRef: this.handleRootEl,\n        elClasses: ['fc-daygrid-day'].concat(_toConsumableArray(props.extraClassNames || [])),\n        elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), props.showDayNumber ? {\n          'aria-labelledby': state.dayNumberId\n        } : {}), {\n          role: 'gridcell'\n        }),\n        defaultGenerator: renderTopInner,\n        date: date,\n        dateProfile: dateProfile,\n        todayRange: props.todayRange,\n        showDayNumber: props.showDayNumber,\n        isMonthStart: isMonthStart,\n        extraRenderProps: props.extraRenderProps\n      }, function (InnerContent, renderProps) {\n        return createElement(\"div\", {\n          ref: props.innerElRef,\n          className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\",\n          style: {\n            minHeight: props.minHeight\n          }\n        }, props.showWeekNumber && createElement(WeekNumberContainer, {\n          elTag: \"a\",\n          elClasses: ['fc-daygrid-week-number'],\n          elAttrs: buildNavLinkAttrs(context, date, 'week'),\n          date: date,\n          defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n        }), !renderProps.isDisabled && (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? createElement(\"div\", {\n          className: \"fc-daygrid-day-top\"\n        }, createElement(InnerContent, {\n          elTag: \"a\",\n          elClasses: ['fc-daygrid-day-number', isMonthStart && 'fc-daygrid-month-start'],\n          elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), {\n            id: state.dayNumberId\n          })\n        })) : props.showDayNumber ? // for creating correct amount of space (see issue #7162)\n        createElement(\"div\", {\n          className: \"fc-daygrid-day-top\",\n          style: {\n            visibility: 'hidden'\n          }\n        }, createElement(\"a\", {\n          className: \"fc-daygrid-day-number\"\n        }, \"\\xA0\")) : undefined, createElement(\"div\", {\n          className: \"fc-daygrid-day-events\",\n          ref: props.fgContentElRef\n        }, props.fgContent, createElement(\"div\", {\n          className: \"fc-daygrid-day-bottom\",\n          style: {\n            marginTop: props.moreMarginTop\n          }\n        }, createElement(TableCellMoreLink, {\n          allDayDate: date,\n          singlePlacements: props.singlePlacements,\n          moreCnt: props.moreCnt,\n          alignmentElRef: rootElRef,\n          alignGridTop: !props.showDayNumber,\n          extraDateSpan: props.extraDateSpan,\n          dateProfile: props.dateProfile,\n          eventSelection: props.eventSelection,\n          eventDrag: props.eventDrag,\n          eventResize: props.eventResize,\n          todayRange: props.todayRange\n        }))), createElement(\"div\", {\n          className: \"fc-daygrid-day-bg\"\n        }, props.bgContent));\n      });\n    }\n  }]);\n\n  return TableCell;\n}(DateComponent);\n\nfunction renderTopInner(props) {\n  return props.dayNumberText || createElement(Fragment, null, \"\\xA0\");\n}\n\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n  var currentStart = currentRange.start,\n      currentEnd = currentRange.end;\n  var currentEndIncl = addMs(currentEnd, -1);\n  var currentFirstYear = dateEnv.getYear(currentStart);\n  var currentFirstMonth = dateEnv.getMonth(currentStart);\n  var currentLastYear = dateEnv.getYear(currentEndIncl);\n  var currentLastMonth = dateEnv.getMonth(currentEndIncl); // spans more than one month?\n\n  return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) && Boolean( // first date in current view?\n  date.valueOf() === currentStart.valueOf() || // a month-start that's within the current range?\n  dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf());\n}\n\nfunction generateSegKey(seg) {\n  return seg.eventRange.instance.instanceId + ':' + seg.firstCol;\n}\n\nfunction generateSegUid(seg) {\n  return generateSegKey(seg) + ':' + seg.lastCol;\n}\n\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, segHeights, maxContentHeight, cells) {\n  var hierarchy = new DayGridSegHierarchy(function (segEntry) {\n    // TODO: more DRY with generateSegUid\n    var segUid = segs[segEntry.index].eventRange.instance.instanceId + ':' + segEntry.span.start + ':' + (segEntry.span.end - 1); // if no thickness known, assume 1 (if 0, so small it always fits)\n\n    return segHeights[segUid] || 1;\n  });\n  hierarchy.allowReslicing = true;\n  hierarchy.strictOrder = strictOrder;\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight;\n    hierarchy.hiddenConsumes = true;\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents;\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows;\n    hierarchy.hiddenConsumes = true;\n  } // create segInputs only for segs with known heights\n\n\n  var segInputs = [];\n  var unknownHeightSegs = [];\n\n  for (var i = 0; i < segs.length; i += 1) {\n    var seg = segs[i];\n    var segUid = generateSegUid(seg);\n    var eventHeight = segHeights[segUid];\n\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1\n        }\n      });\n    } else {\n      unknownHeightSegs.push(seg);\n    }\n  }\n\n  var hiddenEntries = hierarchy.addSegs(segInputs);\n  var segRects = hierarchy.toRects();\n\n  var _placeRects = placeRects(segRects, segs, cells),\n      singleColPlacements = _placeRects.singleColPlacements,\n      multiColPlacements = _placeRects.multiColPlacements,\n      leftoverMargins = _placeRects.leftoverMargins;\n\n  var moreCnts = [];\n  var moreMarginTops = []; // add segs with unknown heights\n\n  for (var _i2 = 0, _unknownHeightSegs = unknownHeightSegs; _i2 < _unknownHeightSegs.length; _i2++) {\n    var seg = _unknownHeightSegs[_i2];\n    multiColPlacements[seg.firstCol].push({\n      seg: seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n\n    for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  } // add the hidden entries\n\n\n  for (var _col = 0; _col < cells.length; _col += 1) {\n    moreCnts.push(0);\n  }\n\n  var _iterator5 = _createForOfIteratorHelper(hiddenEntries),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var hiddenEntry = _step5.value;\n      var _seg = segs[hiddenEntry.index];\n      var hiddenSpan = hiddenEntry.span;\n      multiColPlacements[hiddenSpan.start].push({\n        seg: resliceSeg(_seg, hiddenSpan.start, hiddenSpan.end, cells),\n        isVisible: false,\n        isAbsolute: true,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n\n      for (var _col3 = hiddenSpan.start; _col3 < hiddenSpan.end; _col3 += 1) {\n        moreCnts[_col3] += 1;\n\n        singleColPlacements[_col3].push({\n          seg: resliceSeg(_seg, _col3, _col3 + 1, cells),\n          isVisible: false,\n          isAbsolute: false,\n          absoluteTop: 0,\n          marginTop: 0\n        });\n      }\n    } // deal with leftover margins\n\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  for (var _col2 = 0; _col2 < cells.length; _col2 += 1) {\n    moreMarginTops.push(leftoverMargins[_col2]);\n  }\n\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    moreCnts: moreCnts,\n    moreMarginTops: moreMarginTops\n  };\n} // rects ordered by top coord, then left\n\n\nfunction placeRects(allRects, segs, cells) {\n  var rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n  var singleColPlacements = [];\n  var multiColPlacements = [];\n  var leftoverMargins = [];\n\n  for (var col = 0; col < cells.length; col += 1) {\n    var rects = rectsByEachCol[col]; // compute all static segs in singlePlacements\n\n    var singlePlacements = [];\n    var currentHeight = 0;\n    var currentMarginTop = 0;\n\n    var _iterator6 = _createForOfIteratorHelper(rects),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var rect = _step6.value;\n        var seg = segs[rect.index];\n        singlePlacements.push({\n          seg: resliceSeg(seg, col, col + 1, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: rect.levelCoord - currentHeight\n        });\n        currentHeight = rect.levelCoord + rect.thickness;\n      } // compute mixed static/absolute segs in multiPlacements\n\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n\n    var multiPlacements = [];\n    currentHeight = 0;\n    currentMarginTop = 0;\n\n    var _iterator7 = _createForOfIteratorHelper(rects),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var _rect = _step7.value;\n        var _seg2 = segs[_rect.index];\n        var isAbsolute = _rect.span.end - _rect.span.start > 1; // multi-column?\n\n        var isFirstCol = _rect.span.start === col;\n        currentMarginTop += _rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n\n        currentHeight = _rect.levelCoord + _rect.thickness; // height will now be bottom of current seg\n\n        if (isAbsolute) {\n          currentMarginTop += _rect.thickness;\n\n          if (isFirstCol) {\n            multiPlacements.push({\n              seg: resliceSeg(_seg2, _rect.span.start, _rect.span.end, cells),\n              isVisible: true,\n              isAbsolute: true,\n              absoluteTop: _rect.levelCoord,\n              marginTop: 0\n            });\n          }\n        } else if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(_seg2, _rect.span.start, _rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: false,\n            absoluteTop: _rect.levelCoord,\n            marginTop: currentMarginTop // claim the margin\n\n          });\n          currentMarginTop = 0;\n        }\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    singleColPlacements.push(singlePlacements);\n    multiColPlacements.push(multiPlacements);\n    leftoverMargins.push(currentMarginTop);\n  }\n\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    leftoverMargins: leftoverMargins\n  };\n}\n\nfunction groupRectsByEachCol(rects, colCnt) {\n  var rectsByEachCol = [];\n\n  for (var col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([]);\n  }\n\n  var _iterator8 = _createForOfIteratorHelper(rects),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var rect = _step8.value;\n\n      for (var _col4 = rect.span.start; _col4 < rect.span.end; _col4 += 1) {\n        rectsByEachCol[_col4].push(rect);\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  return rectsByEachCol;\n}\n\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg;\n  }\n\n  var eventRange = seg.eventRange;\n  var origRange = eventRange.range;\n  var slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1)\n  });\n  return Object.assign(Object.assign({}, seg), {\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: Object.assign(Object.assign({}, eventRange.ui), {\n        durationEditable: false\n      }),\n      instance: eventRange.instance,\n      range: slicedRange\n    },\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\n  });\n}\n\nvar DayGridSegHierarchy = /*#__PURE__*/function (_SegHierarchy) {\n  _inherits(DayGridSegHierarchy, _SegHierarchy);\n\n  var _super6 = _createSuper(DayGridSegHierarchy);\n\n  function DayGridSegHierarchy() {\n    var _this4;\n\n    _classCallCheck(this, DayGridSegHierarchy);\n\n    _this4 = _super6.apply(this, arguments); // config\n\n    _this4.hiddenConsumes = false; // allows us to keep hidden entries in the hierarchy so they take up space\n\n    _this4.forceHidden = {};\n    return _this4;\n  }\n\n  _createClass(DayGridSegHierarchy, [{\n    key: \"addSegs\",\n    value: function addSegs(segInputs) {\n      var _this5 = this;\n\n      var hiddenSegs = _get(_getPrototypeOf(DayGridSegHierarchy.prototype), \"addSegs\", this).call(this, segInputs);\n\n      var entriesByLevel = this.entriesByLevel;\n\n      var excludeHidden = function excludeHidden(entry) {\n        return !_this5.forceHidden[buildEntryKey(entry)];\n      }; // remove the forced-hidden segs\n\n\n      for (var level = 0; level < entriesByLevel.length; level += 1) {\n        entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n      }\n\n      return hiddenSegs;\n    }\n  }, {\n    key: \"handleInvalidInsertion\",\n    value: function handleInvalidInsertion(insertion, entry, hiddenEntries) {\n      var entriesByLevel = this.entriesByLevel,\n          forceHidden = this.forceHidden;\n      var touchingEntry = insertion.touchingEntry,\n          touchingLevel = insertion.touchingLevel,\n          touchingLateral = insertion.touchingLateral; // the entry that the new insertion is touching must be hidden\n\n      if (this.hiddenConsumes && touchingEntry) {\n        var touchingEntryId = buildEntryKey(touchingEntry);\n\n        if (!forceHidden[touchingEntryId]) {\n          if (this.allowReslicing) {\n            // split up the touchingEntry, reinsert it\n            var hiddenEntry = Object.assign(Object.assign({}, touchingEntry), {\n              span: intersectSpans(touchingEntry.span, entry.span)\n            }); // reinsert the area that turned into a \"more\" link (so no other entries try to\n            // occupy the space) but mark it forced-hidden\n\n            var hiddenEntryId = buildEntryKey(hiddenEntry);\n            forceHidden[hiddenEntryId] = true;\n            entriesByLevel[touchingLevel][touchingLateral] = hiddenEntry;\n            hiddenEntries.push(hiddenEntry);\n            this.splitEntry(touchingEntry, entry, hiddenEntries);\n          } else {\n            forceHidden[touchingEntryId] = true;\n            hiddenEntries.push(touchingEntry);\n          }\n        }\n      } // will try to reslice...\n\n\n      _get(_getPrototypeOf(DayGridSegHierarchy.prototype), \"handleInvalidInsertion\", this).call(this, insertion, entry, hiddenEntries);\n    }\n  }]);\n\n  return DayGridSegHierarchy;\n}(SegHierarchy);\n\nvar TableRow = /*#__PURE__*/function (_DateComponent3) {\n  _inherits(TableRow, _DateComponent3);\n\n  var _super7 = _createSuper(TableRow);\n\n  function TableRow() {\n    var _this6;\n\n    _classCallCheck(this, TableRow);\n\n    _this6 = _super7.apply(this, arguments);\n    _this6.cellElRefs = new RefMap(); // the <td>\n\n    _this6.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n\n    _this6.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n\n    _this6.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n\n    _this6.rootElRef = createRef();\n    _this6.state = {\n      framePositions: null,\n      maxContentHeight: null,\n      segHeights: {}\n    };\n\n    _this6.handleResize = function (isForced) {\n      if (isForced) {\n        _this6.updateSizing(true); // isExternal=true\n\n      }\n    };\n\n    return _this6;\n  }\n\n  _createClass(TableRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var props = this.props,\n          state = this.state,\n          context = this.context;\n      var options = context.options;\n      var colCnt = props.cells.length;\n      var businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n      var bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n      var highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n      var mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n\n      var _computeFgSegPlacemen = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.segHeights, state.maxContentHeight, props.cells),\n          singleColPlacements = _computeFgSegPlacemen.singleColPlacements,\n          multiColPlacements = _computeFgSegPlacemen.multiColPlacements,\n          moreCnts = _computeFgSegPlacemen.moreCnts,\n          moreMarginTops = _computeFgSegPlacemen.moreMarginTops;\n\n      var isForcedInvisible = // TODO: messy way to compute this\n      props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n      return createElement(\"tr\", {\n        ref: this.rootElRef,\n        role: \"row\"\n      }, props.renderIntro && props.renderIntro(), props.cells.map(function (cell, col) {\n        var normalFgNodes = _this7.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n\n        var mirrorFgNodes = _this7.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n\n        return createElement(TableCell, {\n          key: cell.key,\n          elRef: _this7.cellElRefs.createRef(cell.key),\n          innerElRef: _this7.frameElRefs.createRef(cell.key)\n          /* FF <td> problem, but okay to use for left/right. TODO: rename prop */\n          ,\n          dateProfile: props.dateProfile,\n          date: cell.date,\n          showDayNumber: props.showDayNumbers,\n          showWeekNumber: props.showWeekNumbers && col === 0,\n          forceDayTop: props.showWeekNumbers\n          /* even displaying weeknum for row, not necessarily day */\n          ,\n          todayRange: props.todayRange,\n          eventSelection: props.eventSelection,\n          eventDrag: props.eventDrag,\n          eventResize: props.eventResize,\n          extraRenderProps: cell.extraRenderProps,\n          extraDataAttrs: cell.extraDataAttrs,\n          extraClassNames: cell.extraClassNames,\n          extraDateSpan: cell.extraDateSpan,\n          moreCnt: moreCnts[col],\n          moreMarginTop: moreMarginTops[col],\n          singlePlacements: singleColPlacements[col],\n          fgContentElRef: _this7.fgElRefs.createRef(cell.key),\n          fgContent: // Fragment scopes the keys\n          createElement(Fragment, null, createElement(Fragment, null, normalFgNodes), createElement(Fragment, null, mirrorFgNodes)),\n          bgContent: // Fragment scopes the keys\n          createElement(Fragment, null, _this7.renderFillSegs(highlightSegsByCol[col], 'highlight'), _this7.renderFillSegs(businessHoursByCol[col], 'non-business'), _this7.renderFillSegs(bgEventSegsByCol[col], 'bg-event')),\n          minHeight: props.cellMinHeight\n        });\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateSizing(true);\n      this.context.addResizeHandler(this.handleResize);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var currentProps = this.props;\n      this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.context.removeResizeHandler(this.handleResize);\n    }\n  }, {\n    key: \"getHighlightSegs\",\n    value: function getHighlightSegs() {\n      var props = this.props;\n\n      if (props.eventDrag && props.eventDrag.segs.length) {\n        // messy check\n        return props.eventDrag.segs;\n      }\n\n      if (props.eventResize && props.eventResize.segs.length) {\n        // messy check\n        return props.eventResize.segs;\n      }\n\n      return props.dateSelectionSegs;\n    }\n  }, {\n    key: \"getMirrorSegs\",\n    value: function getMirrorSegs() {\n      var props = this.props;\n\n      if (props.eventResize && props.eventResize.segs.length) {\n        // messy check\n        return props.eventResize.segs;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"renderFgSegs\",\n    value: function renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n      var context = this.context;\n      var eventSelection = this.props.eventSelection;\n      var framePositions = this.state.framePositions;\n      var defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n\n      var isMirror = isDragging || isResizing || isDateSelecting;\n      var nodes = [];\n\n      if (framePositions) {\n        var _iterator9 = _createForOfIteratorHelper(segPlacements),\n            _step9;\n\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var placement = _step9.value;\n            var seg = placement.seg;\n            var instanceId = seg.eventRange.instance.instanceId;\n            var isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n            var isAbsolute = placement.isAbsolute;\n            var left = '';\n            var right = '';\n\n            if (isAbsolute) {\n              if (context.isRtl) {\n                right = 0;\n                left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n              } else {\n                left = 0;\n                right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n              }\n            }\n            /*\n            known bug: events that are force to be list-item but span multiple days still take up space in later columns\n            todo: in print view, for multi-day events, don't display title within non-start/end segs\n            */\n\n\n            nodes.push(createElement(\"div\", {\n              className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''),\n              key: generateSegKey(seg),\n              ref: isMirror ? null : this.segHarnessRefs.createRef(generateSegUid(seg)),\n              style: {\n                visibility: isVisible ? '' : 'hidden',\n                marginTop: isAbsolute ? '' : placement.marginTop,\n                top: isAbsolute ? placement.absoluteTop : '',\n                left: left,\n                right: right\n              }\n            }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, Object.assign({\n              seg: seg,\n              isDragging: isDragging,\n              isSelected: instanceId === eventSelection,\n              defaultDisplayEventEnd: defaultDisplayEventEnd\n            }, getSegMeta(seg, todayRange))) : createElement(TableBlockEvent, Object.assign({\n              seg: seg,\n              isDragging: isDragging,\n              isResizing: isResizing,\n              isDateSelecting: isDateSelecting,\n              isSelected: instanceId === eventSelection,\n              defaultDisplayEventEnd: defaultDisplayEventEnd\n            }, getSegMeta(seg, todayRange)))));\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n      }\n\n      return nodes;\n    }\n  }, {\n    key: \"renderFillSegs\",\n    value: function renderFillSegs(segs, fillType) {\n      var isRtl = this.context.isRtl;\n      var todayRange = this.props.todayRange;\n      var framePositions = this.state.framePositions;\n      var nodes = [];\n\n      if (framePositions) {\n        var _iterator10 = _createForOfIteratorHelper(segs),\n            _step10;\n\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var seg = _step10.value;\n            var leftRightCss = isRtl ? {\n              right: 0,\n              left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n            } : {\n              left: 0,\n              right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n            };\n            nodes.push(createElement(\"div\", {\n              key: buildEventRangeKey(seg.eventRange),\n              className: \"fc-daygrid-bg-harness\",\n              style: leftRightCss\n            }, fillType === 'bg-event' ? createElement(BgEvent, Object.assign({\n              seg: seg\n            }, getSegMeta(seg, todayRange))) : renderFill(fillType)));\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n      }\n\n      return createElement.apply(void 0, [Fragment, {}].concat(nodes));\n    }\n  }, {\n    key: \"updateSizing\",\n    value: function updateSizing(isExternalSizingChange) {\n      var props = this.props,\n          state = this.state,\n          frameElRefs = this.frameElRefs;\n\n      if (!props.forPrint && props.clientWidth !== null // positioning ready?\n      ) {\n        if (isExternalSizingChange) {\n          var frameEls = props.cells.map(function (cell) {\n            return frameElRefs.currentMap[cell.key];\n          });\n\n          if (frameEls.length) {\n            var originEl = this.rootElRef.current;\n            var newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n            false);\n\n            if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n              this.setState({\n                framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n                false)\n              });\n            }\n          }\n        }\n\n        var oldSegHeights = this.state.segHeights;\n        var newSegHeights = this.querySegHeights();\n        var limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n        this.safeSetState({\n          // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n          // Essentially, once you compute an element's height, never null-out.\n          // TODO: always display all events, as visibility:hidden?\n          segHeights: Object.assign(Object.assign({}, oldSegHeights), newSegHeights),\n          maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null\n        });\n      }\n    }\n  }, {\n    key: \"querySegHeights\",\n    value: function querySegHeights() {\n      var segElMap = this.segHarnessRefs.currentMap;\n      var segHeights = {}; // get the max height amongst instance segs\n\n      for (var segUid in segElMap) {\n        var height = Math.round(segElMap[segUid].getBoundingClientRect().height);\n        segHeights[segUid] = Math.max(segHeights[segUid] || 0, height);\n      }\n\n      return segHeights;\n    }\n  }, {\n    key: \"computeMaxContentHeight\",\n    value: function computeMaxContentHeight() {\n      var firstKey = this.props.cells[0].key;\n      var cellEl = this.cellElRefs.currentMap[firstKey];\n      var fcContainerEl = this.fgElRefs.currentMap[firstKey];\n      return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n  }, {\n    key: \"getCellEls\",\n    value: function getCellEls() {\n      var elMap = this.cellElRefs.currentMap;\n      return this.props.cells.map(function (cell) {\n        return elMap[cell.key];\n      });\n    }\n  }]);\n\n  return TableRow;\n}(DateComponent);\n\nTableRow.addStateEquality({\n  segHeights: isPropsEqual\n});\n\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n  if (!mirrorSegs.length) {\n    return [];\n  }\n\n  var topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n\n  return mirrorSegs.map(function (seg) {\n    return {\n      seg: seg,\n      isVisible: true,\n      isAbsolute: true,\n      absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n      marginTop: 0\n    };\n  });\n}\n\nfunction buildAbsoluteTopHash(colPlacements) {\n  var topsByInstanceId = {};\n\n  var _iterator11 = _createForOfIteratorHelper(colPlacements),\n      _step11;\n\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var placements = _step11.value;\n\n      var _iterator12 = _createForOfIteratorHelper(placements),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var placement = _step12.value;\n          topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n\n  return topsByInstanceId;\n}\n\nvar TableRows = /*#__PURE__*/function (_DateComponent4) {\n  _inherits(TableRows, _DateComponent4);\n\n  var _super8 = _createSuper(TableRows);\n\n  function TableRows() {\n    var _this8;\n\n    _classCallCheck(this, TableRows);\n\n    _this8 = _super8.apply(this, arguments);\n    _this8.splitBusinessHourSegs = memoize(splitSegsByRow);\n    _this8.splitBgEventSegs = memoize(splitSegsByRow);\n    _this8.splitFgEventSegs = memoize(splitSegsByRow);\n    _this8.splitDateSelectionSegs = memoize(splitSegsByRow);\n    _this8.splitEventDrag = memoize(splitInteractionByRow);\n    _this8.splitEventResize = memoize(splitInteractionByRow);\n    _this8.rowRefs = new RefMap();\n    return _this8;\n  }\n\n  _createClass(TableRows, [{\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      var props = this.props,\n          context = this.context;\n      var rowCnt = props.cells.length;\n      var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n      var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n      var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n      var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n      var eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n      var eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt); // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n      // choose 7 because a month view will have max 6 rows\n\n      var cellMinHeight = rowCnt >= 7 && props.clientWidth ? props.clientWidth / context.options.aspectRatio / 6 : null;\n      return createElement(NowTimer, {\n        unit: \"day\"\n      }, function (nowDate, todayRange) {\n        return createElement(Fragment, null, props.cells.map(function (cells, row) {\n          return createElement(TableRow, {\n            ref: _this9.rowRefs.createRef(row),\n            key: cells.length ? cells[0].date.toISOString()\n            /* best? or put key on cell? or use diff formatter? */\n            : row // in case there are no cells (like when resource view is loading)\n            ,\n            showDayNumbers: rowCnt > 1,\n            showWeekNumbers: props.showWeekNumbers,\n            todayRange: todayRange,\n            dateProfile: props.dateProfile,\n            cells: cells,\n            renderIntro: props.renderRowIntro,\n            businessHourSegs: businessHourSegsByRow[row],\n            eventSelection: props.eventSelection,\n            bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay)\n            /* hack */\n            ,\n            fgEventSegs: fgEventSegsByRow[row],\n            dateSelectionSegs: dateSelectionSegsByRow[row],\n            eventDrag: eventDragByRow[row],\n            eventResize: eventResizeByRow[row],\n            dayMaxEvents: props.dayMaxEvents,\n            dayMaxEventRows: props.dayMaxEventRows,\n            clientWidth: props.clientWidth,\n            clientHeight: props.clientHeight,\n            cellMinHeight: cellMinHeight,\n            forPrint: props.forPrint\n          });\n        }));\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.registerInteractiveComponent();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // for if started with zero cells\n      this.registerInteractiveComponent();\n    }\n  }, {\n    key: \"registerInteractiveComponent\",\n    value: function registerInteractiveComponent() {\n      if (!this.rootEl) {\n        // HACK: need a daygrid wrapper parent to do positioning\n        // NOTE: a daygrid resource view w/o resources can have zero cells\n        var firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n        var rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n\n        if (rootEl) {\n          this.rootEl = rootEl;\n          this.context.registerInteractiveComponent(this, {\n            el: rootEl,\n            isHitComboAllowed: this.props.isHitComboAllowed\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.rootEl) {\n        this.context.unregisterInteractiveComponent(this);\n        this.rootEl = null;\n      }\n    } // Hit System\n    // ----------------------------------------------------------------------------------------------------\n\n  }, {\n    key: \"prepareHits\",\n    value: function prepareHits() {\n      this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map(function (rowObj) {\n        return rowObj.getCellEls()[0];\n      }), // first cell el in each row. TODO: not optimal\n      false, true);\n      this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n      true, // horizontal\n      false);\n    }\n  }, {\n    key: \"queryHit\",\n    value: function queryHit(positionLeft, positionTop) {\n      var colPositions = this.colPositions,\n          rowPositions = this.rowPositions;\n      var col = colPositions.leftToIndex(positionLeft);\n      var row = rowPositions.topToIndex(positionTop);\n\n      if (row != null && col != null) {\n        var cell = this.props.cells[row][col];\n        return {\n          dateProfile: this.props.dateProfile,\n          dateSpan: Object.assign({\n            range: this.getCellRange(row, col),\n            allDay: true\n          }, cell.extraDateSpan),\n          dayEl: this.getCellEl(row, col),\n          rect: {\n            left: colPositions.lefts[col],\n            right: colPositions.rights[col],\n            top: rowPositions.tops[row],\n            bottom: rowPositions.bottoms[row]\n          },\n          layer: 0\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getCellEl\",\n    value: function getCellEl(row, col) {\n      return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n  }, {\n    key: \"getCellRange\",\n    value: function getCellRange(row, col) {\n      var start = this.props.cells[row][col].date;\n      var end = addDays(start, 1);\n      return {\n        start: start,\n        end: end\n      };\n    }\n  }]);\n\n  return TableRows;\n}(DateComponent);\n\nfunction isSegAllDay(seg) {\n  return seg.eventRange.def.allDay;\n}\n\nvar Table = /*#__PURE__*/function (_DateComponent5) {\n  _inherits(Table, _DateComponent5);\n\n  var _super9 = _createSuper(Table);\n\n  function Table() {\n    var _this10;\n\n    _classCallCheck(this, Table);\n\n    _this10 = _super9.apply(this, arguments);\n    _this10.elRef = createRef();\n    _this10.needsScrollReset = false;\n    return _this10;\n  }\n\n  _createClass(Table, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var dayMaxEventRows = props.dayMaxEventRows,\n          dayMaxEvents = props.dayMaxEvents,\n          expandRows = props.expandRows;\n      var limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true; // if rows can't expand to fill fixed height, can't do balanced-height event limit\n      // TODO: best place to normalize these options?\n\n      if (limitViaBalanced && !expandRows) {\n        limitViaBalanced = false;\n        dayMaxEventRows = null;\n        dayMaxEvents = null;\n      }\n\n      var classNames = ['fc-daygrid-body', limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', expandRows ? '' : 'fc-daygrid-body-natural' // will height of one row depend on the others?\n      ];\n      return createElement(\"div\", {\n        ref: this.elRef,\n        className: classNames.join(' '),\n        style: {\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth\n        }\n      }, createElement(\"table\", {\n        role: \"presentation\",\n        className: \"fc-scrollgrid-sync-table\",\n        style: {\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n          height: expandRows ? props.clientHeight : ''\n        }\n      }, props.colGroupNode, createElement(\"tbody\", {\n        role: \"presentation\"\n      }, createElement(TableRows, {\n        dateProfile: props.dateProfile,\n        cells: props.cells,\n        renderRowIntro: props.renderRowIntro,\n        showWeekNumbers: props.showWeekNumbers,\n        clientWidth: props.clientWidth,\n        clientHeight: props.clientHeight,\n        businessHourSegs: props.businessHourSegs,\n        bgEventSegs: props.bgEventSegs,\n        fgEventSegs: props.fgEventSegs,\n        dateSelectionSegs: props.dateSelectionSegs,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        dayMaxEvents: dayMaxEvents,\n        dayMaxEventRows: dayMaxEventRows,\n        forPrint: props.forPrint,\n        isHitComboAllowed: props.isHitComboAllowed\n      }))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestScrollReset();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.dateProfile !== this.props.dateProfile) {\n        this.requestScrollReset();\n      } else {\n        this.flushScrollReset();\n      }\n    }\n  }, {\n    key: \"requestScrollReset\",\n    value: function requestScrollReset() {\n      this.needsScrollReset = true;\n      this.flushScrollReset();\n    }\n  }, {\n    key: \"flushScrollReset\",\n    value: function flushScrollReset() {\n      if (this.needsScrollReset && this.props.clientWidth // sizes computed?\n      ) {\n        var subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n\n        if (subjectEl) {\n          var originEl = subjectEl.closest('.fc-daygrid-body');\n          var scrollEl = originEl.closest('.fc-scroller');\n          var scrollTop = subjectEl.getBoundingClientRect().top - originEl.getBoundingClientRect().top;\n          scrollEl.scrollTop = scrollTop ? scrollTop + 1 : 0; // overcome border\n        }\n\n        this.needsScrollReset = false;\n      }\n    }\n  }]);\n\n  return Table;\n}(DateComponent);\n\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n  var el;\n\n  if (dateProfile.currentRangeUnit.match(/year|month/)) {\n    el = containerEl.querySelector(\"[data-date=\\\"\".concat(formatIsoMonthStr(dateProfile.currentDate), \"-01\\\"]\")); // even if view is month-based, first-of-month might be hidden...\n  }\n\n  if (!el) {\n    el = containerEl.querySelector(\"[data-date=\\\"\".concat(formatDayString(dateProfile.currentDate), \"\\\"]\")); // could still be hidden if an interior-view hidden day\n  }\n\n  return el;\n}\n\nvar DayTableSlicer = /*#__PURE__*/function (_Slicer) {\n  _inherits(DayTableSlicer, _Slicer);\n\n  var _super10 = _createSuper(DayTableSlicer);\n\n  function DayTableSlicer() {\n    var _this11;\n\n    _classCallCheck(this, DayTableSlicer);\n\n    _this11 = _super10.apply(this, arguments);\n    _this11.forceDayIfListItem = true;\n    return _this11;\n  }\n\n  _createClass(DayTableSlicer, [{\n    key: \"sliceRange\",\n    value: function sliceRange(dateRange, dayTableModel) {\n      return dayTableModel.sliceRange(dateRange);\n    }\n  }]);\n\n  return DayTableSlicer;\n}(Slicer);\n\nvar DayTable = /*#__PURE__*/function (_DateComponent6) {\n  _inherits(DayTable, _DateComponent6);\n\n  var _super11 = _createSuper(DayTable);\n\n  function DayTable() {\n    var _this12;\n\n    _classCallCheck(this, DayTable);\n\n    _this12 = _super11.apply(this, arguments);\n    _this12.slicer = new DayTableSlicer();\n    _this12.tableRef = createRef();\n    return _this12;\n  }\n\n  _createClass(DayTable, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n          context = this.context;\n      return createElement(Table, Object.assign({\n        ref: this.tableRef\n      }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), {\n        dateProfile: props.dateProfile,\n        cells: props.dayTableModel.cells,\n        colGroupNode: props.colGroupNode,\n        tableMinWidth: props.tableMinWidth,\n        renderRowIntro: props.renderRowIntro,\n        dayMaxEvents: props.dayMaxEvents,\n        dayMaxEventRows: props.dayMaxEventRows,\n        showWeekNumbers: props.showWeekNumbers,\n        expandRows: props.expandRows,\n        headerAlignElRef: props.headerAlignElRef,\n        clientWidth: props.clientWidth,\n        clientHeight: props.clientHeight,\n        forPrint: props.forPrint\n      }));\n    }\n  }]);\n\n  return DayTable;\n}(DateComponent);\n\nvar DayTableView = /*#__PURE__*/function (_TableView) {\n  _inherits(DayTableView, _TableView);\n\n  var _super12 = _createSuper(DayTableView);\n\n  function DayTableView() {\n    var _this13;\n\n    _classCallCheck(this, DayTableView);\n\n    _this13 = _super12.apply(this, arguments);\n    _this13.buildDayTableModel = memoize(buildDayTableModel);\n    _this13.headerRef = createRef();\n    _this13.tableRef = createRef(); // can't override any lifecycle methods from parent\n\n    return _this13;\n  }\n\n  _createClass(DayTableView, [{\n    key: \"render\",\n    value: function render() {\n      var _this14 = this;\n\n      var _this$context = this.context,\n          options = _this$context.options,\n          dateProfileGenerator = _this$context.dateProfileGenerator;\n      var props = this.props;\n      var dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n      var headerContent = options.dayHeaders && createElement(DayHeader, {\n        ref: this.headerRef,\n        dateProfile: props.dateProfile,\n        dates: dayTableModel.headerDates,\n        datesRepDistinctDays: dayTableModel.rowCnt === 1\n      });\n\n      var bodyContent = function bodyContent(contentArg) {\n        return createElement(DayTable, {\n          ref: _this14.tableRef,\n          dateProfile: props.dateProfile,\n          dayTableModel: dayTableModel,\n          businessHours: props.businessHours,\n          dateSelection: props.dateSelection,\n          eventStore: props.eventStore,\n          eventUiBases: props.eventUiBases,\n          eventSelection: props.eventSelection,\n          eventDrag: props.eventDrag,\n          eventResize: props.eventResize,\n          nextDayThreshold: options.nextDayThreshold,\n          colGroupNode: contentArg.tableColGroupNode,\n          tableMinWidth: contentArg.tableMinWidth,\n          dayMaxEvents: options.dayMaxEvents,\n          dayMaxEventRows: options.dayMaxEventRows,\n          showWeekNumbers: options.weekNumbers,\n          expandRows: !props.isHeightAuto,\n          headerAlignElRef: _this14.headerElRef,\n          clientWidth: contentArg.clientWidth,\n          clientHeight: contentArg.clientHeight,\n          forPrint: props.forPrint\n        });\n      };\n\n      return options.dayMinWidth ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth) : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n  }]);\n\n  return DayTableView;\n}(TableView);\n\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n  var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nvar TableDateProfileGenerator = /*#__PURE__*/function (_DateProfileGenerator) {\n  _inherits(TableDateProfileGenerator, _DateProfileGenerator);\n\n  var _super13 = _createSuper(TableDateProfileGenerator);\n\n  function TableDateProfileGenerator() {\n    _classCallCheck(this, TableDateProfileGenerator);\n\n    return _super13.apply(this, arguments);\n  }\n\n  _createClass(TableDateProfileGenerator, [{\n    key: \"buildRenderRange\",\n    value: // Computes the date range that will be rendered\n    function buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n      var renderRange = _get(_getPrototypeOf(TableDateProfileGenerator.prototype), \"buildRenderRange\", this).call(this, currentRange, currentRangeUnit, isRangeAllDay);\n\n      var props = this.props;\n      return buildDayTableRenderRange({\n        currentRange: renderRange,\n        snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n        fixedWeekCount: props.fixedWeekCount,\n        dateEnv: props.dateEnv\n      });\n    }\n  }]);\n\n  return TableDateProfileGenerator;\n}(DateProfileGenerator);\n\nfunction buildDayTableRenderRange(props) {\n  var dateEnv = props.dateEnv,\n      currentRange = props.currentRange;\n  var start = currentRange.start,\n      end = currentRange.end;\n  var endOfWeek; // year and month views should be aligned with weeks. this is already done for week\n\n  if (props.snapToWeek) {\n    start = dateEnv.startOfWeek(start); // make end-of-week if not already\n\n    endOfWeek = dateEnv.startOfWeek(end);\n\n    if (endOfWeek.valueOf() !== end.valueOf()) {\n      end = addWeeks(endOfWeek, 1);\n    }\n  } // ensure 6 weeks\n\n\n  if (props.fixedWeekCount) {\n    // TODO: instead of these date-math gymnastics (for multimonth view),\n    // compute dateprofiles of all months, then use start of first and end of last.\n    var lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n    var rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n    diffWeeks(lastMonthRenderStart, end));\n    end = addWeeks(end, 6 - rowCnt);\n  }\n\n  return {\n    start: start,\n    end: end\n  };\n}\n\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };","map":{"version":3,"names":["DateComponent","getStickyHeaderDates","ViewContainer","SimpleScrollGrid","getStickyFooterScrollbar","renderScrollShim","createFormatter","BaseComponent","StandardEvent","buildSegTimeText","EventContainer","getSegAnchorAttrs","memoize","MoreLinkContainer","getSegMeta","getUniqueDomId","setRef","DayCellContainer","WeekNumberContainer","buildNavLinkAttrs","hasCustomDayCellContent","addMs","intersectRanges","addDays","SegHierarchy","buildEntryKey","intersectSpans","RefMap","sortEventSegs","isPropsEqual","buildEventRangeKey","BgEvent","renderFill","PositionCache","NowTimer","formatIsoMonthStr","formatDayString","Slicer","DayHeader","DaySeriesModel","DayTableModel","DateProfileGenerator","addWeeks","diffWeeks","injectStyles","createRef","createElement","Fragment","TableView","arguments","headerElRef","headerRowContent","bodyContent","props","context","sections","stickyHeaderDates","options","push","type","key","isSticky","chunk","elRef","tableClassName","rowContent","liquid","content","elClasses","viewSpec","isHeightAuto","forPrint","collapsibleWidth","cols","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","chunks","colGroups","span","minWidth","splitSegsByRow","segs","rowCnt","byRow","i","seg","row","splitSegsByFirstCol","byCol","firstCol","splitInteractionByRow","ui","affectedInstances","isEvent","DEFAULT_TABLE_EVENT_TIME_FORMAT","hour","minute","omitZeroMinute","meridiem","hasListItemDisplay","display","eventRange","def","allDay","lastCol","isStart","isEnd","TableBlockEvent","Object","assign","defaultTimeFormat","defaultDisplayEventEnd","disableResizing","TableListItemEvent","timeFormat","eventTimeFormat","timeText","elTag","elAttrs","defaultGenerator","renderInnerContent","isResizing","isDateSelecting","renderProps","className","style","borderColor","backgroundColor","event","title","TableCellMoreLink","compileSegs","singlePlacements","allSegs","invisibleSegs","dateProfile","todayRange","allDayDate","moreCnt","hiddenSegs","alignmentElRef","alignGridTop","extraDateSpan","popoverContent","isForcedInvisible","eventDrag","eventResize","map","instanceId","instance","visibility","isDragging","isSelected","eventSelection","placement","isVisible","DEFAULT_WEEK_NUM_FORMAT","week","TableCell","rootElRef","state","dayNumberId","handleRootEl","el","dateEnv","date","isMonthStart","showDayNumber","shouldDisplayMonthStart","currentRange","extraClassNames","extraDataAttrs","role","renderTopInner","extraRenderProps","InnerContent","ref","innerElRef","minHeight","showWeekNumber","defaultFormat","isDisabled","forceDayTop","id","undefined","fgContentElRef","fgContent","marginTop","moreMarginTop","bgContent","dayNumberText","currentStart","start","currentEnd","end","currentEndIncl","currentFirstYear","getYear","currentFirstMonth","getMonth","currentLastYear","currentLastMonth","Boolean","valueOf","getDay","generateSegKey","generateSegUid","computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","strictOrder","segHeights","maxContentHeight","cells","hierarchy","DayGridSegHierarchy","segEntry","segUid","index","allowReslicing","maxCoord","hiddenConsumes","maxStackCnt","segInputs","unknownHeightSegs","length","eventHeight","hiddenEntries","addSegs","segRects","toRects","placeRects","singleColPlacements","multiColPlacements","leftoverMargins","moreCnts","moreMarginTops","isAbsolute","absoluteTop","col","resliceSeg","hiddenEntry","hiddenSpan","allRects","rectsByEachCol","groupRectsByEachCol","rects","currentHeight","currentMarginTop","rect","levelCoord","thickness","multiPlacements","isFirstCol","spanStart","spanEnd","origRange","range","slicedRange","durationEditable","forceHidden","entriesByLevel","excludeHidden","entry","level","filter","insertion","touchingEntry","touchingLevel","touchingLateral","touchingEntryId","hiddenEntryId","splitEntry","TableRow","cellElRefs","frameElRefs","fgElRefs","segHarnessRefs","framePositions","handleResize","isForced","updateSizing","businessHoursByCol","businessHourSegs","bgEventSegsByCol","bgEventSegs","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","fgEventSegs","eventOrder","eventOrderStrict","renderIntro","cell","normalFgNodes","renderFgSegs","mirrorFgNodes","buildMirrorPlacements","showDayNumbers","showWeekNumbers","renderFillSegs","cellMinHeight","addResizeHandler","prevProps","prevState","currentProps","removeResizeHandler","dateSelectionSegs","segPlacements","isMirror","nodes","left","right","isRtl","lefts","rights","top","fillType","leftRightCss","isExternalSizingChange","clientWidth","frameEls","currentMap","originEl","current","newPositionCache","similarTo","setState","oldSegHeights","newSegHeights","querySegHeights","limitByContentHeight","safeSetState","computeMaxContentHeight","segElMap","height","Math","round","getBoundingClientRect","max","firstKey","cellEl","fcContainerEl","bottom","elMap","addStateEquality","mirrorSegs","colPlacements","topsByInstanceId","buildAbsoluteTopHash","placements","TableRows","splitBusinessHourSegs","splitBgEventSegs","splitFgEventSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","rowRefs","businessHourSegsByRow","bgEventSegsByRow","fgEventSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","aspectRatio","unit","nowDate","toISOString","renderRowIntro","isSegAllDay","clientHeight","registerInteractiveComponent","rootEl","firstCellEl","getCellEls","closest","isHitComboAllowed","unregisterInteractiveComponent","rowPositions","collect","rowObj","colPositions","positionLeft","positionTop","leftToIndex","topToIndex","dateSpan","getCellRange","dayEl","getCellEl","tops","bottoms","layer","Table","needsScrollReset","expandRows","limitViaBalanced","classNames","join","width","tableMinWidth","colGroupNode","requestScrollReset","flushScrollReset","subjectEl","getScrollSubjectEl","scrollEl","scrollTop","containerEl","currentRangeUnit","match","querySelector","currentDate","DayTableSlicer","forceDayIfListItem","dateRange","dayTableModel","sliceRange","DayTable","slicer","tableRef","sliceProps","nextDayThreshold","headerAlignElRef","DayTableView","buildDayTableModel","headerRef","dateProfileGenerator","headerContent","dayHeaders","dates","headerDates","datesRepDistinctDays","contentArg","businessHours","dateSelection","eventStore","eventUiBases","tableColGroupNode","weekNumbers","renderHScrollLayout","renderSimpleLayout","daySeries","renderRange","test","TableDateProfileGenerator","isRangeAllDay","buildDayTableRenderRange","snapToWeek","fixedWeekCount","endOfWeek","startOfWeek","lastMonthRenderStart","startOfMonth","ceil","css_248z","DayGridView"],"sources":["C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@fullcalendar/daygrid/internal.js"],"sourcesContent":["import { DateComponent, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DayHeader, DaySeriesModel, DayTableModel, DateProfileGenerator, addWeeks, diffWeeks, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createRef, createElement, Fragment } from '@fullcalendar/core/preact.js';\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nclass TableView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.headerElRef = createRef();\n    }\n    renderSimpleLayout(headerRowContent, bodyContent) {\n        let { props, context } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunk: { content: bodyContent },\n        });\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [] /* TODO: make optional? */, sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { props, context } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunks: [{\n                        key: 'main',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    }],\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunks: [{\n                    key: 'main',\n                    content: bodyContent,\n                }],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                type: 'footer',\n                key: 'footer',\n                isSticky: true,\n                chunks: [{\n                        key: 'main',\n                        content: renderScrollShim,\n                    }],\n            });\n        }\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: props.forPrint, colGroups: [{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }], sections: sections })));\n    }\n}\n\nfunction splitSegsByRow(segs, rowCnt) {\n    let byRow = [];\n    for (let i = 0; i < rowCnt; i += 1) {\n        byRow[i] = [];\n    }\n    for (let seg of segs) {\n        byRow[seg.row].push(seg);\n    }\n    return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n    let byCol = [];\n    for (let i = 0; i < colCnt; i += 1) {\n        byCol[i] = [];\n    }\n    for (let seg of segs) {\n        byCol[seg.firstCol].push(seg);\n    }\n    return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.row].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nconst DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'narrow',\n});\nfunction hasListItemDisplay(seg) {\n    let { display } = seg.eventRange.ui;\n    return display === 'list-item' || (display === 'auto' &&\n        !seg.eventRange.def.allDay &&\n        seg.firstCol === seg.lastCol && // can't be multi-day\n        seg.isStart && // \"\n        seg.isEnd // \"\n    );\n}\n\nclass TableBlockEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(StandardEvent, Object.assign({}, props, { elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'], defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT, defaultDisplayEventEnd: props.defaultDisplayEventEnd, disableResizing: !props.seg.eventRange.def.allDay })));\n    }\n}\n\nclass TableListItemEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n        let timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"a\", elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'], elAttrs: getSegAnchorAttrs(props.seg, context), defaultGenerator: renderInnerContent, timeText: timeText, isResizing: false, isDateSelecting: false })));\n    }\n}\nfunction renderInnerContent(renderProps) {\n    return (createElement(Fragment, null,\n        createElement(\"div\", { className: \"fc-daygrid-event-dot\", style: { borderColor: renderProps.borderColor || renderProps.backgroundColor } }),\n        renderProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, renderProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title\" }, renderProps.event.title || createElement(Fragment, null, \"\\u00A0\"))));\n}\n\nclass TableCellMoreLink extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.compileSegs = memoize(compileSegs);\n    }\n    render() {\n        let { props } = this;\n        let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements);\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-daygrid-more-link'], dateProfile: props.dateProfile, todayRange: props.todayRange, allDayDate: props.allDayDate, moreCnt: props.moreCnt, allSegs: allSegs, hiddenSegs: invisibleSegs, alignmentElRef: props.alignmentElRef, alignGridTop: props.alignGridTop, extraDateSpan: props.extraDateSpan, popoverContent: () => {\n                let isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n                    (props.eventResize ? props.eventResize.affectedInstances : null) ||\n                    {};\n                return (createElement(Fragment, null, allSegs.map((seg) => {\n                    let instanceId = seg.eventRange.instance.instanceId;\n                    return (createElement(\"div\", { className: \"fc-daygrid-event-harness\", key: instanceId, style: {\n                            visibility: isForcedInvisible[instanceId] ? 'hidden' : '',\n                        } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange))))));\n                })));\n            } }));\n    }\n}\nfunction compileSegs(singlePlacements) {\n    let allSegs = [];\n    let invisibleSegs = [];\n    for (let placement of singlePlacements) {\n        allSegs.push(placement.seg);\n        if (!placement.isVisible) {\n            invisibleSegs.push(placement.seg);\n        }\n    }\n    return { allSegs, invisibleSegs };\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' });\nclass TableCell extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.state = {\n            dayNumberId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            setRef(this.rootElRef, el);\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { context, props, state, rootElRef } = this;\n        let { options, dateEnv } = context;\n        let { date, dateProfile } = props;\n        // TODO: memoize this?\n        const isMonthStart = props.showDayNumber &&\n            shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: this.handleRootEl, elClasses: [\n                'fc-daygrid-day',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), (props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})), { role: 'gridcell' }), defaultGenerator: renderTopInner, date: date, dateProfile: dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, isMonthStart: isMonthStart, extraRenderProps: props.extraRenderProps }, (InnerContent, renderProps) => (createElement(\"div\", { ref: props.innerElRef, className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\", style: { minHeight: props.minHeight } },\n            props.showWeekNumber && (createElement(WeekNumberContainer, { elTag: \"a\", elClasses: ['fc-daygrid-week-number'], elAttrs: buildNavLinkAttrs(context, date, 'week'), date: date, defaultFormat: DEFAULT_WEEK_NUM_FORMAT })),\n            !renderProps.isDisabled &&\n                (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? (createElement(\"div\", { className: \"fc-daygrid-day-top\" },\n                createElement(InnerContent, { elTag: \"a\", elClasses: [\n                        'fc-daygrid-day-number',\n                        isMonthStart && 'fc-daygrid-month-start',\n                    ], elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), { id: state.dayNumberId }) }))) : props.showDayNumber ? (\n            // for creating correct amount of space (see issue #7162)\n            createElement(\"div\", { className: \"fc-daygrid-day-top\", style: { visibility: 'hidden' } },\n                createElement(\"a\", { className: \"fc-daygrid-day-number\" }, \"\\u00A0\"))) : undefined,\n            createElement(\"div\", { className: \"fc-daygrid-day-events\", ref: props.fgContentElRef },\n                props.fgContent,\n                createElement(\"div\", { className: \"fc-daygrid-day-bottom\", style: { marginTop: props.moreMarginTop } },\n                    createElement(TableCellMoreLink, { allDayDate: date, singlePlacements: props.singlePlacements, moreCnt: props.moreCnt, alignmentElRef: rootElRef, alignGridTop: !props.showDayNumber, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange }))),\n            createElement(\"div\", { className: \"fc-daygrid-day-bg\" }, props.bgContent)))));\n    }\n}\nfunction renderTopInner(props) {\n    return props.dayNumberText || createElement(Fragment, null, \"\\u00A0\");\n}\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n    const { start: currentStart, end: currentEnd } = currentRange;\n    const currentEndIncl = addMs(currentEnd, -1);\n    const currentFirstYear = dateEnv.getYear(currentStart);\n    const currentFirstMonth = dateEnv.getMonth(currentStart);\n    const currentLastYear = dateEnv.getYear(currentEndIncl);\n    const currentLastMonth = dateEnv.getMonth(currentEndIncl);\n    // spans more than one month?\n    return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) &&\n        Boolean(\n        // first date in current view?\n        date.valueOf() === currentStart.valueOf() ||\n            // a month-start that's within the current range?\n            (dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf()));\n}\n\nfunction generateSegKey(seg) {\n    return seg.eventRange.instance.instanceId + ':' + seg.firstCol;\n}\nfunction generateSegUid(seg) {\n    return generateSegKey(seg) + ':' + seg.lastCol;\n}\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, segHeights, maxContentHeight, cells) {\n    let hierarchy = new DayGridSegHierarchy((segEntry) => {\n        // TODO: more DRY with generateSegUid\n        let segUid = segs[segEntry.index].eventRange.instance.instanceId +\n            ':' + segEntry.span.start +\n            ':' + (segEntry.span.end - 1);\n        // if no thickness known, assume 1 (if 0, so small it always fits)\n        return segHeights[segUid] || 1;\n    });\n    hierarchy.allowReslicing = true;\n    hierarchy.strictOrder = strictOrder;\n    if (dayMaxEvents === true || dayMaxEventRows === true) {\n        hierarchy.maxCoord = maxContentHeight;\n        hierarchy.hiddenConsumes = true;\n    }\n    else if (typeof dayMaxEvents === 'number') {\n        hierarchy.maxStackCnt = dayMaxEvents;\n    }\n    else if (typeof dayMaxEventRows === 'number') {\n        hierarchy.maxStackCnt = dayMaxEventRows;\n        hierarchy.hiddenConsumes = true;\n    }\n    // create segInputs only for segs with known heights\n    let segInputs = [];\n    let unknownHeightSegs = [];\n    for (let i = 0; i < segs.length; i += 1) {\n        let seg = segs[i];\n        let segUid = generateSegUid(seg);\n        let eventHeight = segHeights[segUid];\n        if (eventHeight != null) {\n            segInputs.push({\n                index: i,\n                span: {\n                    start: seg.firstCol,\n                    end: seg.lastCol + 1,\n                },\n            });\n        }\n        else {\n            unknownHeightSegs.push(seg);\n        }\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let segRects = hierarchy.toRects();\n    let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells);\n    let moreCnts = [];\n    let moreMarginTops = [];\n    // add segs with unknown heights\n    for (let seg of unknownHeightSegs) {\n        multiColPlacements[seg.firstCol].push({\n            seg,\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // add the hidden entries\n    for (let col = 0; col < cells.length; col += 1) {\n        moreCnts.push(0);\n    }\n    for (let hiddenEntry of hiddenEntries) {\n        let seg = segs[hiddenEntry.index];\n        let hiddenSpan = hiddenEntry.span;\n        multiColPlacements[hiddenSpan.start].push({\n            seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n            moreCnts[col] += 1;\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // deal with leftover margins\n    for (let col = 0; col < cells.length; col += 1) {\n        moreMarginTops.push(leftoverMargins[col]);\n    }\n    return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n    let rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n    let singleColPlacements = [];\n    let multiColPlacements = [];\n    let leftoverMargins = [];\n    for (let col = 0; col < cells.length; col += 1) {\n        let rects = rectsByEachCol[col];\n        // compute all static segs in singlePlacements\n        let singlePlacements = [];\n        let currentHeight = 0;\n        let currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            singlePlacements.push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: true,\n                isAbsolute: false,\n                absoluteTop: rect.levelCoord,\n                marginTop: rect.levelCoord - currentHeight,\n            });\n            currentHeight = rect.levelCoord + rect.thickness;\n        }\n        // compute mixed static/absolute segs in multiPlacements\n        let multiPlacements = [];\n        currentHeight = 0;\n        currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            let isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n            let isFirstCol = rect.span.start === col;\n            currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n            currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n            if (isAbsolute) {\n                currentMarginTop += rect.thickness;\n                if (isFirstCol) {\n                    multiPlacements.push({\n                        seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                        isVisible: true,\n                        isAbsolute: true,\n                        absoluteTop: rect.levelCoord,\n                        marginTop: 0,\n                    });\n                }\n            }\n            else if (isFirstCol) {\n                multiPlacements.push({\n                    seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                    isVisible: true,\n                    isAbsolute: false,\n                    absoluteTop: rect.levelCoord,\n                    marginTop: currentMarginTop, // claim the margin\n                });\n                currentMarginTop = 0;\n            }\n        }\n        singleColPlacements.push(singlePlacements);\n        multiColPlacements.push(multiPlacements);\n        leftoverMargins.push(currentMarginTop);\n    }\n    return { singleColPlacements, multiColPlacements, leftoverMargins };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n    let rectsByEachCol = [];\n    for (let col = 0; col < colCnt; col += 1) {\n        rectsByEachCol.push([]);\n    }\n    for (let rect of rects) {\n        for (let col = rect.span.start; col < rect.span.end; col += 1) {\n            rectsByEachCol[col].push(rect);\n        }\n    }\n    return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n    if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n        return seg;\n    }\n    let eventRange = seg.eventRange;\n    let origRange = eventRange.range;\n    let slicedRange = intersectRanges(origRange, {\n        start: cells[spanStart].date,\n        end: addDays(cells[spanEnd - 1].date, 1),\n    });\n    return Object.assign(Object.assign({}, seg), { firstCol: spanStart, lastCol: spanEnd - 1, eventRange: {\n            def: eventRange.def,\n            ui: Object.assign(Object.assign({}, eventRange.ui), { durationEditable: false }),\n            instance: eventRange.instance,\n            range: slicedRange,\n        }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() });\n}\nclass DayGridSegHierarchy extends SegHierarchy {\n    constructor() {\n        super(...arguments);\n        // config\n        this.hiddenConsumes = false;\n        // allows us to keep hidden entries in the hierarchy so they take up space\n        this.forceHidden = {};\n    }\n    addSegs(segInputs) {\n        const hiddenSegs = super.addSegs(segInputs);\n        const { entriesByLevel } = this;\n        const excludeHidden = (entry) => !this.forceHidden[buildEntryKey(entry)];\n        // remove the forced-hidden segs\n        for (let level = 0; level < entriesByLevel.length; level += 1) {\n            entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n        }\n        return hiddenSegs;\n    }\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        const { entriesByLevel, forceHidden } = this;\n        const { touchingEntry, touchingLevel, touchingLateral } = insertion;\n        // the entry that the new insertion is touching must be hidden\n        if (this.hiddenConsumes && touchingEntry) {\n            const touchingEntryId = buildEntryKey(touchingEntry);\n            if (!forceHidden[touchingEntryId]) {\n                if (this.allowReslicing) {\n                    // split up the touchingEntry, reinsert it\n                    const hiddenEntry = Object.assign(Object.assign({}, touchingEntry), { span: intersectSpans(touchingEntry.span, entry.span) });\n                    // reinsert the area that turned into a \"more\" link (so no other entries try to\n                    // occupy the space) but mark it forced-hidden\n                    const hiddenEntryId = buildEntryKey(hiddenEntry);\n                    forceHidden[hiddenEntryId] = true;\n                    entriesByLevel[touchingLevel][touchingLateral] = hiddenEntry;\n                    hiddenEntries.push(hiddenEntry);\n                    this.splitEntry(touchingEntry, entry, hiddenEntries);\n                }\n                else {\n                    forceHidden[touchingEntryId] = true;\n                    hiddenEntries.push(touchingEntry);\n                }\n            }\n        }\n        // will try to reslice...\n        super.handleInvalidInsertion(insertion, entry, hiddenEntries);\n    }\n}\n\nclass TableRow extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.cellElRefs = new RefMap(); // the <td>\n        this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n        this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n        this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n        this.rootElRef = createRef();\n        this.state = {\n            framePositions: null,\n            maxContentHeight: null,\n            segHeights: {},\n        };\n        this.handleResize = (isForced) => {\n            if (isForced) {\n                this.updateSizing(true); // isExternal=true\n            }\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { options } = context;\n        let colCnt = props.cells.length;\n        let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n        let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n        let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n        let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n        let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.segHeights, state.maxContentHeight, props.cells);\n        let isForcedInvisible = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        return (createElement(\"tr\", { ref: this.rootElRef, role: \"row\" },\n            props.renderIntro && props.renderIntro(),\n            props.cells.map((cell, col) => {\n                let normalFgNodes = this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n                let mirrorFgNodes = this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n                return (createElement(TableCell, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), innerElRef: this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */, dateProfile: props.dateProfile, date: cell.date, showDayNumber: props.showDayNumbers, showWeekNumber: props.showWeekNumbers && col === 0, forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */, todayRange: props.todayRange, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, moreCnt: moreCnts[col], moreMarginTop: moreMarginTops[col], singlePlacements: singleColPlacements[col], fgContentElRef: this.fgElRefs.createRef(cell.key), fgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        createElement(Fragment, null, normalFgNodes),\n                        createElement(Fragment, null, mirrorFgNodes))), bgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        this.renderFillSegs(highlightSegsByCol[col], 'highlight'),\n                        this.renderFillSegs(businessHoursByCol[col], 'non-business'),\n                        this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))), minHeight: props.cellMinHeight }));\n            })));\n    }\n    componentDidMount() {\n        this.updateSizing(true);\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        let currentProps = this.props;\n        this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    getHighlightSegs() {\n        let { props } = this;\n        if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n            return props.eventDrag.segs;\n        }\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return props.dateSelectionSegs;\n    }\n    getMirrorSegs() {\n        let { props } = this;\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return [];\n    }\n    renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n        let { context } = this;\n        let { eventSelection } = this.props;\n        let { framePositions } = this.state;\n        let defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let nodes = [];\n        if (framePositions) {\n            for (let placement of segPlacements) {\n                let { seg } = placement;\n                let { instanceId } = seg.eventRange.instance;\n                let isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n                let isAbsolute = placement.isAbsolute;\n                let left = '';\n                let right = '';\n                if (isAbsolute) {\n                    if (context.isRtl) {\n                        right = 0;\n                        left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n                    }\n                    else {\n                        left = 0;\n                        right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n                    }\n                }\n                /*\n                known bug: events that are force to be list-item but span multiple days still take up space in later columns\n                todo: in print view, for multi-day events, don't display title within non-start/end segs\n                */\n                nodes.push(createElement(\"div\", { className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''), key: generateSegKey(seg), ref: isMirror ? null : this.segHarnessRefs.createRef(generateSegUid(seg)), style: {\n                        visibility: isVisible ? '' : 'hidden',\n                        marginTop: isAbsolute ? '' : placement.marginTop,\n                        top: isAbsolute ? placement.absoluteTop : '',\n                        left,\n                        right,\n                    } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: isDragging, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange))))));\n            }\n        }\n        return nodes;\n    }\n    renderFillSegs(segs, fillType) {\n        let { isRtl } = this.context;\n        let { todayRange } = this.props;\n        let { framePositions } = this.state;\n        let nodes = [];\n        if (framePositions) {\n            for (let seg of segs) {\n                let leftRightCss = isRtl ? {\n                    right: 0,\n                    left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n                } : {\n                    left: 0,\n                    right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n                };\n                nodes.push(createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-daygrid-bg-harness\", style: leftRightCss }, fillType === 'bg-event' ?\n                    createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, todayRange))) :\n                    renderFill(fillType)));\n            }\n        }\n        return createElement(Fragment, {}, ...nodes);\n    }\n    updateSizing(isExternalSizingChange) {\n        let { props, state, frameElRefs } = this;\n        if (!props.forPrint &&\n            props.clientWidth !== null // positioning ready?\n        ) {\n            if (isExternalSizingChange) {\n                let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key]);\n                if (frameEls.length) {\n                    let originEl = this.rootElRef.current;\n                    let newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n                    false);\n                    if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n                        this.setState({\n                            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n                            false),\n                        });\n                    }\n                }\n            }\n            const oldSegHeights = this.state.segHeights;\n            const newSegHeights = this.querySegHeights();\n            const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n            this.safeSetState({\n                // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n                // Essentially, once you compute an element's height, never null-out.\n                // TODO: always display all events, as visibility:hidden?\n                segHeights: Object.assign(Object.assign({}, oldSegHeights), newSegHeights),\n                maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n            });\n        }\n    }\n    querySegHeights() {\n        let segElMap = this.segHarnessRefs.currentMap;\n        let segHeights = {};\n        // get the max height amongst instance segs\n        for (let segUid in segElMap) {\n            let height = Math.round(segElMap[segUid].getBoundingClientRect().height);\n            segHeights[segUid] = Math.max(segHeights[segUid] || 0, height);\n        }\n        return segHeights;\n    }\n    computeMaxContentHeight() {\n        let firstKey = this.props.cells[0].key;\n        let cellEl = this.cellElRefs.currentMap[firstKey];\n        let fcContainerEl = this.fgElRefs.currentMap[firstKey];\n        return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n    getCellEls() {\n        let elMap = this.cellElRefs.currentMap;\n        return this.props.cells.map((cell) => elMap[cell.key]);\n    }\n}\nTableRow.addStateEquality({\n    segHeights: isPropsEqual,\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n    if (!mirrorSegs.length) {\n        return [];\n    }\n    let topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n    return mirrorSegs.map((seg) => ({\n        seg,\n        isVisible: true,\n        isAbsolute: true,\n        absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n        marginTop: 0,\n    }));\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n    let topsByInstanceId = {};\n    for (let placements of colPlacements) {\n        for (let placement of placements) {\n            topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n    }\n    return topsByInstanceId;\n}\n\nclass TableRows extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.splitBusinessHourSegs = memoize(splitSegsByRow);\n        this.splitBgEventSegs = memoize(splitSegsByRow);\n        this.splitFgEventSegs = memoize(splitSegsByRow);\n        this.splitDateSelectionSegs = memoize(splitSegsByRow);\n        this.splitEventDrag = memoize(splitInteractionByRow);\n        this.splitEventResize = memoize(splitInteractionByRow);\n        this.rowRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let rowCnt = props.cells.length;\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n        // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n        // choose 7 because a month view will have max 6 rows\n        let cellMinHeight = (rowCnt >= 7 && props.clientWidth) ?\n            props.clientWidth / context.options.aspectRatio / 6 :\n            null;\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(Fragment, null, props.cells.map((cells, row) => (createElement(TableRow, { ref: this.rowRefs.createRef(row), key: cells.length\n                ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                : row // in case there are no cells (like when resource view is loading)\n            , showDayNumbers: rowCnt > 1, showWeekNumbers: props.showWeekNumbers, todayRange: todayRange, dateProfile: props.dateProfile, cells: cells, renderIntro: props.renderRowIntro, businessHourSegs: businessHourSegsByRow[row], eventSelection: props.eventSelection, bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */, fgEventSegs: fgEventSegsByRow[row], dateSelectionSegs: dateSelectionSegsByRow[row], eventDrag: eventDragByRow[row], eventResize: eventResizeByRow[row], dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, clientWidth: props.clientWidth, clientHeight: props.clientHeight, cellMinHeight: cellMinHeight, forPrint: props.forPrint })))))));\n    }\n    componentDidMount() {\n        this.registerInteractiveComponent();\n    }\n    componentDidUpdate() {\n        // for if started with zero cells\n        this.registerInteractiveComponent();\n    }\n    registerInteractiveComponent() {\n        if (!this.rootEl) {\n            // HACK: need a daygrid wrapper parent to do positioning\n            // NOTE: a daygrid resource view w/o resources can have zero cells\n            const firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n            const rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n            if (rootEl) {\n                this.rootEl = rootEl;\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n        }\n    }\n    componentWillUnmount() {\n        if (this.rootEl) {\n            this.context.unregisterInteractiveComponent(this);\n            this.rootEl = null;\n        }\n    }\n    // Hit System\n    // ----------------------------------------------------------------------------------------------------\n    prepareHits() {\n        this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n        false, true);\n        this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n        true, // horizontal\n        false);\n    }\n    queryHit(positionLeft, positionTop) {\n        let { colPositions, rowPositions } = this;\n        let col = colPositions.leftToIndex(positionLeft);\n        let row = rowPositions.topToIndex(positionTop);\n        if (row != null && col != null) {\n            let cell = this.props.cells[row][col];\n            return {\n                dateProfile: this.props.dateProfile,\n                dateSpan: Object.assign({ range: this.getCellRange(row, col), allDay: true }, cell.extraDateSpan),\n                dayEl: this.getCellEl(row, col),\n                rect: {\n                    left: colPositions.lefts[col],\n                    right: colPositions.rights[col],\n                    top: rowPositions.tops[row],\n                    bottom: rowPositions.bottoms[row],\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n    getCellEl(row, col) {\n        return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n    getCellRange(row, col) {\n        let start = this.props.cells[row][col].date;\n        let end = addDays(start, 1);\n        return { start, end };\n    }\n}\nfunction isSegAllDay(seg) {\n    return seg.eventRange.def.allDay;\n}\n\nclass Table extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.elRef = createRef();\n        this.needsScrollReset = false;\n    }\n    render() {\n        let { props } = this;\n        let { dayMaxEventRows, dayMaxEvents, expandRows } = props;\n        let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n        // if rows can't expand to fill fixed height, can't do balanced-height event limit\n        // TODO: best place to normalize these options?\n        if (limitViaBalanced && !expandRows) {\n            limitViaBalanced = false;\n            dayMaxEventRows = null;\n            dayMaxEvents = null;\n        }\n        let classNames = [\n            'fc-daygrid-body',\n            limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',\n            expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n        ];\n        return (createElement(\"div\", { ref: this.elRef, className: classNames.join(' '), style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(\"table\", { role: \"presentation\", className: \"fc-scrollgrid-sync-table\", style: {\n                    width: props.clientWidth,\n                    minWidth: props.tableMinWidth,\n                    height: expandRows ? props.clientHeight : '',\n                } },\n                props.colGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(TableRows, { dateProfile: props.dateProfile, cells: props.cells, renderRowIntro: props.renderRowIntro, showWeekNumbers: props.showWeekNumbers, clientWidth: props.clientWidth, clientHeight: props.clientHeight, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows, forPrint: props.forPrint, isHitComboAllowed: props.isHitComboAllowed })))));\n    }\n    componentDidMount() {\n        this.requestScrollReset();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.dateProfile !== this.props.dateProfile) {\n            this.requestScrollReset();\n        }\n        else {\n            this.flushScrollReset();\n        }\n    }\n    requestScrollReset() {\n        this.needsScrollReset = true;\n        this.flushScrollReset();\n    }\n    flushScrollReset() {\n        if (this.needsScrollReset &&\n            this.props.clientWidth // sizes computed?\n        ) {\n            const subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n            if (subjectEl) {\n                const originEl = subjectEl.closest('.fc-daygrid-body');\n                const scrollEl = originEl.closest('.fc-scroller');\n                const scrollTop = subjectEl.getBoundingClientRect().top -\n                    originEl.getBoundingClientRect().top;\n                scrollEl.scrollTop = scrollTop ? (scrollTop + 1) : 0; // overcome border\n            }\n            this.needsScrollReset = false;\n        }\n    }\n}\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n    let el;\n    if (dateProfile.currentRangeUnit.match(/year|month/)) {\n        el = containerEl.querySelector(`[data-date=\"${formatIsoMonthStr(dateProfile.currentDate)}-01\"]`);\n        // even if view is month-based, first-of-month might be hidden...\n    }\n    if (!el) {\n        el = containerEl.querySelector(`[data-date=\"${formatDayString(dateProfile.currentDate)}\"]`);\n        // could still be hidden if an interior-view hidden day\n    }\n    return el;\n}\n\nclass DayTableSlicer extends Slicer {\n    constructor() {\n        super(...arguments);\n        this.forceDayIfListItem = true;\n    }\n    sliceRange(dateRange, dayTableModel) {\n        return dayTableModel.sliceRange(dateRange);\n    }\n}\n\nclass DayTable extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.slicer = new DayTableSlicer();\n        this.tableRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(Table, Object.assign({ ref: this.tableRef }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), { dateProfile: props.dateProfile, cells: props.dayTableModel.cells, colGroupNode: props.colGroupNode, tableMinWidth: props.tableMinWidth, renderRowIntro: props.renderRowIntro, dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, showWeekNumbers: props.showWeekNumbers, expandRows: props.expandRows, headerAlignElRef: props.headerAlignElRef, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })));\n    }\n}\n\nclass DayTableView extends TableView {\n    constructor() {\n        super(...arguments);\n        this.buildDayTableModel = memoize(buildDayTableModel);\n        this.headerRef = createRef();\n        this.tableRef = createRef();\n        // can't override any lifecycle methods from parent\n    }\n    render() {\n        let { options, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { ref: this.headerRef, dateProfile: props.dateProfile, dates: dayTableModel.headerDates, datesRepDistinctDays: dayTableModel.rowCnt === 1 }));\n        let bodyContent = (contentArg) => (createElement(DayTable, { ref: this.tableRef, dateProfile: props.dateProfile, dayTableModel: dayTableModel, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, nextDayThreshold: options.nextDayThreshold, colGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, dayMaxEvents: options.dayMaxEvents, dayMaxEventRows: options.dayMaxEventRows, showWeekNumbers: options.weekNumbers, expandRows: !props.isHeightAuto, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }));\n        return options.dayMinWidth\n            ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n            : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n}\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nclass TableDateProfileGenerator extends DateProfileGenerator {\n    // Computes the date range that will be rendered\n    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n        let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay);\n        let { props } = this;\n        return buildDayTableRenderRange({\n            currentRange: renderRange,\n            snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n            fixedWeekCount: props.fixedWeekCount,\n            dateEnv: props.dateEnv,\n        });\n    }\n}\nfunction buildDayTableRenderRange(props) {\n    let { dateEnv, currentRange } = props;\n    let { start, end } = currentRange;\n    let endOfWeek;\n    // year and month views should be aligned with weeks. this is already done for week\n    if (props.snapToWeek) {\n        start = dateEnv.startOfWeek(start);\n        // make end-of-week if not already\n        endOfWeek = dateEnv.startOfWeek(end);\n        if (endOfWeek.valueOf() !== end.valueOf()) {\n            end = addWeeks(endOfWeek, 1);\n        }\n    }\n    // ensure 6 weeks\n    if (props.fixedWeekCount) {\n        // TODO: instead of these date-math gymnastics (for multimonth view),\n        // compute dateprofiles of all months, then use start of first and end of last.\n        let lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n        let rowCnt = Math.ceil(// could be partial weeks due to hiddenDays\n        diffWeeks(lastMonthRenderStart, end));\n        end = addWeeks(end, 6 - rowCnt);\n    }\n    return { start, end };\n}\n\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\n\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };\n"],"mappings":";;;;;;;;AAAA,SAASA,aAAT,EAAwBC,oBAAxB,EAA8CC,aAA9C,EAA6DC,gBAA7D,EAA+EC,wBAA/E,EAAyGC,gBAAzG,EAA2HC,eAA3H,EAA4IC,aAA5I,EAA2JC,aAA3J,EAA0KC,gBAA1K,EAA4LC,cAA5L,EAA4MC,iBAA5M,EAA+NC,OAA/N,EAAwOC,iBAAxO,EAA2PC,UAA3P,EAAuQC,cAAvQ,EAAuRC,MAAvR,EAA+RC,gBAA/R,EAAiTC,mBAAjT,EAAsUC,iBAAtU,EAAyVC,uBAAzV,EAAkXC,KAAlX,EAAyXC,eAAzX,EAA0YC,OAA1Y,EAAmZC,YAAnZ,EAAiaC,aAAja,EAAgbC,cAAhb,EAAgcC,MAAhc,EAAwcC,aAAxc,EAAudC,YAAvd,EAAqeC,kBAAre,EAAyfC,OAAzf,EAAkgBC,UAAlgB,EAA8gBC,aAA9gB,EAA6hBC,QAA7hB,EAAuiBC,iBAAviB,EAA0jBC,eAA1jB,EAA2kBC,MAA3kB,EAAmlBC,SAAnlB,EAA8lBC,cAA9lB,EAA8mBC,aAA9mB,EAA6nBC,oBAA7nB,EAAmpBC,QAAnpB,EAA6pBC,SAA7pB,EAAwqBC,YAAxqB,QAA4rB,gCAA5rB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,QAAnC,QAAmD,8BAAnD;AAEA;AACA;AACA;AACA;;IACMC,S;;;;;EACF,qBAAc;IAAA;;IAAA;;IACV,2BAASC,SAAT;IACA,MAAKC,WAAL,GAAmBL,SAAS,EAA5B;IAFU;EAGb;;;;WACD,4BAAmBM,gBAAnB,EAAqCC,WAArC,EAAkD;MAC9C,IAAMC,KAAN,GAAyB,IAAzB,CAAMA,KAAN;MAAA,IAAaC,OAAb,GAAyB,IAAzB,CAAaA,OAAb;MACA,IAAIC,QAAQ,GAAG,EAAf;MACA,IAAIC,iBAAiB,GAAGvD,oBAAoB,CAACqD,OAAO,CAACG,OAAT,CAA5C;;MACA,IAAIN,gBAAJ,EAAsB;QAClBI,QAAQ,CAACG,IAAT,CAAc;UACVC,IAAI,EAAE,QADI;UAEVC,GAAG,EAAE,QAFK;UAGVC,QAAQ,EAAEL,iBAHA;UAIVM,KAAK,EAAE;YACHC,KAAK,EAAE,KAAKb,WADT;YAEHc,cAAc,EAAE,eAFb;YAGHC,UAAU,EAAEd;UAHT;QAJG,CAAd;MAUH;;MACDI,QAAQ,CAACG,IAAT,CAAc;QACVC,IAAI,EAAE,MADI;QAEVC,GAAG,EAAE,MAFK;QAGVM,MAAM,EAAE,IAHE;QAIVJ,KAAK,EAAE;UAAEK,OAAO,EAAEf;QAAX;MAJG,CAAd;MAMA,OAAQN,aAAa,CAAC5C,aAAD,EAAgB;QAAEkE,SAAS,EAAE,CAAC,YAAD,CAAb;QAA6BC,QAAQ,EAAEf,OAAO,CAACe;MAA/C,CAAhB,EACjBvB,aAAa,CAAC3C,gBAAD,EAAmB;QAAE+D,MAAM,EAAE,CAACb,KAAK,CAACiB,YAAP,IAAuB,CAACjB,KAAK,CAACkB,QAAxC;QAAkDC,gBAAgB,EAAEnB,KAAK,CAACkB,QAA1E;QAAoFE,IAAI,EAAE;QAAG;QAA7F;QAAyHlB,QAAQ,EAAEA;MAAnI,CAAnB,CADI,CAArB;IAEH;;;WACD,6BAAoBJ,gBAApB,EAAsCC,WAAtC,EAAmDsB,MAAnD,EAA2DC,WAA3D,EAAwE;MACpE,IAAIC,UAAU,GAAG,KAAKtB,OAAL,CAAauB,WAAb,CAAyBC,cAA1C;;MACA,IAAI,CAACF,UAAL,EAAiB;QACb,MAAM,IAAIG,KAAJ,CAAU,8BAAV,CAAN;MACH;;MACD,IAAM1B,KAAN,GAAyB,IAAzB,CAAMA,KAAN;MAAA,IAAaC,OAAb,GAAyB,IAAzB,CAAaA,OAAb;MACA,IAAIE,iBAAiB,GAAG,CAACH,KAAK,CAACkB,QAAP,IAAmBtE,oBAAoB,CAACqD,OAAO,CAACG,OAAT,CAA/D;MACA,IAAIuB,qBAAqB,GAAG,CAAC3B,KAAK,CAACkB,QAAP,IAAmBnE,wBAAwB,CAACkD,OAAO,CAACG,OAAT,CAAvE;MACA,IAAIF,QAAQ,GAAG,EAAf;;MACA,IAAIJ,gBAAJ,EAAsB;QAClBI,QAAQ,CAACG,IAAT,CAAc;UACVC,IAAI,EAAE,QADI;UAEVC,GAAG,EAAE,QAFK;UAGVC,QAAQ,EAAEL,iBAHA;UAIVyB,MAAM,EAAE,CAAC;YACDrB,GAAG,EAAE,MADJ;YAEDG,KAAK,EAAE,KAAKb,WAFX;YAGDc,cAAc,EAAE,eAHf;YAIDC,UAAU,EAAEd;UAJX,CAAD;QAJE,CAAd;MAWH;;MACDI,QAAQ,CAACG,IAAT,CAAc;QACVC,IAAI,EAAE,MADI;QAEVC,GAAG,EAAE,MAFK;QAGVM,MAAM,EAAE,IAHE;QAIVe,MAAM,EAAE,CAAC;UACDrB,GAAG,EAAE,MADJ;UAEDO,OAAO,EAAEf;QAFR,CAAD;MAJE,CAAd;;MASA,IAAI4B,qBAAJ,EAA2B;QACvBzB,QAAQ,CAACG,IAAT,CAAc;UACVC,IAAI,EAAE,QADI;UAEVC,GAAG,EAAE,QAFK;UAGVC,QAAQ,EAAE,IAHA;UAIVoB,MAAM,EAAE,CAAC;YACDrB,GAAG,EAAE,MADJ;YAEDO,OAAO,EAAE9D;UAFR,CAAD;QAJE,CAAd;MASH;;MACD,OAAQyC,aAAa,CAAC5C,aAAD,EAAgB;QAAEkE,SAAS,EAAE,CAAC,YAAD,CAAb;QAA6BC,QAAQ,EAAEf,OAAO,CAACe;MAA/C,CAAhB,EACjBvB,aAAa,CAAC8B,UAAD,EAAa;QAAEV,MAAM,EAAE,CAACb,KAAK,CAACiB,YAAP,IAAuB,CAACjB,KAAK,CAACkB,QAAxC;QAAkDA,QAAQ,EAAElB,KAAK,CAACkB,QAAlE;QAA4EC,gBAAgB,EAAEnB,KAAK,CAACkB,QAApG;QAA8GW,SAAS,EAAE,CAAC;UAAET,IAAI,EAAE,CAAC;YAAEU,IAAI,EAAET,MAAR;YAAgBU,QAAQ,EAAET;UAA1B,CAAD;QAAR,CAAD,CAAzH;QAAgLpB,QAAQ,EAAEA;MAA1L,CAAb,CADI,CAArB;IAEH;;;;EA1EmBvD,a;;AA6ExB,SAASqF,cAAT,CAAwBC,IAAxB,EAA8BC,MAA9B,EAAsC;EAClC,IAAIC,KAAK,GAAG,EAAZ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,IAAI,CAAjC,EAAoC;IAChCD,KAAK,CAACC,CAAD,CAAL,GAAW,EAAX;EACH;;EAJiC,2CAKlBH,IALkB;EAAA;;EAAA;IAKlC,oDAAsB;MAAA,IAAbI,GAAa;MAClBF,KAAK,CAACE,GAAG,CAACC,GAAL,CAAL,CAAejC,IAAf,CAAoBgC,GAApB;IACH;EAPiC;IAAA;EAAA;IAAA;EAAA;;EAQlC,OAAOF,KAAP;AACH;;AACD,SAASI,mBAAT,CAA6BN,IAA7B,EAAmCZ,MAAnC,EAA2C;EACvC,IAAImB,KAAK,GAAG,EAAZ;;EACA,KAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,MAApB,EAA4Be,CAAC,IAAI,CAAjC,EAAoC;IAChCI,KAAK,CAACJ,CAAD,CAAL,GAAW,EAAX;EACH;;EAJsC,4CAKvBH,IALuB;EAAA;;EAAA;IAKvC,uDAAsB;MAAA,IAAbI,GAAa;MAClBG,KAAK,CAACH,GAAG,CAACI,QAAL,CAAL,CAAoBpC,IAApB,CAAyBgC,GAAzB;IACH;EAPsC;IAAA;EAAA;IAAA;EAAA;;EAQvC,OAAOG,KAAP;AACH;;AACD,SAASE,qBAAT,CAA+BC,EAA/B,EAAmCT,MAAnC,EAA2C;EACvC,IAAIC,KAAK,GAAG,EAAZ;;EACA,IAAI,CAACQ,EAAL,EAAS;IACL,KAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,IAAI,CAAjC,EAAoC;MAChCD,KAAK,CAACC,CAAD,CAAL,GAAW,IAAX;IACH;EACJ,CAJD,MAKK;IACD,KAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGF,MAApB,EAA4BE,EAAC,IAAI,CAAjC,EAAoC;MAChCD,KAAK,CAACC,EAAD,CAAL,GAAW;QACPQ,iBAAiB,EAAED,EAAE,CAACC,iBADf;QAEPC,OAAO,EAAEF,EAAE,CAACE,OAFL;QAGPZ,IAAI,EAAE;MAHC,CAAX;IAKH;;IAPA,4CAQeU,EAAE,CAACV,IARlB;IAAA;;IAAA;MAQD,uDAAyB;QAAA,IAAhBI,GAAgB;QACrBF,KAAK,CAACE,GAAG,CAACC,GAAL,CAAL,CAAeL,IAAf,CAAoB5B,IAApB,CAAyBgC,GAAzB;MACH;IAVA;MAAA;IAAA;MAAA;IAAA;EAWJ;;EACD,OAAOF,KAAP;AACH;;AAED,IAAMW,+BAA+B,GAAG7F,eAAe,CAAC;EACpD8F,IAAI,EAAE,SAD8C;EAEpDC,MAAM,EAAE,SAF4C;EAGpDC,cAAc,EAAE,IAHoC;EAIpDC,QAAQ,EAAE;AAJ0C,CAAD,CAAvD;;AAMA,SAASC,kBAAT,CAA4Bd,GAA5B,EAAiC;EAC7B,IAAMe,OAAN,GAAkBf,GAAG,CAACgB,UAAJ,CAAeV,EAAjC,CAAMS,OAAN;EACA,OAAOA,OAAO,KAAK,WAAZ,IAA4BA,OAAO,KAAK,MAAZ,IAC/B,CAACf,GAAG,CAACgB,UAAJ,CAAeC,GAAf,CAAmBC,MADW,IAE/BlB,GAAG,CAACI,QAAJ,KAAiBJ,GAAG,CAACmB,OAFU,IAEC;EAChCnB,GAAG,CAACoB,OAH2B,IAGhB;EACfpB,GAAG,CAACqB,KAJD,CAIO;EAJd;AAMH;;IAEKC,e;;;;;;;;;;;;;WACF,kBAAS;MACL,IAAM3D,KAAN,GAAgB,IAAhB,CAAMA,KAAN;MACA,OAAQP,aAAa,CAACtC,aAAD,EAAgByG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB7D,KAAlB,EAAyB;QAAEe,SAAS,EAAE,CAAC,kBAAD,EAAqB,wBAArB,EAA+C,YAA/C,CAAb;QAA2E+C,iBAAiB,EAAEhB,+BAA9F;QAA+HiB,sBAAsB,EAAE/D,KAAK,CAAC+D,sBAA7J;QAAqLC,eAAe,EAAE,CAAChE,KAAK,CAACqC,GAAN,CAAUgB,UAAV,CAAqBC,GAArB,CAAyBC;MAAhO,CAAzB,CAAhB,CAArB;IACH;;;;EAJyBrG,a;;IAOxB+G,kB;;;;;;;;;;;;;WACF,kBAAS;MACL,IAAMjE,KAAN,GAAyB,IAAzB,CAAMA,KAAN;MAAA,IAAaC,OAAb,GAAyB,IAAzB,CAAaA,OAAb;MACA,IAAMG,OAAN,GAAkBH,OAAlB,CAAMG,OAAN;MACA,IAAMiC,GAAN,GAAcrC,KAAd,CAAMqC,GAAN;MACA,IAAI6B,UAAU,GAAG9D,OAAO,CAAC+D,eAAR,IAA2BrB,+BAA5C;MACA,IAAIsB,QAAQ,GAAGhH,gBAAgB,CAACiF,GAAD,EAAM6B,UAAN,EAAkBjE,OAAlB,EAA2B,IAA3B,EAAiCD,KAAK,CAAC+D,sBAAvC,CAA/B;MACA,OAAQtE,aAAa,CAACpC,cAAD,EAAiBuG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB7D,KAAlB,EAAyB;QAAEqE,KAAK,EAAE,GAAT;QAActD,SAAS,EAAE,CAAC,kBAAD,EAAqB,sBAArB,CAAzB;QAAuEuD,OAAO,EAAEhH,iBAAiB,CAAC0C,KAAK,CAACqC,GAAP,EAAYpC,OAAZ,CAAjG;QAAuHsE,gBAAgB,EAAEC,kBAAzI;QAA6JJ,QAAQ,EAAEA,QAAvK;QAAiLK,UAAU,EAAE,KAA7L;QAAoMC,eAAe,EAAE;MAArN,CAAzB,CAAjB,CAArB;IACH;;;;EAR4BxH,a;;AAUjC,SAASsH,kBAAT,CAA4BG,WAA5B,EAAyC;EACrC,OAAQlF,aAAa,CAACC,QAAD,EAAW,IAAX,EACjBD,aAAa,CAAC,KAAD,EAAQ;IAAEmF,SAAS,EAAE,sBAAb;IAAqCC,KAAK,EAAE;MAAEC,WAAW,EAAEH,WAAW,CAACG,WAAZ,IAA2BH,WAAW,CAACI;IAAtD;EAA5C,CAAR,CADI,EAEjBJ,WAAW,CAACP,QAAZ,IAAyB3E,aAAa,CAAC,KAAD,EAAQ;IAAEmF,SAAS,EAAE;EAAb,CAAR,EAAwCD,WAAW,CAACP,QAApD,CAFrB,EAGjB3E,aAAa,CAAC,KAAD,EAAQ;IAAEmF,SAAS,EAAE;EAAb,CAAR,EAAyCD,WAAW,CAACK,KAAZ,CAAkBC,KAAlB,IAA2BxF,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiB,MAAjB,CAAjF,CAHI,CAArB;AAIH;;IAEKwF,iB;;;;;EACF,6BAAc;IAAA;;IAAA;;IACV,6BAAStF,SAAT;IACA,OAAKuF,WAAL,GAAmB5H,OAAO,CAAC4H,WAAD,CAA1B;IAFU;EAGb;;;;WACD,kBAAS;MACL,IAAMnF,KAAN,GAAgB,IAAhB,CAAMA,KAAN;;MACA,wBAAiC,KAAKmF,WAAL,CAAiBnF,KAAK,CAACoF,gBAAvB,CAAjC;MAAA,IAAMC,OAAN,qBAAMA,OAAN;MAAA,IAAeC,aAAf,qBAAeA,aAAf;;MACA,OAAQ7F,aAAa,CAACjC,iBAAD,EAAoB;QAAEuD,SAAS,EAAE,CAAC,sBAAD,CAAb;QAAuCwE,WAAW,EAAEvF,KAAK,CAACuF,WAA1D;QAAuEC,UAAU,EAAExF,KAAK,CAACwF,UAAzF;QAAqGC,UAAU,EAAEzF,KAAK,CAACyF,UAAvH;QAAmIC,OAAO,EAAE1F,KAAK,CAAC0F,OAAlJ;QAA2JL,OAAO,EAAEA,OAApK;QAA6KM,UAAU,EAAEL,aAAzL;QAAwMM,cAAc,EAAE5F,KAAK,CAAC4F,cAA9N;QAA8OC,YAAY,EAAE7F,KAAK,CAAC6F,YAAlQ;QAAgRC,aAAa,EAAE9F,KAAK,CAAC8F,aAArS;QAAoTC,cAAc,EAAE,0BAAM;UAC3W,IAAIC,iBAAiB,GAAG,CAAChG,KAAK,CAACiG,SAAN,GAAkBjG,KAAK,CAACiG,SAAN,CAAgBrD,iBAAlC,GAAsD,IAAvD,MACnB5C,KAAK,CAACkG,WAAN,GAAoBlG,KAAK,CAACkG,WAAN,CAAkBtD,iBAAtC,GAA0D,IADvC,KAEpB,EAFJ;UAGA,OAAQnD,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiB2F,OAAO,CAACc,GAAR,CAAY,UAAC9D,GAAD,EAAS;YACvD,IAAI+D,UAAU,GAAG/D,GAAG,CAACgB,UAAJ,CAAegD,QAAf,CAAwBD,UAAzC;YACA,OAAQ3G,aAAa,CAAC,KAAD,EAAQ;cAAEmF,SAAS,EAAE,0BAAb;cAAyCrE,GAAG,EAAE6F,UAA9C;cAA0DvB,KAAK,EAAE;gBACtFyB,UAAU,EAAEN,iBAAiB,CAACI,UAAD,CAAjB,GAAgC,QAAhC,GAA2C;cAD+B;YAAjE,CAAR,EAEZjD,kBAAkB,CAACd,GAAD,CAAlB,GAA2B5C,aAAa,CAACwE,kBAAD,EAAqBL,MAAM,CAACC,MAAP,CAAc;cAAExB,GAAG,EAAEA,GAAP;cAAYkE,UAAU,EAAE,KAAxB;cAA+BC,UAAU,EAAEJ,UAAU,KAAKpG,KAAK,CAACyG,cAAhE;cAAgF1C,sBAAsB,EAAE;YAAxG,CAAd,EAA+HtG,UAAU,CAAC4E,GAAD,EAAMrC,KAAK,CAACwF,UAAZ,CAAzI,CAArB,CAAxC,GAAoO/F,aAAa,CAACkE,eAAD,EAAkBC,MAAM,CAACC,MAAP,CAAc;cAAExB,GAAG,EAAEA,GAAP;cAAYkE,UAAU,EAAE,KAAxB;cAA+B9B,UAAU,EAAE,KAA3C;cAAkDC,eAAe,EAAE,KAAnE;cAA0E8B,UAAU,EAAEJ,UAAU,KAAKpG,KAAK,CAACyG,cAA3G;cAA2H1C,sBAAsB,EAAE;YAAnJ,CAAd,EAA0KtG,UAAU,CAAC4E,GAAD,EAAMrC,KAAK,CAACwF,UAAZ,CAApL,CAAlB,CAFrO,CAArB;UAGH,CALqC,CAAjB,CAArB;QAMH;MAVoC,CAApB,CAArB;IAWH;;;;EAnB2BtI,a;;AAqBhC,SAASiI,WAAT,CAAqBC,gBAArB,EAAuC;EACnC,IAAIC,OAAO,GAAG,EAAd;EACA,IAAIC,aAAa,GAAG,EAApB;;EAFmC,4CAGbF,gBAHa;EAAA;;EAAA;IAGnC,uDAAwC;MAAA,IAA/BsB,SAA+B;MACpCrB,OAAO,CAAChF,IAAR,CAAaqG,SAAS,CAACrE,GAAvB;;MACA,IAAI,CAACqE,SAAS,CAACC,SAAf,EAA0B;QACtBrB,aAAa,CAACjF,IAAd,CAAmBqG,SAAS,CAACrE,GAA7B;MACH;IACJ;EARkC;IAAA;EAAA;IAAA;EAAA;;EASnC,OAAO;IAAEgD,OAAO,EAAPA,OAAF;IAAWC,aAAa,EAAbA;EAAX,CAAP;AACH;;AAED,IAAMsB,uBAAuB,GAAG3J,eAAe,CAAC;EAAE4J,IAAI,EAAE;AAAR,CAAD,CAA/C;;IACMC,S;;;;;EACF,qBAAc;IAAA;;IAAA;;IACV,6BAASlH,SAAT;IACA,OAAKmH,SAAL,GAAiBvH,SAAS,EAA1B;IACA,OAAKwH,KAAL,GAAa;MACTC,WAAW,EAAEvJ,cAAc;IADlB,CAAb;;IAGA,OAAKwJ,YAAL,GAAoB,UAACC,EAAD,EAAQ;MACxBxJ,MAAM,CAAC,OAAKoJ,SAAN,EAAiBI,EAAjB,CAAN;MACAxJ,MAAM,CAAC,OAAKqC,KAAL,CAAWU,KAAZ,EAAmByG,EAAnB,CAAN;IACH,CAHD;;IANU;EAUb;;;;WACD,kBAAS;MACL,IAAMlH,OAAN,GAA2C,IAA3C,CAAMA,OAAN;MAAA,IAAeD,KAAf,GAA2C,IAA3C,CAAeA,KAAf;MAAA,IAAsBgH,KAAtB,GAA2C,IAA3C,CAAsBA,KAAtB;MAAA,IAA6BD,SAA7B,GAA2C,IAA3C,CAA6BA,SAA7B;MACA,IAAM3G,OAAN,GAA2BH,OAA3B,CAAMG,OAAN;MAAA,IAAegH,OAAf,GAA2BnH,OAA3B,CAAemH,OAAf;MACA,IAAMC,IAAN,GAA4BrH,KAA5B,CAAMqH,IAAN;MAAA,IAAY9B,WAAZ,GAA4BvF,KAA5B,CAAYuF,WAAZ,CAHK,CAIL;;MACA,IAAM+B,YAAY,GAAGtH,KAAK,CAACuH,aAAN,IACjBC,uBAAuB,CAACH,IAAD,EAAO9B,WAAW,CAACkC,YAAnB,EAAiCL,OAAjC,CAD3B;MAEA,OAAQ3H,aAAa,CAAC7B,gBAAD,EAAmB;QAAEyG,KAAK,EAAE,IAAT;QAAe3D,KAAK,EAAE,KAAKwG,YAA3B;QAAyCnG,SAAS,GAClF,gBADkF,4BAE9Ef,KAAK,CAAC0H,eAAN,IAAyB,EAFqD,EAAlD;QAGjCpD,OAAO,EAAEV,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB7D,KAAK,CAAC2H,cAAxB,CAAd,EAAwD3H,KAAK,CAACuH,aAAN,GAAsB;UAAE,mBAAmBP,KAAK,CAACC;QAA3B,CAAtB,GAAiE,EAAzH,CAAd,EAA6I;UAAEW,IAAI,EAAE;QAAR,CAA7I,CAHwB;QAG4IrD,gBAAgB,EAAEsD,cAH9J;QAG8KR,IAAI,EAAEA,IAHpL;QAG0L9B,WAAW,EAAEA,WAHvM;QAGoNC,UAAU,EAAExF,KAAK,CAACwF,UAHtO;QAGkP+B,aAAa,EAAEvH,KAAK,CAACuH,aAHvQ;QAGsRD,YAAY,EAAEA,YAHpS;QAGkTQ,gBAAgB,EAAE9H,KAAK,CAAC8H;MAH1U,CAAnB,EAGiX,UAACC,YAAD,EAAepD,WAAf;QAAA,OAAgClF,aAAa,CAAC,KAAD,EAAQ;UAAEuI,GAAG,EAAEhI,KAAK,CAACiI,UAAb;UAAyBrD,SAAS,EAAE,+CAApC;UAAqFC,KAAK,EAAE;YAAEqD,SAAS,EAAElI,KAAK,CAACkI;UAAnB;QAA5F,CAAR,EAC/alI,KAAK,CAACmI,cAAN,IAAyB1I,aAAa,CAAC5B,mBAAD,EAAsB;UAAEwG,KAAK,EAAE,GAAT;UAActD,SAAS,EAAE,CAAC,wBAAD,CAAzB;UAAqDuD,OAAO,EAAExG,iBAAiB,CAACmC,OAAD,EAAUoH,IAAV,EAAgB,MAAhB,CAA/E;UAAwGA,IAAI,EAAEA,IAA9G;UAAoHe,aAAa,EAAExB;QAAnI,CAAtB,CADyY,EAE/a,CAACjC,WAAW,CAAC0D,UAAb,KACKrI,KAAK,CAACuH,aAAN,IAAuBxJ,uBAAuB,CAACqC,OAAD,CAA9C,IAA2DJ,KAAK,CAACsI,WADtE,IACsF7I,aAAa,CAAC,KAAD,EAAQ;UAAEmF,SAAS,EAAE;QAAb,CAAR,EAC/FnF,aAAa,CAACsI,YAAD,EAAe;UAAE1D,KAAK,EAAE,GAAT;UAActD,SAAS,EAAE,CAC7C,uBAD6C,EAE7CuG,YAAY,IAAI,wBAF6B,CAAzB;UAGrBhD,OAAO,EAAEV,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB/F,iBAAiB,CAACmC,OAAD,EAAUoH,IAAV,CAAnC,CAAd,EAAmE;YAAEkB,EAAE,EAAEvB,KAAK,CAACC;UAAZ,CAAnE;QAHY,CAAf,CADkF,CADnG,GAKyHjH,KAAK,CAACuH,aAAN,GACzH;QACA9H,aAAa,CAAC,KAAD,EAAQ;UAAEmF,SAAS,EAAE,oBAAb;UAAmCC,KAAK,EAAE;YAAEyB,UAAU,EAAE;UAAd;QAA1C,CAAR,EACT7G,aAAa,CAAC,GAAD,EAAM;UAAEmF,SAAS,EAAE;QAAb,CAAN,EAA8C,MAA9C,CADJ,CAF4G,GAG5C4D,SAVkW,EAW/a/I,aAAa,CAAC,KAAD,EAAQ;UAAEmF,SAAS,EAAE,uBAAb;UAAsCoD,GAAG,EAAEhI,KAAK,CAACyI;QAAjD,CAAR,EACTzI,KAAK,CAAC0I,SADG,EAETjJ,aAAa,CAAC,KAAD,EAAQ;UAAEmF,SAAS,EAAE,uBAAb;UAAsCC,KAAK,EAAE;YAAE8D,SAAS,EAAE3I,KAAK,CAAC4I;UAAnB;QAA7C,CAAR,EACTnJ,aAAa,CAACyF,iBAAD,EAAoB;UAAEO,UAAU,EAAE4B,IAAd;UAAoBjC,gBAAgB,EAAEpF,KAAK,CAACoF,gBAA5C;UAA8DM,OAAO,EAAE1F,KAAK,CAAC0F,OAA7E;UAAsFE,cAAc,EAAEmB,SAAtG;UAAiHlB,YAAY,EAAE,CAAC7F,KAAK,CAACuH,aAAtI;UAAqJzB,aAAa,EAAE9F,KAAK,CAAC8F,aAA1K;UAAyLP,WAAW,EAAEvF,KAAK,CAACuF,WAA5M;UAAyNkB,cAAc,EAAEzG,KAAK,CAACyG,cAA/O;UAA+PR,SAAS,EAAEjG,KAAK,CAACiG,SAAhR;UAA2RC,WAAW,EAAElG,KAAK,CAACkG,WAA9S;UAA2TV,UAAU,EAAExF,KAAK,CAACwF;QAA7U,CAApB,CADJ,CAFJ,CAXka,EAe/a/F,aAAa,CAAC,KAAD,EAAQ;UAAEmF,SAAS,EAAE;QAAb,CAAR,EAA4C5E,KAAK,CAAC6I,SAAlD,CAfka,CAA7C;MAAA,CAHjX,CAArB;IAmBH;;;;EAtCmBlM,a;;AAwCxB,SAASkL,cAAT,CAAwB7H,KAAxB,EAA+B;EAC3B,OAAOA,KAAK,CAAC8I,aAAN,IAAuBrJ,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiB,MAAjB,CAA3C;AACH;;AACD,SAAS8H,uBAAT,CAAiCH,IAAjC,EAAuCI,YAAvC,EAAqDL,OAArD,EAA8D;EAC1D,IAAe2B,YAAf,GAAiDtB,YAAjD,CAAQuB,KAAR;EAAA,IAAkCC,UAAlC,GAAiDxB,YAAjD,CAA6ByB,GAA7B;EACA,IAAMC,cAAc,GAAGnL,KAAK,CAACiL,UAAD,EAAa,CAAC,CAAd,CAA5B;EACA,IAAMG,gBAAgB,GAAGhC,OAAO,CAACiC,OAAR,CAAgBN,YAAhB,CAAzB;EACA,IAAMO,iBAAiB,GAAGlC,OAAO,CAACmC,QAAR,CAAiBR,YAAjB,CAA1B;EACA,IAAMS,eAAe,GAAGpC,OAAO,CAACiC,OAAR,CAAgBF,cAAhB,CAAxB;EACA,IAAMM,gBAAgB,GAAGrC,OAAO,CAACmC,QAAR,CAAiBJ,cAAjB,CAAzB,CAN0D,CAO1D;;EACA,OAAO,EAAEC,gBAAgB,KAAKI,eAArB,IAAwCF,iBAAiB,KAAKG,gBAAhE,KACHC,OAAO,EACP;EACArC,IAAI,CAACsC,OAAL,OAAmBZ,YAAY,CAACY,OAAb,EAAnB,IACI;EACCvC,OAAO,CAACwC,MAAR,CAAevC,IAAf,MAAyB,CAAzB,IAA8BA,IAAI,CAACsC,OAAL,KAAiBV,UAAU,CAACU,OAAX,EAJ7C,CADX;AAMH;;AAED,SAASE,cAAT,CAAwBxH,GAAxB,EAA6B;EACzB,OAAOA,GAAG,CAACgB,UAAJ,CAAegD,QAAf,CAAwBD,UAAxB,GAAqC,GAArC,GAA2C/D,GAAG,CAACI,QAAtD;AACH;;AACD,SAASqH,cAAT,CAAwBzH,GAAxB,EAA6B;EACzB,OAAOwH,cAAc,CAACxH,GAAD,CAAd,GAAsB,GAAtB,GAA4BA,GAAG,CAACmB,OAAvC;AACH;;AACD,SAASuG,qBAAT,CAA+B9H,IAA/B,EAAqC;AACrC+H,YADA,EACcC,eADd,EAC+BC,WAD/B,EAC4CC,UAD5C,EACwDC,gBADxD,EAC0EC,KAD1E,EACiF;EAC7E,IAAIC,SAAS,GAAG,IAAIC,mBAAJ,CAAwB,UAACC,QAAD,EAAc;IAClD;IACA,IAAIC,MAAM,GAAGxI,IAAI,CAACuI,QAAQ,CAACE,KAAV,CAAJ,CAAqBrH,UAArB,CAAgCgD,QAAhC,CAAyCD,UAAzC,GACT,GADS,GACHoE,QAAQ,CAAC1I,IAAT,CAAckH,KADX,GAET,GAFS,IAEFwB,QAAQ,CAAC1I,IAAT,CAAcoH,GAAd,GAAoB,CAFlB,CAAb,CAFkD,CAKlD;;IACA,OAAOiB,UAAU,CAACM,MAAD,CAAV,IAAsB,CAA7B;EACH,CAPe,CAAhB;EAQAH,SAAS,CAACK,cAAV,GAA2B,IAA3B;EACAL,SAAS,CAACJ,WAAV,GAAwBA,WAAxB;;EACA,IAAIF,YAAY,KAAK,IAAjB,IAAyBC,eAAe,KAAK,IAAjD,EAAuD;IACnDK,SAAS,CAACM,QAAV,GAAqBR,gBAArB;IACAE,SAAS,CAACO,cAAV,GAA2B,IAA3B;EACH,CAHD,MAIK,IAAI,OAAOb,YAAP,KAAwB,QAA5B,EAAsC;IACvCM,SAAS,CAACQ,WAAV,GAAwBd,YAAxB;EACH,CAFI,MAGA,IAAI,OAAOC,eAAP,KAA2B,QAA/B,EAAyC;IAC1CK,SAAS,CAACQ,WAAV,GAAwBb,eAAxB;IACAK,SAAS,CAACO,cAAV,GAA2B,IAA3B;EACH,CArB4E,CAsB7E;;;EACA,IAAIE,SAAS,GAAG,EAAhB;EACA,IAAIC,iBAAiB,GAAG,EAAxB;;EACA,KAAK,IAAI5I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACgJ,MAAzB,EAAiC7I,CAAC,IAAI,CAAtC,EAAyC;IACrC,IAAIC,GAAG,GAAGJ,IAAI,CAACG,CAAD,CAAd;IACA,IAAIqI,MAAM,GAAGX,cAAc,CAACzH,GAAD,CAA3B;IACA,IAAI6I,WAAW,GAAGf,UAAU,CAACM,MAAD,CAA5B;;IACA,IAAIS,WAAW,IAAI,IAAnB,EAAyB;MACrBH,SAAS,CAAC1K,IAAV,CAAe;QACXqK,KAAK,EAAEtI,CADI;QAEXN,IAAI,EAAE;UACFkH,KAAK,EAAE3G,GAAG,CAACI,QADT;UAEFyG,GAAG,EAAE7G,GAAG,CAACmB,OAAJ,GAAc;QAFjB;MAFK,CAAf;IAOH,CARD,MASK;MACDwH,iBAAiB,CAAC3K,IAAlB,CAAuBgC,GAAvB;IACH;EACJ;;EACD,IAAI8I,aAAa,GAAGb,SAAS,CAACc,OAAV,CAAkBL,SAAlB,CAApB;EACA,IAAIM,QAAQ,GAAGf,SAAS,CAACgB,OAAV,EAAf;;EACA,kBAAmEC,UAAU,CAACF,QAAD,EAAWpJ,IAAX,EAAiBoI,KAAjB,CAA7E;EAAA,IAAMmB,mBAAN,eAAMA,mBAAN;EAAA,IAA2BC,kBAA3B,eAA2BA,kBAA3B;EAAA,IAA+CC,eAA/C,eAA+CA,eAA/C;;EACA,IAAIC,QAAQ,GAAG,EAAf;EACA,IAAIC,cAAc,GAAG,EAArB,CA9C6E,CA+C7E;;EACA,uCAAgBZ,iBAAhB,0CAAmC;IAA9B,IAAI3I,GAAG,0BAAP;IACDoJ,kBAAkB,CAACpJ,GAAG,CAACI,QAAL,CAAlB,CAAiCpC,IAAjC,CAAsC;MAClCgC,GAAG,EAAHA,GADkC;MAElCsE,SAAS,EAAE,KAFuB;MAGlCkF,UAAU,EAAE,IAHsB;MAIlCC,WAAW,EAAE,CAJqB;MAKlCnD,SAAS,EAAE;IALuB,CAAtC;;IAOA,KAAK,IAAIoD,GAAG,GAAG1J,GAAG,CAACI,QAAnB,EAA6BsJ,GAAG,IAAI1J,GAAG,CAACmB,OAAxC,EAAiDuI,GAAG,IAAI,CAAxD,EAA2D;MACvDP,mBAAmB,CAACO,GAAD,CAAnB,CAAyB1L,IAAzB,CAA8B;QAC1BgC,GAAG,EAAE2J,UAAU,CAAC3J,GAAD,EAAM0J,GAAN,EAAWA,GAAG,GAAG,CAAjB,EAAoB1B,KAApB,CADW;QAE1B1D,SAAS,EAAE,KAFe;QAG1BkF,UAAU,EAAE,KAHc;QAI1BC,WAAW,EAAE,CAJa;QAK1BnD,SAAS,EAAE;MALe,CAA9B;IAOH;EACJ,CAjE4E,CAkE7E;;;EACA,KAAK,IAAIoD,IAAG,GAAG,CAAf,EAAkBA,IAAG,GAAG1B,KAAK,CAACY,MAA9B,EAAsCc,IAAG,IAAI,CAA7C,EAAgD;IAC5CJ,QAAQ,CAACtL,IAAT,CAAc,CAAd;EACH;;EArE4E,4CAsErD8K,aAtEqD;EAAA;;EAAA;IAsE7E,uDAAuC;MAAA,IAA9Bc,WAA8B;MACnC,IAAI5J,IAAG,GAAGJ,IAAI,CAACgK,WAAW,CAACvB,KAAb,CAAd;MACA,IAAIwB,UAAU,GAAGD,WAAW,CAACnK,IAA7B;MACA2J,kBAAkB,CAACS,UAAU,CAAClD,KAAZ,CAAlB,CAAqC3I,IAArC,CAA0C;QACtCgC,GAAG,EAAE2J,UAAU,CAAC3J,IAAD,EAAM6J,UAAU,CAAClD,KAAjB,EAAwBkD,UAAU,CAAChD,GAAnC,EAAwCmB,KAAxC,CADuB;QAEtC1D,SAAS,EAAE,KAF2B;QAGtCkF,UAAU,EAAE,IAH0B;QAItCC,WAAW,EAAE,CAJyB;QAKtCnD,SAAS,EAAE;MAL2B,CAA1C;;MAOA,KAAK,IAAIoD,KAAG,GAAGG,UAAU,CAAClD,KAA1B,EAAiC+C,KAAG,GAAGG,UAAU,CAAChD,GAAlD,EAAuD6C,KAAG,IAAI,CAA9D,EAAiE;QAC7DJ,QAAQ,CAACI,KAAD,CAAR,IAAiB,CAAjB;;QACAP,mBAAmB,CAACO,KAAD,CAAnB,CAAyB1L,IAAzB,CAA8B;UAC1BgC,GAAG,EAAE2J,UAAU,CAAC3J,IAAD,EAAM0J,KAAN,EAAWA,KAAG,GAAG,CAAjB,EAAoB1B,KAApB,CADW;UAE1B1D,SAAS,EAAE,KAFe;UAG1BkF,UAAU,EAAE,KAHc;UAI1BC,WAAW,EAAE,CAJa;UAK1BnD,SAAS,EAAE;QALe,CAA9B;MAOH;IACJ,CA1F4E,CA2F7E;;EA3F6E;IAAA;EAAA;IAAA;EAAA;;EA4F7E,KAAK,IAAIoD,KAAG,GAAG,CAAf,EAAkBA,KAAG,GAAG1B,KAAK,CAACY,MAA9B,EAAsCc,KAAG,IAAI,CAA7C,EAAgD;IAC5CH,cAAc,CAACvL,IAAf,CAAoBqL,eAAe,CAACK,KAAD,CAAnC;EACH;;EACD,OAAO;IAAEP,mBAAmB,EAAnBA,mBAAF;IAAuBC,kBAAkB,EAAlBA,kBAAvB;IAA2CE,QAAQ,EAARA,QAA3C;IAAqDC,cAAc,EAAdA;EAArD,CAAP;AACH,C,CACD;;;AACA,SAASL,UAAT,CAAoBY,QAApB,EAA8BlK,IAA9B,EAAoCoI,KAApC,EAA2C;EACvC,IAAI+B,cAAc,GAAGC,mBAAmB,CAACF,QAAD,EAAW9B,KAAK,CAACY,MAAjB,CAAxC;EACA,IAAIO,mBAAmB,GAAG,EAA1B;EACA,IAAIC,kBAAkB,GAAG,EAAzB;EACA,IAAIC,eAAe,GAAG,EAAtB;;EACA,KAAK,IAAIK,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG1B,KAAK,CAACY,MAA9B,EAAsCc,GAAG,IAAI,CAA7C,EAAgD;IAC5C,IAAIO,KAAK,GAAGF,cAAc,CAACL,GAAD,CAA1B,CAD4C,CAE5C;;IACA,IAAI3G,gBAAgB,GAAG,EAAvB;IACA,IAAImH,aAAa,GAAG,CAApB;IACA,IAAIC,gBAAgB,GAAG,CAAvB;;IAL4C,4CAM3BF,KAN2B;IAAA;;IAAA;MAM5C,uDAAwB;QAAA,IAAfG,IAAe;QACpB,IAAIpK,GAAG,GAAGJ,IAAI,CAACwK,IAAI,CAAC/B,KAAN,CAAd;QACAtF,gBAAgB,CAAC/E,IAAjB,CAAsB;UAClBgC,GAAG,EAAE2J,UAAU,CAAC3J,GAAD,EAAM0J,GAAN,EAAWA,GAAG,GAAG,CAAjB,EAAoB1B,KAApB,CADG;UAElB1D,SAAS,EAAE,IAFO;UAGlBkF,UAAU,EAAE,KAHM;UAIlBC,WAAW,EAAEW,IAAI,CAACC,UAJA;UAKlB/D,SAAS,EAAE8D,IAAI,CAACC,UAAL,GAAkBH;QALX,CAAtB;QAOAA,aAAa,GAAGE,IAAI,CAACC,UAAL,GAAkBD,IAAI,CAACE,SAAvC;MACH,CAhB2C,CAiB5C;;IAjB4C;MAAA;IAAA;MAAA;IAAA;;IAkB5C,IAAIC,eAAe,GAAG,EAAtB;IACAL,aAAa,GAAG,CAAhB;IACAC,gBAAgB,GAAG,CAAnB;;IApB4C,4CAqB3BF,KArB2B;IAAA;;IAAA;MAqB5C,uDAAwB;QAAA,IAAfG,KAAe;QACpB,IAAIpK,KAAG,GAAGJ,IAAI,CAACwK,KAAI,CAAC/B,KAAN,CAAd;QACA,IAAImB,UAAU,GAAGY,KAAI,CAAC3K,IAAL,CAAUoH,GAAV,GAAgBuD,KAAI,CAAC3K,IAAL,CAAUkH,KAA1B,GAAkC,CAAnD,CAFoB,CAEkC;;QACtD,IAAI6D,UAAU,GAAGJ,KAAI,CAAC3K,IAAL,CAAUkH,KAAV,KAAoB+C,GAArC;QACAS,gBAAgB,IAAIC,KAAI,CAACC,UAAL,GAAkBH,aAAtC,CAJoB,CAIiC;;QACrDA,aAAa,GAAGE,KAAI,CAACC,UAAL,GAAkBD,KAAI,CAACE,SAAvC,CALoB,CAK8B;;QAClD,IAAId,UAAJ,EAAgB;UACZW,gBAAgB,IAAIC,KAAI,CAACE,SAAzB;;UACA,IAAIE,UAAJ,EAAgB;YACZD,eAAe,CAACvM,IAAhB,CAAqB;cACjBgC,GAAG,EAAE2J,UAAU,CAAC3J,KAAD,EAAMoK,KAAI,CAAC3K,IAAL,CAAUkH,KAAhB,EAAuByD,KAAI,CAAC3K,IAAL,CAAUoH,GAAjC,EAAsCmB,KAAtC,CADE;cAEjB1D,SAAS,EAAE,IAFM;cAGjBkF,UAAU,EAAE,IAHK;cAIjBC,WAAW,EAAEW,KAAI,CAACC,UAJD;cAKjB/D,SAAS,EAAE;YALM,CAArB;UAOH;QACJ,CAXD,MAYK,IAAIkE,UAAJ,EAAgB;UACjBD,eAAe,CAACvM,IAAhB,CAAqB;YACjBgC,GAAG,EAAE2J,UAAU,CAAC3J,KAAD,EAAMoK,KAAI,CAAC3K,IAAL,CAAUkH,KAAhB,EAAuByD,KAAI,CAAC3K,IAAL,CAAUoH,GAAjC,EAAsCmB,KAAtC,CADE;YAEjB1D,SAAS,EAAE,IAFM;YAGjBkF,UAAU,EAAE,KAHK;YAIjBC,WAAW,EAAEW,KAAI,CAACC,UAJD;YAKjB/D,SAAS,EAAE6D,gBALM,CAKY;;UALZ,CAArB;UAOAA,gBAAgB,GAAG,CAAnB;QACH;MACJ;IAjD2C;MAAA;IAAA;MAAA;IAAA;;IAkD5ChB,mBAAmB,CAACnL,IAApB,CAAyB+E,gBAAzB;IACAqG,kBAAkB,CAACpL,IAAnB,CAAwBuM,eAAxB;IACAlB,eAAe,CAACrL,IAAhB,CAAqBmM,gBAArB;EACH;;EACD,OAAO;IAAEhB,mBAAmB,EAAnBA,mBAAF;IAAuBC,kBAAkB,EAAlBA,kBAAvB;IAA2CC,eAAe,EAAfA;EAA3C,CAAP;AACH;;AACD,SAASW,mBAAT,CAA6BC,KAA7B,EAAoCjL,MAApC,EAA4C;EACxC,IAAI+K,cAAc,GAAG,EAArB;;EACA,KAAK,IAAIL,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG1K,MAAxB,EAAgC0K,GAAG,IAAI,CAAvC,EAA0C;IACtCK,cAAc,CAAC/L,IAAf,CAAoB,EAApB;EACH;;EAJuC,4CAKvBiM,KALuB;EAAA;;EAAA;IAKxC,uDAAwB;MAAA,IAAfG,IAAe;;MACpB,KAAK,IAAIV,KAAG,GAAGU,IAAI,CAAC3K,IAAL,CAAUkH,KAAzB,EAAgC+C,KAAG,GAAGU,IAAI,CAAC3K,IAAL,CAAUoH,GAAhD,EAAqD6C,KAAG,IAAI,CAA5D,EAA+D;QAC3DK,cAAc,CAACL,KAAD,CAAd,CAAoB1L,IAApB,CAAyBoM,IAAzB;MACH;IACJ;EATuC;IAAA;EAAA;IAAA;EAAA;;EAUxC,OAAOL,cAAP;AACH;;AACD,SAASJ,UAAT,CAAoB3J,GAApB,EAAyByK,SAAzB,EAAoCC,OAApC,EAA6C1C,KAA7C,EAAoD;EAChD,IAAIhI,GAAG,CAACI,QAAJ,KAAiBqK,SAAjB,IAA8BzK,GAAG,CAACmB,OAAJ,KAAgBuJ,OAAO,GAAG,CAA5D,EAA+D;IAC3D,OAAO1K,GAAP;EACH;;EACD,IAAIgB,UAAU,GAAGhB,GAAG,CAACgB,UAArB;EACA,IAAI2J,SAAS,GAAG3J,UAAU,CAAC4J,KAA3B;EACA,IAAIC,WAAW,GAAGjP,eAAe,CAAC+O,SAAD,EAAY;IACzChE,KAAK,EAAEqB,KAAK,CAACyC,SAAD,CAAL,CAAiBzF,IADiB;IAEzC6B,GAAG,EAAEhL,OAAO,CAACmM,KAAK,CAAC0C,OAAO,GAAG,CAAX,CAAL,CAAmB1F,IAApB,EAA0B,CAA1B;EAF6B,CAAZ,CAAjC;EAIA,OAAOzD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxB,GAAlB,CAAd,EAAsC;IAAEI,QAAQ,EAAEqK,SAAZ;IAAuBtJ,OAAO,EAAEuJ,OAAO,GAAG,CAA1C;IAA6C1J,UAAU,EAAE;MAC9FC,GAAG,EAAED,UAAU,CAACC,GAD8E;MAE9FX,EAAE,EAAEiB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,UAAU,CAACV,EAA7B,CAAd,EAAgD;QAAEwK,gBAAgB,EAAE;MAApB,CAAhD,CAF0F;MAG9F9G,QAAQ,EAAEhD,UAAU,CAACgD,QAHyE;MAI9F4G,KAAK,EAAEC;IAJuF,CAAzD;IAKtCzJ,OAAO,EAAEpB,GAAG,CAACoB,OAAJ,IAAeyJ,WAAW,CAAClE,KAAZ,CAAkBW,OAAlB,OAAgCqD,SAAS,CAAChE,KAAV,CAAgBW,OAAhB,EALlB;IAK6CjG,KAAK,EAAErB,GAAG,CAACqB,KAAJ,IAAawJ,WAAW,CAAChE,GAAZ,CAAgBS,OAAhB,OAA8BqD,SAAS,CAAC9D,GAAV,CAAcS,OAAd;EAL/F,CAAtC,CAAP;AAMH;;IACKY,mB;;;;;EACF,+BAAc;IAAA;;IAAA;;IACV,6BAAS3K,SAAT,EADU,CAEV;;IACA,OAAKiL,cAAL,GAAsB,KAAtB,CAHU,CAIV;;IACA,OAAKuC,WAAL,GAAmB,EAAnB;IALU;EAMb;;;;WACD,iBAAQrC,SAAR,EAAmB;MAAA;;MACf,IAAMpF,UAAU,oFAAiBoF,SAAjB,CAAhB;;MACA,IAAQsC,cAAR,GAA2B,IAA3B,CAAQA,cAAR;;MACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;QAAA,OAAW,CAAC,MAAI,CAACH,WAAL,CAAiBhP,aAAa,CAACmP,KAAD,CAA9B,CAAZ;MAAA,CAAtB,CAHe,CAIf;;;MACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,cAAc,CAACpC,MAA3C,EAAmDuC,KAAK,IAAI,CAA5D,EAA+D;QAC3DH,cAAc,CAACG,KAAD,CAAd,GAAwBH,cAAc,CAACG,KAAD,CAAd,CAAsBC,MAAtB,CAA6BH,aAA7B,CAAxB;MACH;;MACD,OAAO3H,UAAP;IACH;;;WACD,gCAAuB+H,SAAvB,EAAkCH,KAAlC,EAAyCpC,aAAzC,EAAwD;MACpD,IAAQkC,cAAR,GAAwC,IAAxC,CAAQA,cAAR;MAAA,IAAwBD,WAAxB,GAAwC,IAAxC,CAAwBA,WAAxB;MACA,IAAQO,aAAR,GAA0DD,SAA1D,CAAQC,aAAR;MAAA,IAAuBC,aAAvB,GAA0DF,SAA1D,CAAuBE,aAAvB;MAAA,IAAsCC,eAAtC,GAA0DH,SAA1D,CAAsCG,eAAtC,CAFoD,CAGpD;;MACA,IAAI,KAAKhD,cAAL,IAAuB8C,aAA3B,EAA0C;QACtC,IAAMG,eAAe,GAAG1P,aAAa,CAACuP,aAAD,CAArC;;QACA,IAAI,CAACP,WAAW,CAACU,eAAD,CAAhB,EAAmC;UAC/B,IAAI,KAAKnD,cAAT,EAAyB;YACrB;YACA,IAAMsB,WAAW,GAAGrI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB8J,aAAlB,CAAd,EAAgD;cAAE7L,IAAI,EAAEzD,cAAc,CAACsP,aAAa,CAAC7L,IAAf,EAAqByL,KAAK,CAACzL,IAA3B;YAAtB,CAAhD,CAApB,CAFqB,CAGrB;YACA;;YACA,IAAMiM,aAAa,GAAG3P,aAAa,CAAC6N,WAAD,CAAnC;YACAmB,WAAW,CAACW,aAAD,CAAX,GAA6B,IAA7B;YACAV,cAAc,CAACO,aAAD,CAAd,CAA8BC,eAA9B,IAAiD5B,WAAjD;YACAd,aAAa,CAAC9K,IAAd,CAAmB4L,WAAnB;YACA,KAAK+B,UAAL,CAAgBL,aAAhB,EAA+BJ,KAA/B,EAAsCpC,aAAtC;UACH,CAVD,MAWK;YACDiC,WAAW,CAACU,eAAD,CAAX,GAA+B,IAA/B;YACA3C,aAAa,CAAC9K,IAAd,CAAmBsN,aAAnB;UACH;QACJ;MACJ,CAvBmD,CAwBpD;;;MACA,gGAA6BD,SAA7B,EAAwCH,KAAxC,EAA+CpC,aAA/C;IACH;;;;EA5C6BhN,Y;;IA+C5B8P,Q;;;;;EACF,oBAAc;IAAA;;IAAA;;IACV,6BAASrO,SAAT;IACA,OAAKsO,UAAL,GAAkB,IAAI5P,MAAJ,EAAlB,CAFU,CAEsB;;IAChC,OAAK6P,WAAL,GAAmB,IAAI7P,MAAJ,EAAnB,CAHU,CAGuB;;IACjC,OAAK8P,QAAL,GAAgB,IAAI9P,MAAJ,EAAhB,CAJU,CAIoB;;IAC9B,OAAK+P,cAAL,GAAsB,IAAI/P,MAAJ,EAAtB,CALU,CAK0B;;IACpC,OAAKyI,SAAL,GAAiBvH,SAAS,EAA1B;IACA,OAAKwH,KAAL,GAAa;MACTsH,cAAc,EAAE,IADP;MAETlE,gBAAgB,EAAE,IAFT;MAGTD,UAAU,EAAE;IAHH,CAAb;;IAKA,OAAKoE,YAAL,GAAoB,UAACC,QAAD,EAAc;MAC9B,IAAIA,QAAJ,EAAc;QACV,OAAKC,YAAL,CAAkB,IAAlB,EADU,CACe;;MAC5B;IACJ,CAJD;;IAZU;EAiBb;;;;WACD,kBAAS;MAAA;;MACL,IAAMzO,KAAN,GAAgC,IAAhC,CAAMA,KAAN;MAAA,IAAagH,KAAb,GAAgC,IAAhC,CAAaA,KAAb;MAAA,IAAoB/G,OAApB,GAAgC,IAAhC,CAAoBA,OAApB;MACA,IAAMG,OAAN,GAAkBH,OAAlB,CAAMG,OAAN;MACA,IAAIiB,MAAM,GAAGrB,KAAK,CAACqK,KAAN,CAAYY,MAAzB;MACA,IAAIyD,kBAAkB,GAAGnM,mBAAmB,CAACvC,KAAK,CAAC2O,gBAAP,EAAyBtN,MAAzB,CAA5C;MACA,IAAIuN,gBAAgB,GAAGrM,mBAAmB,CAACvC,KAAK,CAAC6O,WAAP,EAAoBxN,MAApB,CAA1C;MACA,IAAIyN,kBAAkB,GAAGvM,mBAAmB,CAAC,KAAKwM,gBAAL,EAAD,EAA0B1N,MAA1B,CAA5C;MACA,IAAI2N,eAAe,GAAGzM,mBAAmB,CAAC,KAAK0M,aAAL,EAAD,EAAuB5N,MAAvB,CAAzC;;MACA,4BAA4E0I,qBAAqB,CAACxL,aAAa,CAACyB,KAAK,CAACkP,WAAP,EAAoB9O,OAAO,CAAC+O,UAA5B,CAAd,EAAuDnP,KAAK,CAACgK,YAA7D,EAA2EhK,KAAK,CAACiK,eAAjF,EAAkG7J,OAAO,CAACgP,gBAA1G,EAA4HpI,KAAK,CAACmD,UAAlI,EAA8InD,KAAK,CAACoD,gBAApJ,EAAsKpK,KAAK,CAACqK,KAA5K,CAAjG;MAAA,IAAMmB,mBAAN,yBAAMA,mBAAN;MAAA,IAA2BC,kBAA3B,yBAA2BA,kBAA3B;MAAA,IAA+CE,QAA/C,yBAA+CA,QAA/C;MAAA,IAAyDC,cAAzD,yBAAyDA,cAAzD;;MACA,IAAI5F,iBAAiB,GAAG;MACtBhG,KAAK,CAACiG,SAAN,IAAmBjG,KAAK,CAACiG,SAAN,CAAgBrD,iBAApC,IACI5C,KAAK,CAACkG,WAAN,IAAqBlG,KAAK,CAACkG,WAAN,CAAkBtD,iBAD3C,IAEG,EAHJ;MAIA,OAAQnD,aAAa,CAAC,IAAD,EAAO;QAAEuI,GAAG,EAAE,KAAKjB,SAAZ;QAAuBa,IAAI,EAAE;MAA7B,CAAP,EACjB5H,KAAK,CAACqP,WAAN,IAAqBrP,KAAK,CAACqP,WAAN,EADJ,EAEjBrP,KAAK,CAACqK,KAAN,CAAYlE,GAAZ,CAAgB,UAACmJ,IAAD,EAAOvD,GAAP,EAAe;QAC3B,IAAIwD,aAAa,GAAG,MAAI,CAACC,YAAL,CAAkBzD,GAAlB,EAAuB/L,KAAK,CAACkB,QAAN,GAAiBsK,mBAAmB,CAACO,GAAD,CAApC,GAA4CN,kBAAkB,CAACM,GAAD,CAArF,EAA4F/L,KAAK,CAACwF,UAAlG,EAA8GQ,iBAA9G,CAApB;;QACA,IAAIyJ,aAAa,GAAG,MAAI,CAACD,YAAL,CAAkBzD,GAAlB,EAAuB2D,qBAAqB,CAACV,eAAe,CAACjD,GAAD,CAAhB,EAAuBN,kBAAvB,CAA5C,EAAwFzL,KAAK,CAACwF,UAA9F,EAA0G,EAA1G,EAA8GkE,OAAO,CAAC1J,KAAK,CAACiG,SAAP,CAArH,EAAwIyD,OAAO,CAAC1J,KAAK,CAACkG,WAAP,CAA/I,EAAoK,KAApK,CAApB;;QACA,OAAQzG,aAAa,CAACqH,SAAD,EAAY;UAAEvG,GAAG,EAAE+O,IAAI,CAAC/O,GAAZ;UAAiBG,KAAK,EAAE,MAAI,CAACwN,UAAL,CAAgB1O,SAAhB,CAA0B8P,IAAI,CAAC/O,GAA/B,CAAxB;UAA6D0H,UAAU,EAAE,MAAI,CAACkG,WAAL,CAAiB3O,SAAjB,CAA2B8P,IAAI,CAAC/O,GAAhC;UAAqC;UAA9G;UAAwLgF,WAAW,EAAEvF,KAAK,CAACuF,WAA3M;UAAwN8B,IAAI,EAAEiI,IAAI,CAACjI,IAAnO;UAAyOE,aAAa,EAAEvH,KAAK,CAAC2P,cAA9P;UAA8QxH,cAAc,EAAEnI,KAAK,CAAC4P,eAAN,IAAyB7D,GAAG,KAAK,CAA/T;UAAkUzD,WAAW,EAAEtI,KAAK,CAAC4P;UAAgB;UAArW;UAAiapK,UAAU,EAAExF,KAAK,CAACwF,UAAnb;UAA+biB,cAAc,EAAEzG,KAAK,CAACyG,cAArd;UAAqeR,SAAS,EAAEjG,KAAK,CAACiG,SAAtf;UAAigBC,WAAW,EAAElG,KAAK,CAACkG,WAAphB;UAAiiB4B,gBAAgB,EAAEwH,IAAI,CAACxH,gBAAxjB;UAA0kBH,cAAc,EAAE2H,IAAI,CAAC3H,cAA/lB;UAA+mBD,eAAe,EAAE4H,IAAI,CAAC5H,eAAroB;UAAspB5B,aAAa,EAAEwJ,IAAI,CAACxJ,aAA1qB;UAAyrBJ,OAAO,EAAEiG,QAAQ,CAACI,GAAD,CAA1sB;UAAitBnD,aAAa,EAAEgD,cAAc,CAACG,GAAD,CAA9uB;UAAqvB3G,gBAAgB,EAAEoG,mBAAmB,CAACO,GAAD,CAA1xB;UAAiyBtD,cAAc,EAAE,MAAI,CAAC2F,QAAL,CAAc5O,SAAd,CAAwB8P,IAAI,CAAC/O,GAA7B,CAAjzB;UAAo1BmI,SAAS,EAAI;UAC93BjJ,aAAa,CAACC,QAAD,EAAW,IAAX,EACTD,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiB6P,aAAjB,CADJ,EAET9P,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiB+P,aAAjB,CAFJ,CADgB;UAGuB5G,SAAS,EAAI;UACjEpJ,aAAa,CAACC,QAAD,EAAW,IAAX,EACT,MAAI,CAACmQ,cAAL,CAAoBf,kBAAkB,CAAC/C,GAAD,CAAtC,EAA6C,WAA7C,CADS,EAET,MAAI,CAAC8D,cAAL,CAAoBnB,kBAAkB,CAAC3C,GAAD,CAAtC,EAA6C,cAA7C,CAFS,EAGT,MAAI,CAAC8D,cAAL,CAAoBjB,gBAAgB,CAAC7C,GAAD,CAApC,EAA2C,UAA3C,CAHS,CAJgB;UAOiC7D,SAAS,EAAElI,KAAK,CAAC8P;QAPlD,CAAZ,CAArB;MAQH,CAXD,CAFiB,CAArB;IAcH;;;WACD,6BAAoB;MAChB,KAAKrB,YAAL,CAAkB,IAAlB;MACA,KAAKxO,OAAL,CAAa8P,gBAAb,CAA8B,KAAKxB,YAAnC;IACH;;;WACD,4BAAmByB,SAAnB,EAA8BC,SAA9B,EAAyC;MACrC,IAAIC,YAAY,GAAG,KAAKlQ,KAAxB;MACA,KAAKyO,YAAL,CAAkB,CAACjQ,YAAY,CAACwR,SAAD,EAAYE,YAAZ,CAA/B;IACH;;;WACD,gCAAuB;MACnB,KAAKjQ,OAAL,CAAakQ,mBAAb,CAAiC,KAAK5B,YAAtC;IACH;;;WACD,4BAAmB;MACf,IAAMvO,KAAN,GAAgB,IAAhB,CAAMA,KAAN;;MACA,IAAIA,KAAK,CAACiG,SAAN,IAAmBjG,KAAK,CAACiG,SAAN,CAAgBhE,IAAhB,CAAqBgJ,MAA5C,EAAoD;QAAE;QAClD,OAAOjL,KAAK,CAACiG,SAAN,CAAgBhE,IAAvB;MACH;;MACD,IAAIjC,KAAK,CAACkG,WAAN,IAAqBlG,KAAK,CAACkG,WAAN,CAAkBjE,IAAlB,CAAuBgJ,MAAhD,EAAwD;QAAE;QACtD,OAAOjL,KAAK,CAACkG,WAAN,CAAkBjE,IAAzB;MACH;;MACD,OAAOjC,KAAK,CAACoQ,iBAAb;IACH;;;WACD,yBAAgB;MACZ,IAAMpQ,KAAN,GAAgB,IAAhB,CAAMA,KAAN;;MACA,IAAIA,KAAK,CAACkG,WAAN,IAAqBlG,KAAK,CAACkG,WAAN,CAAkBjE,IAAlB,CAAuBgJ,MAAhD,EAAwD;QAAE;QACtD,OAAOjL,KAAK,CAACkG,WAAN,CAAkBjE,IAAzB;MACH;;MACD,OAAO,EAAP;IACH;;;WACD,sBAAa8J,GAAb,EAAkBsE,aAAlB,EAAiC7K,UAAjC,EAA6CQ,iBAA7C,EAAgEO,UAAhE,EAA4E9B,UAA5E,EAAwFC,eAAxF,EAAyG;MACrG,IAAMzE,OAAN,GAAkB,IAAlB,CAAMA,OAAN;MACA,IAAMwG,cAAN,GAAyB,KAAKzG,KAA9B,CAAMyG,cAAN;MACA,IAAM6H,cAAN,GAAyB,KAAKtH,KAA9B,CAAMsH,cAAN;MACA,IAAIvK,sBAAsB,GAAG,KAAK/D,KAAL,CAAWqK,KAAX,CAAiBY,MAAjB,KAA4B,CAAzD,CAJqG,CAIzC;;MAC5D,IAAIqF,QAAQ,GAAG/J,UAAU,IAAI9B,UAAd,IAA4BC,eAA3C;MACA,IAAI6L,KAAK,GAAG,EAAZ;;MACA,IAAIjC,cAAJ,EAAoB;QAAA,4CACM+B,aADN;QAAA;;QAAA;UAChB,uDAAqC;YAAA,IAA5B3J,SAA4B;YACjC,IAAMrE,GAAN,GAAcqE,SAAd,CAAMrE,GAAN;YACA,IAAM+D,UAAN,GAAqB/D,GAAG,CAACgB,UAAJ,CAAegD,QAApC,CAAMD,UAAN;YACA,IAAIO,SAAS,GAAGD,SAAS,CAACC,SAAV,IAAuB,CAACX,iBAAiB,CAACI,UAAD,CAAzD;YACA,IAAIyF,UAAU,GAAGnF,SAAS,CAACmF,UAA3B;YACA,IAAI2E,IAAI,GAAG,EAAX;YACA,IAAIC,KAAK,GAAG,EAAZ;;YACA,IAAI5E,UAAJ,EAAgB;cACZ,IAAI5L,OAAO,CAACyQ,KAAZ,EAAmB;gBACfD,KAAK,GAAG,CAAR;gBACAD,IAAI,GAAGlC,cAAc,CAACqC,KAAf,CAAqBtO,GAAG,CAACmB,OAAzB,IAAoC8K,cAAc,CAACqC,KAAf,CAAqBtO,GAAG,CAACI,QAAzB,CAA3C;cACH,CAHD,MAIK;gBACD+N,IAAI,GAAG,CAAP;gBACAC,KAAK,GAAGnC,cAAc,CAACsC,MAAf,CAAsBvO,GAAG,CAACI,QAA1B,IAAsC6L,cAAc,CAACsC,MAAf,CAAsBvO,GAAG,CAACmB,OAA1B,CAA9C;cACH;YACJ;YACD;AAChB;AACA;AACA;;;YACgB+M,KAAK,CAAClQ,IAAN,CAAWZ,aAAa,CAAC,KAAD,EAAQ;cAAEmF,SAAS,EAAE,8BAA8BiH,UAAU,GAAG,+BAAH,GAAqC,EAA7E,CAAb;cAA+FtL,GAAG,EAAEsJ,cAAc,CAACxH,GAAD,CAAlH;cAAyH2F,GAAG,EAAEsI,QAAQ,GAAG,IAAH,GAAU,KAAKjC,cAAL,CAAoB7O,SAApB,CAA8BsK,cAAc,CAACzH,GAAD,CAA5C,CAAhJ;cAAoMwC,KAAK,EAAE;gBACnOyB,UAAU,EAAEK,SAAS,GAAG,EAAH,GAAQ,QADsM;gBAEnOgC,SAAS,EAAEkD,UAAU,GAAG,EAAH,GAAQnF,SAAS,CAACiC,SAF4L;gBAGnOkI,GAAG,EAAEhF,UAAU,GAAGnF,SAAS,CAACoF,WAAb,GAA2B,EAHyL;gBAInO0E,IAAI,EAAJA,IAJmO;gBAKnOC,KAAK,EAALA;cALmO;YAA3M,CAAR,EAMftN,kBAAkB,CAACd,GAAD,CAAlB,GAA2B5C,aAAa,CAACwE,kBAAD,EAAqBL,MAAM,CAACC,MAAP,CAAc;cAAExB,GAAG,EAAEA,GAAP;cAAYkE,UAAU,EAAEA,UAAxB;cAAoCC,UAAU,EAAEJ,UAAU,KAAKK,cAA/D;cAA+E1C,sBAAsB,EAAEA;YAAvG,CAAd,EAA+ItG,UAAU,CAAC4E,GAAD,EAAMmD,UAAN,CAAzJ,CAArB,CAAxC,GAA8O/F,aAAa,CAACkE,eAAD,EAAkBC,MAAM,CAACC,MAAP,CAAc;cAAExB,GAAG,EAAEA,GAAP;cAAYkE,UAAU,EAAEA,UAAxB;cAAoC9B,UAAU,EAAEA,UAAhD;cAA4DC,eAAe,EAAEA,eAA7E;cAA8F8B,UAAU,EAAEJ,UAAU,KAAKK,cAAzH;cAAyI1C,sBAAsB,EAAEA;YAAjK,CAAd,EAAyMtG,UAAU,CAAC4E,GAAD,EAAMmD,UAAN,CAAnN,CAAlB,CAN5O,CAAxB;UAOH;QA7Be;UAAA;QAAA;UAAA;QAAA;MA8BnB;;MACD,OAAO+K,KAAP;IACH;;;WACD,wBAAetO,IAAf,EAAqB6O,QAArB,EAA+B;MAC3B,IAAMJ,KAAN,GAAgB,KAAKzQ,OAArB,CAAMyQ,KAAN;MACA,IAAMlL,UAAN,GAAqB,KAAKxF,KAA1B,CAAMwF,UAAN;MACA,IAAM8I,cAAN,GAAyB,KAAKtH,KAA9B,CAAMsH,cAAN;MACA,IAAIiC,KAAK,GAAG,EAAZ;;MACA,IAAIjC,cAAJ,EAAoB;QAAA,6CACArM,IADA;QAAA;;QAAA;UAChB,0DAAsB;YAAA,IAAbI,GAAa;YAClB,IAAI0O,YAAY,GAAGL,KAAK,GAAG;cACvBD,KAAK,EAAE,CADgB;cAEvBD,IAAI,EAAElC,cAAc,CAACqC,KAAf,CAAqBtO,GAAG,CAACmB,OAAzB,IAAoC8K,cAAc,CAACqC,KAAf,CAAqBtO,GAAG,CAACI,QAAzB;YAFnB,CAAH,GAGpB;cACA+N,IAAI,EAAE,CADN;cAEAC,KAAK,EAAEnC,cAAc,CAACsC,MAAf,CAAsBvO,GAAG,CAACI,QAA1B,IAAsC6L,cAAc,CAACsC,MAAf,CAAsBvO,GAAG,CAACmB,OAA1B;YAF7C,CAHJ;YAOA+M,KAAK,CAAClQ,IAAN,CAAWZ,aAAa,CAAC,KAAD,EAAQ;cAAEc,GAAG,EAAE9B,kBAAkB,CAAC4D,GAAG,CAACgB,UAAL,CAAzB;cAA2CuB,SAAS,EAAE,uBAAtD;cAA+EC,KAAK,EAAEkM;YAAtF,CAAR,EAA8GD,QAAQ,KAAK,UAAb,GAClIrR,aAAa,CAACf,OAAD,EAAUkF,MAAM,CAACC,MAAP,CAAc;cAAExB,GAAG,EAAEA;YAAP,CAAd,EAA4B5E,UAAU,CAAC4E,GAAD,EAAMmD,UAAN,CAAtC,CAAV,CADqH,GAElI7G,UAAU,CAACmS,QAAD,CAFU,CAAxB;UAGH;QAZe;UAAA;QAAA;UAAA;QAAA;MAanB;;MACD,OAAOrR,aAAa,MAAb,UAAcC,QAAd,EAAwB,EAAxB,SAA+B6Q,KAA/B,EAAP;IACH;;;WACD,sBAAaS,sBAAb,EAAqC;MACjC,IAAMhR,KAAN,GAAoC,IAApC,CAAMA,KAAN;MAAA,IAAagH,KAAb,GAAoC,IAApC,CAAaA,KAAb;MAAA,IAAoBmH,WAApB,GAAoC,IAApC,CAAoBA,WAApB;;MACA,IAAI,CAACnO,KAAK,CAACkB,QAAP,IACAlB,KAAK,CAACiR,WAAN,KAAsB,IAD1B,CAC+B;MAD/B,EAEE;QACE,IAAID,sBAAJ,EAA4B;UACxB,IAAIE,QAAQ,GAAGlR,KAAK,CAACqK,KAAN,CAAYlE,GAAZ,CAAgB,UAACmJ,IAAD;YAAA,OAAUnB,WAAW,CAACgD,UAAZ,CAAuB7B,IAAI,CAAC/O,GAA5B,CAAV;UAAA,CAAhB,CAAf;;UACA,IAAI2Q,QAAQ,CAACjG,MAAb,EAAqB;YACjB,IAAImG,QAAQ,GAAG,KAAKrK,SAAL,CAAesK,OAA9B;YACA,IAAIC,gBAAgB,GAAG,IAAI1S,aAAJ,CAAkBwS,QAAlB,EAA4BF,QAA5B,EAAsC,IAAtC,EAA4C;YACnE,KADuB,CAAvB;;YAEA,IAAI,CAAClK,KAAK,CAACsH,cAAP,IAAyB,CAACtH,KAAK,CAACsH,cAAN,CAAqBiD,SAArB,CAA+BD,gBAA/B,CAA9B,EAAgF;cAC5E,KAAKE,QAAL,CAAc;gBACVlD,cAAc,EAAE,IAAI1P,aAAJ,CAAkBwS,QAAlB,EAA4BF,QAA5B,EAAsC,IAAtC,EAA4C;gBAC5D,KADgB;cADN,CAAd;YAIH;UACJ;QACJ;;QACD,IAAMO,aAAa,GAAG,KAAKzK,KAAL,CAAWmD,UAAjC;QACA,IAAMuH,aAAa,GAAG,KAAKC,eAAL,EAAtB;QACA,IAAMC,oBAAoB,GAAG5R,KAAK,CAACgK,YAAN,KAAuB,IAAvB,IAA+BhK,KAAK,CAACiK,eAAN,KAA0B,IAAtF;QACA,KAAK4H,YAAL,CAAkB;UACd;UACA;UACA;UACA1H,UAAU,EAAEvG,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB4N,aAAlB,CAAd,EAAgDC,aAAhD,CAJE;UAKdtH,gBAAgB,EAAEwH,oBAAoB,GAAG,KAAKE,uBAAL,EAAH,GAAoC;QAL5D,CAAlB;MAOH;IACJ;;;WACD,2BAAkB;MACd,IAAIC,QAAQ,GAAG,KAAK1D,cAAL,CAAoB8C,UAAnC;MACA,IAAIhH,UAAU,GAAG,EAAjB,CAFc,CAGd;;MACA,KAAK,IAAIM,MAAT,IAAmBsH,QAAnB,EAA6B;QACzB,IAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACtH,MAAD,CAAR,CAAiB0H,qBAAjB,GAAyCH,MAApD,CAAb;QACA7H,UAAU,CAACM,MAAD,CAAV,GAAqBwH,IAAI,CAACG,GAAL,CAASjI,UAAU,CAACM,MAAD,CAAV,IAAsB,CAA/B,EAAkCuH,MAAlC,CAArB;MACH;;MACD,OAAO7H,UAAP;IACH;;;WACD,mCAA0B;MACtB,IAAIkI,QAAQ,GAAG,KAAKrS,KAAL,CAAWqK,KAAX,CAAiB,CAAjB,EAAoB9J,GAAnC;MACA,IAAI+R,MAAM,GAAG,KAAKpE,UAAL,CAAgBiD,UAAhB,CAA2BkB,QAA3B,CAAb;MACA,IAAIE,aAAa,GAAG,KAAKnE,QAAL,CAAc+C,UAAd,CAAyBkB,QAAzB,CAApB;MACA,OAAOC,MAAM,CAACH,qBAAP,GAA+BK,MAA/B,GAAwCD,aAAa,CAACJ,qBAAd,GAAsCtB,GAArF;IACH;;;WACD,sBAAa;MACT,IAAI4B,KAAK,GAAG,KAAKvE,UAAL,CAAgBiD,UAA5B;MACA,OAAO,KAAKnR,KAAL,CAAWqK,KAAX,CAAiBlE,GAAjB,CAAqB,UAACmJ,IAAD;QAAA,OAAUmD,KAAK,CAACnD,IAAI,CAAC/O,GAAN,CAAf;MAAA,CAArB,CAAP;IACH;;;;EA1LkB5D,a;;AA4LvBsR,QAAQ,CAACyE,gBAAT,CAA0B;EACtBvI,UAAU,EAAE3L;AADU,CAA1B;;AAGA,SAASkR,qBAAT,CAA+BiD,UAA/B,EAA2CC,aAA3C,EAA0D;EACtD,IAAI,CAACD,UAAU,CAAC1H,MAAhB,EAAwB;IACpB,OAAO,EAAP;EACH;;EACD,IAAI4H,gBAAgB,GAAGC,oBAAoB,CAACF,aAAD,CAA3C,CAJsD,CAIM;;EAC5D,OAAOD,UAAU,CAACxM,GAAX,CAAe,UAAC9D,GAAD;IAAA,OAAU;MAC5BA,GAAG,EAAHA,GAD4B;MAE5BsE,SAAS,EAAE,IAFiB;MAG5BkF,UAAU,EAAE,IAHgB;MAI5BC,WAAW,EAAE+G,gBAAgB,CAACxQ,GAAG,CAACgB,UAAJ,CAAegD,QAAf,CAAwBD,UAAzB,CAJD;MAK5BuC,SAAS,EAAE;IALiB,CAAV;EAAA,CAAf,CAAP;AAOH;;AACD,SAASmK,oBAAT,CAA8BF,aAA9B,EAA6C;EACzC,IAAIC,gBAAgB,GAAG,EAAvB;;EADyC,6CAElBD,aAFkB;EAAA;;EAAA;IAEzC,0DAAsC;MAAA,IAA7BG,UAA6B;;MAAA,6CACZA,UADY;MAAA;;MAAA;QAClC,0DAAkC;UAAA,IAAzBrM,SAAyB;UAC9BmM,gBAAgB,CAACnM,SAAS,CAACrE,GAAV,CAAcgB,UAAd,CAAyBgD,QAAzB,CAAkCD,UAAnC,CAAhB,GAAiEM,SAAS,CAACoF,WAA3E;QACH;MAHiC;QAAA;MAAA;QAAA;MAAA;IAIrC;EANwC;IAAA;EAAA;IAAA;EAAA;;EAOzC,OAAO+G,gBAAP;AACH;;IAEKG,S;;;;;EACF,qBAAc;IAAA;;IAAA;;IACV,6BAASpT,SAAT;IACA,OAAKqT,qBAAL,GAA6B1V,OAAO,CAACyE,cAAD,CAApC;IACA,OAAKkR,gBAAL,GAAwB3V,OAAO,CAACyE,cAAD,CAA/B;IACA,OAAKmR,gBAAL,GAAwB5V,OAAO,CAACyE,cAAD,CAA/B;IACA,OAAKoR,sBAAL,GAA8B7V,OAAO,CAACyE,cAAD,CAArC;IACA,OAAKqR,cAAL,GAAsB9V,OAAO,CAACmF,qBAAD,CAA7B;IACA,OAAK4Q,gBAAL,GAAwB/V,OAAO,CAACmF,qBAAD,CAA/B;IACA,OAAK6Q,OAAL,GAAe,IAAIjV,MAAJ,EAAf;IARU;EASb;;;;WACD,kBAAS;MAAA;;MACL,IAAM0B,KAAN,GAAyB,IAAzB,CAAMA,KAAN;MAAA,IAAaC,OAAb,GAAyB,IAAzB,CAAaA,OAAb;MACA,IAAIiC,MAAM,GAAGlC,KAAK,CAACqK,KAAN,CAAYY,MAAzB;MACA,IAAIuI,qBAAqB,GAAG,KAAKP,qBAAL,CAA2BjT,KAAK,CAAC2O,gBAAjC,EAAmDzM,MAAnD,CAA5B;MACA,IAAIuR,gBAAgB,GAAG,KAAKP,gBAAL,CAAsBlT,KAAK,CAAC6O,WAA5B,EAAyC3M,MAAzC,CAAvB;MACA,IAAIwR,gBAAgB,GAAG,KAAKP,gBAAL,CAAsBnT,KAAK,CAACkP,WAA5B,EAAyChN,MAAzC,CAAvB;MACA,IAAIyR,sBAAsB,GAAG,KAAKP,sBAAL,CAA4BpT,KAAK,CAACoQ,iBAAlC,EAAqDlO,MAArD,CAA7B;MACA,IAAI0R,cAAc,GAAG,KAAKP,cAAL,CAAoBrT,KAAK,CAACiG,SAA1B,EAAqC/D,MAArC,CAArB;MACA,IAAI2R,gBAAgB,GAAG,KAAKP,gBAAL,CAAsBtT,KAAK,CAACkG,WAA5B,EAAyChE,MAAzC,CAAvB,CARK,CASL;MACA;;MACA,IAAI4N,aAAa,GAAI5N,MAAM,IAAI,CAAV,IAAelC,KAAK,CAACiR,WAAtB,GAChBjR,KAAK,CAACiR,WAAN,GAAoBhR,OAAO,CAACG,OAAR,CAAgB0T,WAApC,GAAkD,CADlC,GAEhB,IAFJ;MAGA,OAAQrU,aAAa,CAACZ,QAAD,EAAW;QAAEkV,IAAI,EAAE;MAAR,CAAX,EAA4B,UAACC,OAAD,EAAUxO,UAAV;QAAA,OAA0B/F,aAAa,CAACC,QAAD,EAAW,IAAX,EAAiBM,KAAK,CAACqK,KAAN,CAAYlE,GAAZ,CAAgB,UAACkE,KAAD,EAAQ/H,GAAR;UAAA,OAAiB7C,aAAa,CAACwO,QAAD,EAAW;YAAEjG,GAAG,EAAE,MAAI,CAACuL,OAAL,CAAa/T,SAAb,CAAuB8C,GAAvB,CAAP;YAAoC/B,GAAG,EAAE8J,KAAK,CAACY,MAAN,GACjMZ,KAAK,CAAC,CAAD,CAAL,CAAShD,IAAT,CAAc4M,WAAd;YAA4B;YADqK,EAEjM3R,GAFwJ,CAEpJ;YAFoJ;YAG5JqN,cAAc,EAAEzN,MAAM,GAAG,CAHmI;YAGhI0N,eAAe,EAAE5P,KAAK,CAAC4P,eAHyG;YAGxFpK,UAAU,EAAEA,UAH4E;YAGhED,WAAW,EAAEvF,KAAK,CAACuF,WAH6C;YAGhC8E,KAAK,EAAEA,KAHyB;YAGlBgF,WAAW,EAAErP,KAAK,CAACkU,cAHD;YAGiBvF,gBAAgB,EAAE6E,qBAAqB,CAAClR,GAAD,CAHxD;YAG+DmE,cAAc,EAAEzG,KAAK,CAACyG,cAHrF;YAGqGoI,WAAW,EAAE4E,gBAAgB,CAACnR,GAAD,CAAhB,CAAsBmL,MAAtB,CAA6B0G,WAA7B;YAA0C;YAH5J;YAGwKjF,WAAW,EAAEwE,gBAAgB,CAACpR,GAAD,CAHrM;YAG4M8N,iBAAiB,EAAEuD,sBAAsB,CAACrR,GAAD,CAHrP;YAG4P2D,SAAS,EAAE2N,cAAc,CAACtR,GAAD,CAHrR;YAG4R4D,WAAW,EAAE2N,gBAAgB,CAACvR,GAAD,CAHzT;YAGgU0H,YAAY,EAAEhK,KAAK,CAACgK,YAHpV;YAGkWC,eAAe,EAAEjK,KAAK,CAACiK,eAHzX;YAG0YgH,WAAW,EAAEjR,KAAK,CAACiR,WAH7Z;YAG0amD,YAAY,EAAEpU,KAAK,CAACoU,YAH9b;YAG4ctE,aAAa,EAAEA,aAH3d;YAG0e5O,QAAQ,EAAElB,KAAK,CAACkB;UAH1f,CAAX,CAA9B;QAAA,CAAhB,CAAjB,CAAvC;MAAA,CAA5B,CAArB;IAIH;;;WACD,6BAAoB;MAChB,KAAKmT,4BAAL;IACH;;;WACD,8BAAqB;MACjB;MACA,KAAKA,4BAAL;IACH;;;WACD,wCAA+B;MAC3B,IAAI,CAAC,KAAKC,MAAV,EAAkB;QACd;QACA;QACA,IAAMC,WAAW,GAAG,KAAKhB,OAAL,CAAapC,UAAb,CAAwB,CAAxB,EAA2BqD,UAA3B,GAAwC,CAAxC,CAApB;QACA,IAAMF,MAAM,GAAGC,WAAW,GAAGA,WAAW,CAACE,OAAZ,CAAoB,kBAApB,CAAH,GAA6C,IAAvE;;QACA,IAAIH,MAAJ,EAAY;UACR,KAAKA,MAAL,GAAcA,MAAd;UACA,KAAKrU,OAAL,CAAaoU,4BAAb,CAA0C,IAA1C,EAAgD;YAC5ClN,EAAE,EAAEmN,MADwC;YAE5CI,iBAAiB,EAAE,KAAK1U,KAAL,CAAW0U;UAFc,CAAhD;QAIH;MACJ;IACJ;;;WACD,gCAAuB;MACnB,IAAI,KAAKJ,MAAT,EAAiB;QACb,KAAKrU,OAAL,CAAa0U,8BAAb,CAA4C,IAA5C;QACA,KAAKL,MAAL,GAAc,IAAd;MACH;IACJ,C,CACD;IACA;;;;WACA,uBAAc;MACV,KAAKM,YAAL,GAAoB,IAAIhW,aAAJ,CAAkB,KAAK0V,MAAvB,EAA+B,KAAKf,OAAL,CAAasB,OAAb,GAAuB1O,GAAvB,CAA2B,UAAC2O,MAAD;QAAA,OAAYA,MAAM,CAACN,UAAP,GAAoB,CAApB,CAAZ;MAAA,CAA3B,CAA/B,EAA+F;MACnH,KADoB,EACb,IADa,CAApB;MAEA,KAAKO,YAAL,GAAoB,IAAInW,aAAJ,CAAkB,KAAK0V,MAAvB,EAA+B,KAAKf,OAAL,CAAapC,UAAb,CAAwB,CAAxB,EAA2BqD,UAA3B,EAA/B,EAAwE;MAC5F,IADoB,EACd;MACN,KAFoB,CAApB;IAGH;;;WACD,kBAASQ,YAAT,EAAuBC,WAAvB,EAAoC;MAChC,IAAMF,YAAN,GAAqC,IAArC,CAAMA,YAAN;MAAA,IAAoBH,YAApB,GAAqC,IAArC,CAAoBA,YAApB;MACA,IAAI7I,GAAG,GAAGgJ,YAAY,CAACG,WAAb,CAAyBF,YAAzB,CAAV;MACA,IAAI1S,GAAG,GAAGsS,YAAY,CAACO,UAAb,CAAwBF,WAAxB,CAAV;;MACA,IAAI3S,GAAG,IAAI,IAAP,IAAeyJ,GAAG,IAAI,IAA1B,EAAgC;QAC5B,IAAIuD,IAAI,GAAG,KAAKtP,KAAL,CAAWqK,KAAX,CAAiB/H,GAAjB,EAAsByJ,GAAtB,CAAX;QACA,OAAO;UACHxG,WAAW,EAAE,KAAKvF,KAAL,CAAWuF,WADrB;UAEH6P,QAAQ,EAAExR,MAAM,CAACC,MAAP,CAAc;YAAEoJ,KAAK,EAAE,KAAKoI,YAAL,CAAkB/S,GAAlB,EAAuByJ,GAAvB,CAAT;YAAsCxI,MAAM,EAAE;UAA9C,CAAd,EAAoE+L,IAAI,CAACxJ,aAAzE,CAFP;UAGHwP,KAAK,EAAE,KAAKC,SAAL,CAAejT,GAAf,EAAoByJ,GAApB,CAHJ;UAIHU,IAAI,EAAE;YACF+D,IAAI,EAAEuE,YAAY,CAACpE,KAAb,CAAmB5E,GAAnB,CADJ;YAEF0E,KAAK,EAAEsE,YAAY,CAACnE,MAAb,CAAoB7E,GAApB,CAFL;YAGF8E,GAAG,EAAE+D,YAAY,CAACY,IAAb,CAAkBlT,GAAlB,CAHH;YAIFkQ,MAAM,EAAEoC,YAAY,CAACa,OAAb,CAAqBnT,GAArB;UAJN,CAJH;UAUHoT,KAAK,EAAE;QAVJ,CAAP;MAYH;;MACD,OAAO,IAAP;IACH;;;WACD,mBAAUpT,GAAV,EAAeyJ,GAAf,EAAoB;MAChB,OAAO,KAAKwH,OAAL,CAAapC,UAAb,CAAwB7O,GAAxB,EAA6BkS,UAA7B,GAA0CzI,GAA1C,CAAP,CADgB,CACuC;IAC1D;;;WACD,sBAAazJ,GAAb,EAAkByJ,GAAlB,EAAuB;MACnB,IAAI/C,KAAK,GAAG,KAAKhJ,KAAL,CAAWqK,KAAX,CAAiB/H,GAAjB,EAAsByJ,GAAtB,EAA2B1E,IAAvC;MACA,IAAI6B,GAAG,GAAGhL,OAAO,CAAC8K,KAAD,EAAQ,CAAR,CAAjB;MACA,OAAO;QAAEA,KAAK,EAALA,KAAF;QAASE,GAAG,EAAHA;MAAT,CAAP;IACH;;;;EA/FmBvM,a;;AAiGxB,SAASwX,WAAT,CAAqB9R,GAArB,EAA0B;EACtB,OAAOA,GAAG,CAACgB,UAAJ,CAAeC,GAAf,CAAmBC,MAA1B;AACH;;IAEKoS,K;;;;;EACF,iBAAc;IAAA;;IAAA;;IACV,8BAAS/V,SAAT;IACA,QAAKc,KAAL,GAAalB,SAAS,EAAtB;IACA,QAAKoW,gBAAL,GAAwB,KAAxB;IAHU;EAIb;;;;WACD,kBAAS;MACL,IAAM5V,KAAN,GAAgB,IAAhB,CAAMA,KAAN;MACA,IAAMiK,eAAN,GAAoDjK,KAApD,CAAMiK,eAAN;MAAA,IAAuBD,YAAvB,GAAoDhK,KAApD,CAAuBgK,YAAvB;MAAA,IAAqC6L,UAArC,GAAoD7V,KAApD,CAAqC6V,UAArC;MACA,IAAIC,gBAAgB,GAAG9L,YAAY,KAAK,IAAjB,IAAyBC,eAAe,KAAK,IAApE,CAHK,CAIL;MACA;;MACA,IAAI6L,gBAAgB,IAAI,CAACD,UAAzB,EAAqC;QACjCC,gBAAgB,GAAG,KAAnB;QACA7L,eAAe,GAAG,IAAlB;QACAD,YAAY,GAAG,IAAf;MACH;;MACD,IAAI+L,UAAU,GAAG,CACb,iBADa,EAEbD,gBAAgB,GAAG,0BAAH,GAAgC,4BAFnC,EAGbD,UAAU,GAAG,EAAH,GAAQ,yBAHL,CAGgC;MAHhC,CAAjB;MAKA,OAAQpW,aAAa,CAAC,KAAD,EAAQ;QAAEuI,GAAG,EAAE,KAAKtH,KAAZ;QAAmBkE,SAAS,EAAEmR,UAAU,CAACC,IAAX,CAAgB,GAAhB,CAA9B;QAAoDnR,KAAK,EAAE;UAChF;UACA;UACAoR,KAAK,EAAEjW,KAAK,CAACiR,WAHmE;UAIhFlP,QAAQ,EAAE/B,KAAK,CAACkW;QAJgE;MAA3D,CAAR,EAMjBzW,aAAa,CAAC,OAAD,EAAU;QAAEmI,IAAI,EAAE,cAAR;QAAwBhD,SAAS,EAAE,0BAAnC;QAA+DC,KAAK,EAAE;UACrFoR,KAAK,EAAEjW,KAAK,CAACiR,WADwE;UAErFlP,QAAQ,EAAE/B,KAAK,CAACkW,aAFqE;UAGrFlE,MAAM,EAAE6D,UAAU,GAAG7V,KAAK,CAACoU,YAAT,GAAwB;QAH2C;MAAtE,CAAV,EAKTpU,KAAK,CAACmW,YALG,EAMT1W,aAAa,CAAC,OAAD,EAAU;QAAEmI,IAAI,EAAE;MAAR,CAAV,EACTnI,aAAa,CAACuT,SAAD,EAAY;QAAEzN,WAAW,EAAEvF,KAAK,CAACuF,WAArB;QAAkC8E,KAAK,EAAErK,KAAK,CAACqK,KAA/C;QAAsD6J,cAAc,EAAElU,KAAK,CAACkU,cAA5E;QAA4FtE,eAAe,EAAE5P,KAAK,CAAC4P,eAAnH;QAAoIqB,WAAW,EAAEjR,KAAK,CAACiR,WAAvJ;QAAoKmD,YAAY,EAAEpU,KAAK,CAACoU,YAAxL;QAAsMzF,gBAAgB,EAAE3O,KAAK,CAAC2O,gBAA9N;QAAgPE,WAAW,EAAE7O,KAAK,CAAC6O,WAAnQ;QAAgRK,WAAW,EAAElP,KAAK,CAACkP,WAAnS;QAAgTkB,iBAAiB,EAAEpQ,KAAK,CAACoQ,iBAAzU;QAA4V3J,cAAc,EAAEzG,KAAK,CAACyG,cAAlX;QAAkYR,SAAS,EAAEjG,KAAK,CAACiG,SAAnZ;QAA8ZC,WAAW,EAAElG,KAAK,CAACkG,WAAjb;QAA8b8D,YAAY,EAAEA,YAA5c;QAA0dC,eAAe,EAAEA,eAA3e;QAA4f/I,QAAQ,EAAElB,KAAK,CAACkB,QAA5gB;QAAshBwT,iBAAiB,EAAE1U,KAAK,CAAC0U;MAA/iB,CAAZ,CADJ,CANJ,CANI,CAArB;IAcH;;;WACD,6BAAoB;MAChB,KAAK0B,kBAAL;IACH;;;WACD,4BAAmBpG,SAAnB,EAA8B;MAC1B,IAAIA,SAAS,CAACzK,WAAV,KAA0B,KAAKvF,KAAL,CAAWuF,WAAzC,EAAsD;QAClD,KAAK6Q,kBAAL;MACH,CAFD,MAGK;QACD,KAAKC,gBAAL;MACH;IACJ;;;WACD,8BAAqB;MACjB,KAAKT,gBAAL,GAAwB,IAAxB;MACA,KAAKS,gBAAL;IACH;;;WACD,4BAAmB;MACf,IAAI,KAAKT,gBAAL,IACA,KAAK5V,KAAL,CAAWiR,WADf,CAC2B;MAD3B,EAEE;QACE,IAAMqF,SAAS,GAAGC,kBAAkB,CAAC,KAAK7V,KAAL,CAAW2Q,OAAZ,EAAqB,KAAKrR,KAAL,CAAWuF,WAAhC,CAApC;;QACA,IAAI+Q,SAAJ,EAAe;UACX,IAAMlF,QAAQ,GAAGkF,SAAS,CAAC7B,OAAV,CAAkB,kBAAlB,CAAjB;UACA,IAAM+B,QAAQ,GAAGpF,QAAQ,CAACqD,OAAT,CAAiB,cAAjB,CAAjB;UACA,IAAMgC,SAAS,GAAGH,SAAS,CAACnE,qBAAV,GAAkCtB,GAAlC,GACdO,QAAQ,CAACe,qBAAT,GAAiCtB,GADrC;UAEA2F,QAAQ,CAACC,SAAT,GAAqBA,SAAS,GAAIA,SAAS,GAAG,CAAhB,GAAqB,CAAnD,CALW,CAK2C;QACzD;;QACD,KAAKb,gBAAL,GAAwB,KAAxB;MACH;IACJ;;;;EAlEejZ,a;;AAoEpB,SAAS4Z,kBAAT,CAA4BG,WAA5B,EAAyCnR,WAAzC,EAAsD;EAClD,IAAI4B,EAAJ;;EACA,IAAI5B,WAAW,CAACoR,gBAAZ,CAA6BC,KAA7B,CAAmC,YAAnC,CAAJ,EAAsD;IAClDzP,EAAE,GAAGuP,WAAW,CAACG,aAAZ,wBAAyC/X,iBAAiB,CAACyG,WAAW,CAACuR,WAAb,CAA1D,YAAL,CADkD,CAElD;EACH;;EACD,IAAI,CAAC3P,EAAL,EAAS;IACLA,EAAE,GAAGuP,WAAW,CAACG,aAAZ,wBAAyC9X,eAAe,CAACwG,WAAW,CAACuR,WAAb,CAAxD,SAAL,CADK,CAEL;EACH;;EACD,OAAO3P,EAAP;AACH;;IAEK4P,c;;;;;EACF,0BAAc;IAAA;;IAAA;;IACV,+BAASnX,SAAT;IACA,QAAKoX,kBAAL,GAA0B,IAA1B;IAFU;EAGb;;;;WACD,oBAAWC,SAAX,EAAsBC,aAAtB,EAAqC;MACjC,OAAOA,aAAa,CAACC,UAAd,CAAyBF,SAAzB,CAAP;IACH;;;;EAPwBjY,M;;IAUvBoY,Q;;;;;EACF,oBAAc;IAAA;;IAAA;;IACV,+BAASxX,SAAT;IACA,QAAKyX,MAAL,GAAc,IAAIN,cAAJ,EAAd;IACA,QAAKO,QAAL,GAAgB9X,SAAS,EAAzB;IAHU;EAIb;;;;WACD,kBAAS;MACL,IAAMQ,KAAN,GAAyB,IAAzB,CAAMA,KAAN;MAAA,IAAaC,OAAb,GAAyB,IAAzB,CAAaA,OAAb;MACA,OAAQR,aAAa,CAACkW,KAAD,EAAQ/R,MAAM,CAACC,MAAP,CAAc;QAAEmE,GAAG,EAAE,KAAKsP;MAAZ,CAAd,EAAsC,KAAKD,MAAL,CAAYE,UAAZ,CAAuBvX,KAAvB,EAA8BA,KAAK,CAACuF,WAApC,EAAiDvF,KAAK,CAACwX,gBAAvD,EAAyEvX,OAAzE,EAAkFD,KAAK,CAACkX,aAAxF,CAAtC,EAA8I;QAAE3R,WAAW,EAAEvF,KAAK,CAACuF,WAArB;QAAkC8E,KAAK,EAAErK,KAAK,CAACkX,aAAN,CAAoB7M,KAA7D;QAAoE8L,YAAY,EAAEnW,KAAK,CAACmW,YAAxF;QAAsGD,aAAa,EAAElW,KAAK,CAACkW,aAA3H;QAA0IhC,cAAc,EAAElU,KAAK,CAACkU,cAAhK;QAAgLlK,YAAY,EAAEhK,KAAK,CAACgK,YAApM;QAAkNC,eAAe,EAAEjK,KAAK,CAACiK,eAAzO;QAA0P2F,eAAe,EAAE5P,KAAK,CAAC4P,eAAjR;QAAkSiG,UAAU,EAAE7V,KAAK,CAAC6V,UAApT;QAAgU4B,gBAAgB,EAAEzX,KAAK,CAACyX,gBAAxV;QAA0WxG,WAAW,EAAEjR,KAAK,CAACiR,WAA7X;QAA0YmD,YAAY,EAAEpU,KAAK,CAACoU,YAA9Z;QAA4alT,QAAQ,EAAElB,KAAK,CAACkB;MAA5b,CAA9I,CAAR,CAArB;IACH;;;;EATkBvE,a;;IAYjB+a,Y;;;;;EACF,wBAAc;IAAA;;IAAA;;IACV,+BAAS9X,SAAT;IACA,QAAK+X,kBAAL,GAA0Bpa,OAAO,CAACoa,kBAAD,CAAjC;IACA,QAAKC,SAAL,GAAiBpY,SAAS,EAA1B;IACA,QAAK8X,QAAL,GAAgB9X,SAAS,EAAzB,CAJU,CAKV;;IALU;EAMb;;;;WACD,kBAAS;MAAA;;MACL,oBAAwC,KAAKS,OAA7C;MAAA,IAAMG,OAAN,iBAAMA,OAAN;MAAA,IAAeyX,oBAAf,iBAAeA,oBAAf;MACA,IAAM7X,KAAN,GAAgB,IAAhB,CAAMA,KAAN;MACA,IAAIkX,aAAa,GAAG,KAAKS,kBAAL,CAAwB3X,KAAK,CAACuF,WAA9B,EAA2CsS,oBAA3C,CAApB;MACA,IAAIC,aAAa,GAAG1X,OAAO,CAAC2X,UAAR,IAAuBtY,aAAa,CAACR,SAAD,EAAY;QAAE+I,GAAG,EAAE,KAAK4P,SAAZ;QAAuBrS,WAAW,EAAEvF,KAAK,CAACuF,WAA1C;QAAuDyS,KAAK,EAAEd,aAAa,CAACe,WAA5E;QAAyFC,oBAAoB,EAAEhB,aAAa,CAAChV,MAAd,KAAyB;MAAxI,CAAZ,CAAxD;;MACA,IAAInC,WAAW,GAAG,SAAdA,WAAc,CAACoY,UAAD;QAAA,OAAiB1Y,aAAa,CAAC2X,QAAD,EAAW;UAAEpP,GAAG,EAAE,OAAI,CAACsP,QAAZ;UAAsB/R,WAAW,EAAEvF,KAAK,CAACuF,WAAzC;UAAsD2R,aAAa,EAAEA,aAArE;UAAoFkB,aAAa,EAAEpY,KAAK,CAACoY,aAAzG;UAAwHC,aAAa,EAAErY,KAAK,CAACqY,aAA7I;UAA4JC,UAAU,EAAEtY,KAAK,CAACsY,UAA9K;UAA0LC,YAAY,EAAEvY,KAAK,CAACuY,YAA9M;UAA4N9R,cAAc,EAAEzG,KAAK,CAACyG,cAAlP;UAAkQR,SAAS,EAAEjG,KAAK,CAACiG,SAAnR;UAA8RC,WAAW,EAAElG,KAAK,CAACkG,WAAjT;UAA8TsR,gBAAgB,EAAEpX,OAAO,CAACoX,gBAAxV;UAA0WrB,YAAY,EAAEgC,UAAU,CAACK,iBAAnY;UAAsZtC,aAAa,EAAEiC,UAAU,CAACjC,aAAhb;UAA+blM,YAAY,EAAE5J,OAAO,CAAC4J,YAArd;UAAmeC,eAAe,EAAE7J,OAAO,CAAC6J,eAA5f;UAA6gB2F,eAAe,EAAExP,OAAO,CAACqY,WAAtiB;UAAmjB5C,UAAU,EAAE,CAAC7V,KAAK,CAACiB,YAAtkB;UAAolBwW,gBAAgB,EAAE,OAAI,CAAC5X,WAA3mB;UAAwnBoR,WAAW,EAAEkH,UAAU,CAAClH,WAAhpB;UAA6pBmD,YAAY,EAAE+D,UAAU,CAAC/D,YAAtrB;UAAosBlT,QAAQ,EAAElB,KAAK,CAACkB;QAAptB,CAAX,CAA9B;MAAA,CAAlB;;MACA,OAAOd,OAAO,CAACkB,WAAR,GACD,KAAKoX,mBAAL,CAAyBZ,aAAzB,EAAwC/X,WAAxC,EAAqDmX,aAAa,CAAC7V,MAAnE,EAA2EjB,OAAO,CAACkB,WAAnF,CADC,GAED,KAAKqX,kBAAL,CAAwBb,aAAxB,EAAuC/X,WAAvC,CAFN;IAGH;;;;EAjBsBJ,S;;AAmB3B,SAASgY,kBAAT,CAA4BpS,WAA5B,EAAyCsS,oBAAzC,EAA+D;EAC3D,IAAIe,SAAS,GAAG,IAAI1Z,cAAJ,CAAmBqG,WAAW,CAACsT,WAA/B,EAA4ChB,oBAA5C,CAAhB;EACA,OAAO,IAAI1Y,aAAJ,CAAkByZ,SAAlB,EAA6B,kBAAkBE,IAAlB,CAAuBvT,WAAW,CAACoR,gBAAnC,CAA7B,CAAP;AACH;;IAEKoC,yB;;;;;;;;;;;;;WACF;IACA,0BAAiBtR,YAAjB,EAA+BkP,gBAA/B,EAAiDqC,aAAjD,EAAgE;MAC5D,IAAIH,WAAW,mGAA0BpR,YAA1B,EAAwCkP,gBAAxC,EAA0DqC,aAA1D,CAAf;;MACA,IAAMhZ,KAAN,GAAgB,IAAhB,CAAMA,KAAN;MACA,OAAOiZ,wBAAwB,CAAC;QAC5BxR,YAAY,EAAEoR,WADc;QAE5BK,UAAU,EAAE,iBAAiBJ,IAAjB,CAAsBnC,gBAAtB,CAFgB;QAG5BwC,cAAc,EAAEnZ,KAAK,CAACmZ,cAHM;QAI5B/R,OAAO,EAAEpH,KAAK,CAACoH;MAJa,CAAD,CAA/B;IAMH;;;;EAXmChI,oB;;AAaxC,SAAS6Z,wBAAT,CAAkCjZ,KAAlC,EAAyC;EACrC,IAAMoH,OAAN,GAAgCpH,KAAhC,CAAMoH,OAAN;EAAA,IAAeK,YAAf,GAAgCzH,KAAhC,CAAeyH,YAAf;EACA,IAAMuB,KAAN,GAAqBvB,YAArB,CAAMuB,KAAN;EAAA,IAAaE,GAAb,GAAqBzB,YAArB,CAAayB,GAAb;EACA,IAAIkQ,SAAJ,CAHqC,CAIrC;;EACA,IAAIpZ,KAAK,CAACkZ,UAAV,EAAsB;IAClBlQ,KAAK,GAAG5B,OAAO,CAACiS,WAAR,CAAoBrQ,KAApB,CAAR,CADkB,CAElB;;IACAoQ,SAAS,GAAGhS,OAAO,CAACiS,WAAR,CAAoBnQ,GAApB,CAAZ;;IACA,IAAIkQ,SAAS,CAACzP,OAAV,OAAwBT,GAAG,CAACS,OAAJ,EAA5B,EAA2C;MACvCT,GAAG,GAAG7J,QAAQ,CAAC+Z,SAAD,EAAY,CAAZ,CAAd;IACH;EACJ,CAZoC,CAarC;;;EACA,IAAIpZ,KAAK,CAACmZ,cAAV,EAA0B;IACtB;IACA;IACA,IAAIG,oBAAoB,GAAGlS,OAAO,CAACiS,WAAR,CAAoBjS,OAAO,CAACmS,YAAR,CAAqBrb,OAAO,CAACuJ,YAAY,CAACyB,GAAd,EAAmB,CAAC,CAApB,CAA5B,CAApB,CAA3B;IACA,IAAIhH,MAAM,GAAG+P,IAAI,CAACuH,IAAL,EAAU;IACvBla,SAAS,CAACga,oBAAD,EAAuBpQ,GAAvB,CADI,CAAb;IAEAA,GAAG,GAAG7J,QAAQ,CAAC6J,GAAD,EAAM,IAAIhH,MAAV,CAAd;EACH;;EACD,OAAO;IAAE8G,KAAK,EAALA,KAAF;IAASE,GAAG,EAAHA;EAAT,CAAP;AACH;;AAED,IAAIuQ,QAAQ,GAAG,s8GAAf;AACAla,YAAY,CAACka,QAAD,CAAZ;AAEA,SAAS/B,YAAY,IAAIgC,WAAzB,EAAsCtC,QAAtC,EAAgDL,cAAhD,EAAgEpB,KAAhE,EAAuEoD,yBAAvE,EAAkG/F,SAAlG,EAA6GrT,SAA7G,EAAwHgY,kBAAxH,EAA4IsB,wBAA5I"},"metadata":{},"sourceType":"module"}