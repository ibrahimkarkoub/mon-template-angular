{"ast":null,"code":"import _toConsumableArray from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { DomHandler } from 'primeng/dom';\nimport * as i2 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nvar _c0 = [\"input\"];\n\nfunction InputNumber_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 6);\n    i0.ɵɵlistener(\"click\", function InputNumber_i_3_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.clear());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nvar _c1 = function _c1() {\n  return {\n    \"p-inputnumber-button p-inputnumber-button-up\": true\n  };\n};\n\nvar _c2 = function _c2() {\n  return {\n    \"p-inputnumber-button p-inputnumber-button-down\": true\n  };\n};\n\nfunction InputNumber_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 7)(1, \"button\", 8);\n    i0.ɵɵlistener(\"mousedown\", function InputNumber_span_4_Template_button_mousedown_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onUpButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_span_4_Template_button_mouseup_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onUpButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_span_4_Template_button_mouseleave_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onUpButtonMouseLeave());\n    })(\"keydown\", function InputNumber_span_4_Template_button_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onUpButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_span_4_Template_button_keyup_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onUpButtonKeyUp());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 8);\n    i0.ɵɵlistener(\"mousedown\", function InputNumber_span_4_Template_button_mousedown_2_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onDownButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_span_4_Template_button_mouseup_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onDownButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_span_4_Template_button_mouseleave_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onDownButtonMouseLeave());\n    })(\"keydown\", function InputNumber_span_4_Template_button_keydown_2_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onDownButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_span_4_Template_button_keyup_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onDownButtonKeyUp());\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r2.incrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(10, _c1))(\"icon\", ctx_r2.incrementButtonIcon)(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r2.decrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(11, _c2))(\"icon\", ctx_r2.decrementButtonIcon)(\"disabled\", ctx_r2.disabled);\n  }\n}\n\nfunction InputNumber_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"mousedown\", function InputNumber_button_5_Template_button_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      var ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.onUpButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_button_5_Template_button_mouseup_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      var ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.onUpButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_button_5_Template_button_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      var ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.onUpButtonMouseLeave());\n    })(\"keydown\", function InputNumber_button_5_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      var ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onUpButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_button_5_Template_button_keyup_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      var ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onUpButtonKeyUp());\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.incrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(5, _c1))(\"icon\", ctx_r3.incrementButtonIcon)(\"disabled\", ctx_r3.disabled);\n  }\n}\n\nfunction InputNumber_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"mousedown\", function InputNumber_button_6_Template_button_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      var ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.onDownButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_button_6_Template_button_mouseup_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      var ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onDownButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_button_6_Template_button_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      var ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.onDownButtonMouseLeave());\n    })(\"keydown\", function InputNumber_button_6_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      var ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.onDownButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_button_6_Template_button_keyup_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      var ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.onDownButtonKeyUp());\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r4.decrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(5, _c2))(\"icon\", ctx_r4.decrementButtonIcon)(\"disabled\", ctx_r4.disabled);\n  }\n}\n\nvar _c3 = function _c3(a1, a2, a3) {\n  return {\n    \"p-inputnumber p-component\": true,\n    \"p-inputnumber-buttons-stacked\": a1,\n    \"p-inputnumber-buttons-horizontal\": a2,\n    \"p-inputnumber-buttons-vertical\": a3\n  };\n};\n\nvar INPUTNUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return InputNumber;\n  }),\n  multi: true\n};\n\nvar InputNumber = /*#__PURE__*/function () {\n  function InputNumber(el, cd) {\n    _classCallCheck(this, InputNumber);\n\n    this.el = el;\n    this.cd = cd;\n    this.showButtons = false;\n    this.format = true;\n    this.buttonLayout = 'stacked';\n    this.incrementButtonIcon = 'pi pi-angle-up';\n    this.decrementButtonIcon = 'pi pi-angle-down';\n    this.readonly = false;\n    this.step = 1;\n    this.allowEmpty = true;\n    this.mode = 'decimal';\n    this.useGrouping = true;\n    this.showClear = false;\n    this.onInput = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onKeyDown = new EventEmitter();\n    this.onClear = new EventEmitter();\n\n    this.onModelChange = function () {};\n\n    this.onModelTouched = function () {};\n\n    this.groupChar = '';\n    this.prefixChar = '';\n    this.suffixChar = '';\n  }\n\n  _createClass(InputNumber, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(disabled) {\n      if (disabled) this.focused = false;\n      this._disabled = disabled;\n      if (this.timer) this.clearTimer();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(simpleChange) {\n      var props = ['locale', 'localeMatcher', 'mode', 'currency', 'currencyDisplay', 'useGrouping', 'minFractionDigits', 'maxFractionDigits', 'prefix', 'suffix'];\n\n      if (props.some(function (p) {\n        return !!simpleChange[p];\n      })) {\n        this.updateConstructParser();\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.constructParser();\n      this.initialized = true;\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      return {\n        localeMatcher: this.localeMatcher,\n        style: this.mode,\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay,\n        useGrouping: this.useGrouping,\n        minimumFractionDigits: this.minFractionDigits,\n        maximumFractionDigits: this.maxFractionDigits\n      };\n    }\n  }, {\n    key: \"constructParser\",\n    value: function constructParser() {\n      this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());\n\n      var numerals = _toConsumableArray(new Intl.NumberFormat(this.locale, {\n        useGrouping: false\n      }).format(9876543210)).reverse();\n\n      var index = new Map(numerals.map(function (d, i) {\n        return [d, i];\n      }));\n      this._numeral = new RegExp(\"[\".concat(numerals.join(''), \"]\"), 'g');\n      this._group = this.getGroupingExpression();\n      this._minusSign = this.getMinusSignExpression();\n      this._currency = this.getCurrencyExpression();\n      this._decimal = this.getDecimalExpression();\n      this._suffix = this.getSuffixExpression();\n      this._prefix = this.getPrefixExpression();\n\n      this._index = function (d) {\n        return index.get(d);\n      };\n    }\n  }, {\n    key: \"updateConstructParser\",\n    value: function updateConstructParser() {\n      if (this.initialized) {\n        this.constructParser();\n      }\n    }\n  }, {\n    key: \"escapeRegExp\",\n    value: function escapeRegExp(text) {\n      return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    }\n  }, {\n    key: \"getDecimalExpression\",\n    value: function getDecimalExpression() {\n      var formatter = new Intl.NumberFormat(this.locale, Object.assign(Object.assign({}, this.getOptions()), {\n        useGrouping: false\n      }));\n      return new RegExp(\"[\".concat(formatter.format(1.1).replace(this._currency, '').trim().replace(this._numeral, ''), \"]\"), 'g');\n    }\n  }, {\n    key: \"getGroupingExpression\",\n    value: function getGroupingExpression() {\n      var formatter = new Intl.NumberFormat(this.locale, {\n        useGrouping: true\n      });\n      this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0);\n      return new RegExp(\"[\".concat(this.groupChar, \"]\"), 'g');\n    }\n  }, {\n    key: \"getMinusSignExpression\",\n    value: function getMinusSignExpression() {\n      var formatter = new Intl.NumberFormat(this.locale, {\n        useGrouping: false\n      });\n      return new RegExp(\"[\".concat(formatter.format(-1).trim().replace(this._numeral, ''), \"]\"), 'g');\n    }\n  }, {\n    key: \"getCurrencyExpression\",\n    value: function getCurrencyExpression() {\n      if (this.currency) {\n        var formatter = new Intl.NumberFormat(this.locale, {\n          style: 'currency',\n          currency: this.currency,\n          currencyDisplay: this.currencyDisplay,\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 0\n        });\n        return new RegExp(\"[\".concat(formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._group, ''), \"]\"), 'g');\n      }\n\n      return new RegExp(\"[]\", 'g');\n    }\n  }, {\n    key: \"getPrefixExpression\",\n    value: function getPrefixExpression() {\n      if (this.prefix) {\n        this.prefixChar = this.prefix;\n      } else {\n        var formatter = new Intl.NumberFormat(this.locale, {\n          style: this.mode,\n          currency: this.currency,\n          currencyDisplay: this.currencyDisplay\n        });\n        this.prefixChar = formatter.format(1).split('1')[0];\n      }\n\n      return new RegExp(\"\".concat(this.escapeRegExp(this.prefixChar || '')), 'g');\n    }\n  }, {\n    key: \"getSuffixExpression\",\n    value: function getSuffixExpression() {\n      if (this.suffix) {\n        this.suffixChar = this.suffix;\n      } else {\n        var formatter = new Intl.NumberFormat(this.locale, {\n          style: this.mode,\n          currency: this.currency,\n          currencyDisplay: this.currencyDisplay,\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 0\n        });\n        this.suffixChar = formatter.format(1).split('1')[1];\n      }\n\n      return new RegExp(\"\".concat(this.escapeRegExp(this.suffixChar || '')), 'g');\n    }\n  }, {\n    key: \"formatValue\",\n    value: function formatValue(value) {\n      if (value != null) {\n        if (value === '-') {\n          // Minus sign\n          return value;\n        }\n\n        if (this.format) {\n          var formatter = new Intl.NumberFormat(this.locale, this.getOptions());\n          var formattedValue = formatter.format(value);\n\n          if (this.prefix) {\n            formattedValue = this.prefix + formattedValue;\n          }\n\n          if (this.suffix) {\n            formattedValue = formattedValue + this.suffix;\n          }\n\n          return formattedValue;\n        }\n\n        return value.toString();\n      }\n\n      return '';\n    }\n  }, {\n    key: \"parseValue\",\n    value: function parseValue(text) {\n      var filteredText = text.replace(this._suffix, '').replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '').replace(this._group, '').replace(this._minusSign, '-').replace(this._decimal, '.').replace(this._numeral, this._index);\n\n      if (filteredText) {\n        if (filteredText === '-') // Minus sign\n          return filteredText;\n        var parsedValue = +filteredText;\n        return isNaN(parsedValue) ? null : parsedValue;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"repeat\",\n    value: function repeat(event, interval, dir) {\n      var _this = this;\n\n      if (this.readonly) {\n        return;\n      }\n\n      var i = interval || 500;\n      this.clearTimer();\n      this.timer = setTimeout(function () {\n        _this.repeat(event, 40, dir);\n      }, i);\n      this.spin(event, dir);\n    }\n  }, {\n    key: \"spin\",\n    value: function spin(event, dir) {\n      var step = this.step * dir;\n      var currentValue = this.parseValue(this.input.nativeElement.value) || 0;\n      var newValue = this.validateValue(currentValue + step);\n\n      if (this.maxlength && this.maxlength < this.formatValue(newValue).length) {\n        return;\n      }\n\n      this.updateInput(newValue, null, 'spin', null);\n      this.updateModel(event, newValue);\n      this.handleOnInput(event, currentValue, newValue);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.value = null;\n      this.onModelChange(this.value);\n      this.onClear.emit();\n    }\n  }, {\n    key: \"onUpButtonMouseDown\",\n    value: function onUpButtonMouseDown(event) {\n      this.input.nativeElement.focus();\n      this.repeat(event, null, 1);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onUpButtonMouseUp\",\n    value: function onUpButtonMouseUp() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onUpButtonMouseLeave\",\n    value: function onUpButtonMouseLeave() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onUpButtonKeyDown\",\n    value: function onUpButtonKeyDown(event) {\n      if (event.keyCode === 32 || event.keyCode === 13) {\n        this.repeat(event, null, 1);\n      }\n    }\n  }, {\n    key: \"onUpButtonKeyUp\",\n    value: function onUpButtonKeyUp() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onDownButtonMouseDown\",\n    value: function onDownButtonMouseDown(event) {\n      this.input.nativeElement.focus();\n      this.repeat(event, null, -1);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onDownButtonMouseUp\",\n    value: function onDownButtonMouseUp() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onDownButtonMouseLeave\",\n    value: function onDownButtonMouseLeave() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onDownButtonKeyUp\",\n    value: function onDownButtonKeyUp() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onDownButtonKeyDown\",\n    value: function onDownButtonKeyDown(event) {\n      if (event.keyCode === 32 || event.keyCode === 13) {\n        this.repeat(event, null, -1);\n      }\n    }\n  }, {\n    key: \"onUserInput\",\n    value: function onUserInput(event) {\n      if (this.readonly) {\n        return;\n      }\n\n      if (this.isSpecialChar) {\n        event.target.value = this.lastValue;\n      }\n\n      this.isSpecialChar = false;\n    }\n  }, {\n    key: \"onInputKeyDown\",\n    value: function onInputKeyDown(event) {\n      if (this.readonly) {\n        return;\n      }\n\n      this.lastValue = event.target.value;\n\n      if (event.shiftKey || event.altKey) {\n        this.isSpecialChar = true;\n        return;\n      }\n\n      var selectionStart = event.target.selectionStart;\n      var selectionEnd = event.target.selectionEnd;\n      var inputValue = event.target.value;\n      var newValueStr = null;\n\n      if (event.altKey) {\n        event.preventDefault();\n      }\n\n      switch (event.which) {\n        //up\n        case 38:\n          this.spin(event, 1);\n          event.preventDefault();\n          break;\n        //down\n\n        case 40:\n          this.spin(event, -1);\n          event.preventDefault();\n          break;\n        //left\n\n        case 37:\n          if (!this.isNumeralChar(inputValue.charAt(selectionStart - 1))) {\n            event.preventDefault();\n          }\n\n          break;\n        //right\n\n        case 39:\n          if (!this.isNumeralChar(inputValue.charAt(selectionStart))) {\n            event.preventDefault();\n          }\n\n          break;\n        //enter\n\n        case 13:\n          newValueStr = this.validateValue(this.parseValue(this.input.nativeElement.value));\n          this.input.nativeElement.value = this.formatValue(newValueStr);\n          this.input.nativeElement.setAttribute('aria-valuenow', newValueStr);\n          this.updateModel(event, newValueStr);\n          break;\n        //backspace\n\n        case 8:\n          {\n            event.preventDefault();\n\n            if (selectionStart === selectionEnd) {\n              var deleteChar = inputValue.charAt(selectionStart - 1);\n\n              var _this$getDecimalCharI = this.getDecimalCharIndexes(inputValue),\n                  decimalCharIndex = _this$getDecimalCharI.decimalCharIndex,\n                  decimalCharIndexWithoutPrefix = _this$getDecimalCharI.decimalCharIndexWithoutPrefix;\n\n              if (this.isNumeralChar(deleteChar)) {\n                var decimalLength = this.getDecimalLength(inputValue);\n\n                if (this._group.test(deleteChar)) {\n                  this._group.lastIndex = 0;\n                  newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1);\n                } else if (this._decimal.test(deleteChar)) {\n                  this._decimal.lastIndex = 0;\n\n                  if (decimalLength) {\n                    this.input.nativeElement.setSelectionRange(selectionStart - 1, selectionStart - 1);\n                  } else {\n                    newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                  }\n                } else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                  var insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n                  newValueStr = inputValue.slice(0, selectionStart - 1) + insertedText + inputValue.slice(selectionStart);\n                } else if (decimalCharIndexWithoutPrefix === 1) {\n                  newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\n                  newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n                } else {\n                  newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                }\n              }\n\n              this.updateValue(event, newValueStr, null, 'delete-single');\n            } else {\n              newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n              this.updateValue(event, newValueStr, null, 'delete-range');\n            }\n\n            break;\n          }\n        // del\n\n        case 46:\n          event.preventDefault();\n\n          if (selectionStart === selectionEnd) {\n            var _deleteChar = inputValue.charAt(selectionStart);\n\n            var _this$getDecimalCharI2 = this.getDecimalCharIndexes(inputValue),\n                _decimalCharIndex = _this$getDecimalCharI2.decimalCharIndex,\n                _decimalCharIndexWithoutPrefix = _this$getDecimalCharI2.decimalCharIndexWithoutPrefix;\n\n            if (this.isNumeralChar(_deleteChar)) {\n              var _decimalLength = this.getDecimalLength(inputValue);\n\n              if (this._group.test(_deleteChar)) {\n                this._group.lastIndex = 0;\n                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2);\n              } else if (this._decimal.test(_deleteChar)) {\n                this._decimal.lastIndex = 0;\n\n                if (_decimalLength) {\n                  this.input.nativeElement.setSelectionRange(selectionStart + 1, selectionStart + 1);\n                } else {\n                  newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n                }\n              } else if (_decimalCharIndex > 0 && selectionStart > _decimalCharIndex) {\n                var _insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < _decimalLength ? '' : '0';\n\n                newValueStr = inputValue.slice(0, selectionStart) + _insertedText + inputValue.slice(selectionStart + 1);\n              } else if (_decimalCharIndexWithoutPrefix === 1) {\n                newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\n                newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n              } else {\n                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n              }\n            }\n\n            this.updateValue(event, newValueStr, null, 'delete-back-single');\n          } else {\n            newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n            this.updateValue(event, newValueStr, null, 'delete-range');\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.onKeyDown.emit(event);\n    }\n  }, {\n    key: \"onInputKeyPress\",\n    value: function onInputKeyPress(event) {\n      if (this.readonly) {\n        return;\n      }\n\n      var code = event.which || event.keyCode;\n      var char = String.fromCharCode(code);\n      var isDecimalSign = this.isDecimalSign(char);\n      var isMinusSign = this.isMinusSign(char);\n\n      if (code != 13) {\n        event.preventDefault();\n      }\n\n      if (48 <= code && code <= 57 || isMinusSign || isDecimalSign) {\n        this.insert(event, char, {\n          isDecimalSign: isDecimalSign,\n          isMinusSign: isMinusSign\n        });\n      }\n    }\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(event) {\n      if (!this.disabled && !this.readonly) {\n        event.preventDefault();\n        var data = (event.clipboardData || window['clipboardData']).getData('Text');\n\n        if (data) {\n          var filteredData = this.parseValue(data);\n\n          if (filteredData != null) {\n            this.insert(event, filteredData.toString());\n          }\n        }\n      }\n    }\n  }, {\n    key: \"allowMinusSign\",\n    value: function allowMinusSign() {\n      return this.min == null || this.min < 0;\n    }\n  }, {\n    key: \"isMinusSign\",\n    value: function isMinusSign(char) {\n      if (this._minusSign.test(char) || char === '-') {\n        this._minusSign.lastIndex = 0;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isDecimalSign\",\n    value: function isDecimalSign(char) {\n      if (this._decimal.test(char)) {\n        this._decimal.lastIndex = 0;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isDecimalMode\",\n    value: function isDecimalMode() {\n      return this.mode === 'decimal';\n    }\n  }, {\n    key: \"getDecimalCharIndexes\",\n    value: function getDecimalCharIndexes(val) {\n      var decimalCharIndex = val.search(this._decimal);\n      this._decimal.lastIndex = 0;\n      var filteredVal = val.replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '');\n      var decimalCharIndexWithoutPrefix = filteredVal.search(this._decimal);\n      this._decimal.lastIndex = 0;\n      return {\n        decimalCharIndex: decimalCharIndex,\n        decimalCharIndexWithoutPrefix: decimalCharIndexWithoutPrefix\n      };\n    }\n  }, {\n    key: \"getCharIndexes\",\n    value: function getCharIndexes(val) {\n      var decimalCharIndex = val.search(this._decimal);\n      this._decimal.lastIndex = 0;\n      var minusCharIndex = val.search(this._minusSign);\n      this._minusSign.lastIndex = 0;\n      var suffixCharIndex = val.search(this._suffix);\n      this._suffix.lastIndex = 0;\n      var currencyCharIndex = val.search(this._currency);\n      this._currency.lastIndex = 0;\n      return {\n        decimalCharIndex: decimalCharIndex,\n        minusCharIndex: minusCharIndex,\n        suffixCharIndex: suffixCharIndex,\n        currencyCharIndex: currencyCharIndex\n      };\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(event, text) {\n      var sign = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        isDecimalSign: false,\n        isMinusSign: false\n      };\n      var minusCharIndexOnText = text.search(this._minusSign);\n      this._minusSign.lastIndex = 0;\n\n      if (!this.allowMinusSign() && minusCharIndexOnText !== -1) {\n        return;\n      }\n\n      var selectionStart = this.input.nativeElement.selectionStart;\n      var selectionEnd = this.input.nativeElement.selectionEnd;\n      var inputValue = this.input.nativeElement.value.trim();\n\n      var _this$getCharIndexes = this.getCharIndexes(inputValue),\n          decimalCharIndex = _this$getCharIndexes.decimalCharIndex,\n          minusCharIndex = _this$getCharIndexes.minusCharIndex,\n          suffixCharIndex = _this$getCharIndexes.suffixCharIndex,\n          currencyCharIndex = _this$getCharIndexes.currencyCharIndex;\n\n      var newValueStr;\n\n      if (sign.isMinusSign) {\n        if (selectionStart === 0) {\n          newValueStr = inputValue;\n\n          if (minusCharIndex === -1 || selectionEnd !== 0) {\n            newValueStr = this.insertText(inputValue, text, 0, selectionEnd);\n          }\n\n          this.updateValue(event, newValueStr, text, 'insert');\n        }\n      } else if (sign.isDecimalSign) {\n        if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\n          this.updateValue(event, inputValue, text, 'insert');\n        } else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\n          newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n          this.updateValue(event, newValueStr, text, 'insert');\n        } else if (decimalCharIndex === -1 && this.maxFractionDigits) {\n          newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n          this.updateValue(event, newValueStr, text, 'insert');\n        }\n      } else {\n        var maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits;\n        var operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert';\n\n        if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n          if (selectionStart + text.length - (decimalCharIndex + 1) <= maxFractionDigits) {\n            var charIndex = currencyCharIndex >= selectionStart ? currencyCharIndex - 1 : suffixCharIndex >= selectionStart ? suffixCharIndex : inputValue.length;\n            newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length, charIndex) + inputValue.slice(charIndex);\n            this.updateValue(event, newValueStr, text, operation);\n          }\n        } else {\n          newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n          this.updateValue(event, newValueStr, text, operation);\n        }\n      }\n    }\n  }, {\n    key: \"insertText\",\n    value: function insertText(value, text, start, end) {\n      var textSplit = text === '.' ? text : text.split('.');\n\n      if (textSplit.length === 2) {\n        var decimalCharIndex = value.slice(start, end).search(this._decimal);\n        this._decimal.lastIndex = 0;\n        return decimalCharIndex > 0 ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : value || this.formatValue(text);\n      } else if (end - start === value.length) {\n        return this.formatValue(text);\n      } else if (start === 0) {\n        return text + value.slice(end);\n      } else if (end === value.length) {\n        return value.slice(0, start) + text;\n      } else {\n        return value.slice(0, start) + text + value.slice(end);\n      }\n    }\n  }, {\n    key: \"deleteRange\",\n    value: function deleteRange(value, start, end) {\n      var newValueStr;\n      if (end - start === value.length) newValueStr = '';else if (start === 0) newValueStr = value.slice(end);else if (end === value.length) newValueStr = value.slice(0, start);else newValueStr = value.slice(0, start) + value.slice(end);\n      return newValueStr;\n    }\n  }, {\n    key: \"initCursor\",\n    value: function initCursor() {\n      var selectionStart = this.input.nativeElement.selectionStart;\n      var inputValue = this.input.nativeElement.value;\n      var valueLength = inputValue.length;\n      var index = null; // remove prefix\n\n      var prefixLength = (this.prefixChar || '').length;\n      inputValue = inputValue.replace(this._prefix, '');\n      selectionStart = selectionStart - prefixLength;\n      var char = inputValue.charAt(selectionStart);\n\n      if (this.isNumeralChar(char)) {\n        return selectionStart + prefixLength;\n      } //left\n\n\n      var i = selectionStart - 1;\n\n      while (i >= 0) {\n        char = inputValue.charAt(i);\n\n        if (this.isNumeralChar(char)) {\n          index = i + prefixLength;\n          break;\n        } else {\n          i--;\n        }\n      }\n\n      if (index !== null) {\n        this.input.nativeElement.setSelectionRange(index + 1, index + 1);\n      } else {\n        i = selectionStart;\n\n        while (i < valueLength) {\n          char = inputValue.charAt(i);\n\n          if (this.isNumeralChar(char)) {\n            index = i + prefixLength;\n            break;\n          } else {\n            i++;\n          }\n        }\n\n        if (index !== null) {\n          this.input.nativeElement.setSelectionRange(index, index);\n        }\n      }\n\n      return index || 0;\n    }\n  }, {\n    key: \"onInputClick\",\n    value: function onInputClick() {\n      var currentValue = this.input.nativeElement.value;\n\n      if (!this.readonly && currentValue !== DomHandler.getSelection()) {\n        this.initCursor();\n      }\n    }\n  }, {\n    key: \"isNumeralChar\",\n    value: function isNumeralChar(char) {\n      if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\n        this.resetRegex();\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"resetRegex\",\n    value: function resetRegex() {\n      this._numeral.lastIndex = 0;\n      this._decimal.lastIndex = 0;\n      this._group.lastIndex = 0;\n      this._minusSign.lastIndex = 0;\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(event, valueStr, insertedValueStr, operation) {\n      var currentValue = this.input.nativeElement.value;\n      var newValue = null;\n\n      if (valueStr != null) {\n        newValue = this.parseValue(valueStr);\n        newValue = !newValue && !this.allowEmpty ? 0 : newValue;\n        this.updateInput(newValue, insertedValueStr, operation, valueStr);\n        this.handleOnInput(event, currentValue, newValue);\n      }\n    }\n  }, {\n    key: \"handleOnInput\",\n    value: function handleOnInput(event, currentValue, newValue) {\n      if (this.isValueChanged(currentValue, newValue)) {\n        this.onInput.emit({\n          originalEvent: event,\n          value: newValue,\n          formattedValue: currentValue\n        });\n      }\n    }\n  }, {\n    key: \"isValueChanged\",\n    value: function isValueChanged(currentValue, newValue) {\n      if (newValue === null && currentValue !== null) {\n        return true;\n      }\n\n      if (newValue != null) {\n        var parsedCurrentValue = typeof currentValue === 'string' ? this.parseValue(currentValue) : currentValue;\n        return newValue !== parsedCurrentValue;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"validateValue\",\n    value: function validateValue(value) {\n      if (value === '-' || value == null) {\n        return null;\n      }\n\n      if (this.min != null && value < this.min) {\n        return this.min;\n      }\n\n      if (this.max != null && value > this.max) {\n        return this.max;\n      }\n\n      return value;\n    }\n  }, {\n    key: \"updateInput\",\n    value: function updateInput(value, insertedValueStr, operation, valueStr) {\n      insertedValueStr = insertedValueStr || '';\n      var inputValue = this.input.nativeElement.value;\n      var newValue = this.formatValue(value);\n      var currentLength = inputValue.length;\n\n      if (newValue !== valueStr) {\n        newValue = this.concatValues(newValue, valueStr);\n      }\n\n      if (currentLength === 0) {\n        this.input.nativeElement.value = newValue;\n        this.input.nativeElement.setSelectionRange(0, 0);\n        var index = this.initCursor();\n        var selectionEnd = index + insertedValueStr.length;\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else {\n        var selectionStart = this.input.nativeElement.selectionStart;\n        var _selectionEnd = this.input.nativeElement.selectionEnd;\n\n        if (this.maxlength && this.maxlength < newValue.length) {\n          return;\n        }\n\n        this.input.nativeElement.value = newValue;\n        var newLength = newValue.length;\n\n        if (operation === 'range-insert') {\n          var startValue = this.parseValue((inputValue || '').slice(0, selectionStart));\n          var startValueStr = startValue !== null ? startValue.toString() : '';\n          var startExpr = startValueStr.split('').join(\"(\".concat(this.groupChar, \")?\"));\n          var sRegex = new RegExp(startExpr, 'g');\n          sRegex.test(newValue);\n          var tExpr = insertedValueStr.split('').join(\"(\".concat(this.groupChar, \")?\"));\n          var tRegex = new RegExp(tExpr, 'g');\n          tRegex.test(newValue.slice(sRegex.lastIndex));\n          _selectionEnd = sRegex.lastIndex + tRegex.lastIndex;\n          this.input.nativeElement.setSelectionRange(_selectionEnd, _selectionEnd);\n        } else if (newLength === currentLength) {\n          if (operation === 'insert' || operation === 'delete-back-single') this.input.nativeElement.setSelectionRange(_selectionEnd + 1, _selectionEnd + 1);else if (operation === 'delete-single') this.input.nativeElement.setSelectionRange(_selectionEnd - 1, _selectionEnd - 1);else if (operation === 'delete-range' || operation === 'spin') this.input.nativeElement.setSelectionRange(_selectionEnd, _selectionEnd);\n        } else if (operation === 'delete-back-single') {\n          var prevChar = inputValue.charAt(_selectionEnd - 1);\n          var nextChar = inputValue.charAt(_selectionEnd);\n          var diff = currentLength - newLength;\n\n          var isGroupChar = this._group.test(nextChar);\n\n          if (isGroupChar && diff === 1) {\n            _selectionEnd += 1;\n          } else if (!isGroupChar && this.isNumeralChar(prevChar)) {\n            _selectionEnd += -1 * diff + 1;\n          }\n\n          this._group.lastIndex = 0;\n          this.input.nativeElement.setSelectionRange(_selectionEnd, _selectionEnd);\n        } else if (inputValue === '-' && operation === 'insert') {\n          this.input.nativeElement.setSelectionRange(0, 0);\n\n          var _index = this.initCursor();\n\n          var _selectionEnd2 = _index + insertedValueStr.length + 1;\n\n          this.input.nativeElement.setSelectionRange(_selectionEnd2, _selectionEnd2);\n        } else {\n          _selectionEnd = _selectionEnd + (newLength - currentLength);\n          this.input.nativeElement.setSelectionRange(_selectionEnd, _selectionEnd);\n        }\n      }\n\n      this.input.nativeElement.setAttribute('aria-valuenow', value);\n    }\n  }, {\n    key: \"concatValues\",\n    value: function concatValues(val1, val2) {\n      if (val1 && val2) {\n        var decimalCharIndex = val2.search(this._decimal);\n        this._decimal.lastIndex = 0;\n\n        if (this.suffixChar) {\n          return val1.replace(this.suffixChar, '').split(this._decimal)[0] + val2.replace(this.suffixChar, '').slice(decimalCharIndex) + this.suffixChar;\n        } else {\n          return decimalCharIndex !== -1 ? val1.split(this._decimal)[0] + val2.slice(decimalCharIndex) : val1;\n        }\n      }\n\n      return val1;\n    }\n  }, {\n    key: \"getDecimalLength\",\n    value: function getDecimalLength(value) {\n      if (value) {\n        var valueSplit = value.split(this._decimal);\n\n        if (valueSplit.length === 2) {\n          return valueSplit[1].replace(this._suffix, '').trim().replace(/\\s/g, '').replace(this._currency, '').length;\n        }\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"onInputFocus\",\n    value: function onInputFocus(event) {\n      this.focused = true;\n      this.onFocus.emit(event);\n    }\n  }, {\n    key: \"onInputBlur\",\n    value: function onInputBlur(event) {\n      this.focused = false;\n      var newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\n      this.input.nativeElement.value = this.formatValue(newValue);\n      this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n      this.updateModel(event, newValue);\n      this.onBlur.emit(event);\n    }\n  }, {\n    key: \"formattedValue\",\n    value: function formattedValue() {\n      var val = !this.value && !this.allowEmpty ? 0 : this.value;\n      return this.formatValue(val);\n    }\n  }, {\n    key: \"updateModel\",\n    value: function updateModel(event, value) {\n      if (this.value !== value) {\n        this.value = value;\n        this.onModelChange(value);\n      }\n\n      this.onModelTouched();\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"filled\",\n    get: function get() {\n      return this.value != null && this.value.toString().length > 0;\n    }\n  }, {\n    key: \"clearTimer\",\n    value: function clearTimer() {\n      if (this.timer) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"getFormatter\",\n    value: function getFormatter() {\n      return this.numberFormat;\n    }\n  }]);\n\n  return InputNumber;\n}();\n\nInputNumber.ɵfac = function InputNumber_Factory(t) {\n  return new (t || InputNumber)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nInputNumber.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InputNumber,\n  selectors: [[\"p-inputNumber\"]],\n  viewQuery: function InputNumber_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n  hostVars: 6,\n  hostBindings: function InputNumber_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused)(\"p-inputnumber-clearable\", ctx.showClear && ctx.buttonLayout != \"vertical\");\n    }\n  },\n  inputs: {\n    showButtons: \"showButtons\",\n    format: \"format\",\n    buttonLayout: \"buttonLayout\",\n    inputId: \"inputId\",\n    styleClass: \"styleClass\",\n    style: \"style\",\n    placeholder: \"placeholder\",\n    size: \"size\",\n    maxlength: \"maxlength\",\n    tabindex: \"tabindex\",\n    title: \"title\",\n    ariaLabel: \"ariaLabel\",\n    ariaRequired: \"ariaRequired\",\n    name: \"name\",\n    required: \"required\",\n    autocomplete: \"autocomplete\",\n    min: \"min\",\n    max: \"max\",\n    incrementButtonClass: \"incrementButtonClass\",\n    decrementButtonClass: \"decrementButtonClass\",\n    incrementButtonIcon: \"incrementButtonIcon\",\n    decrementButtonIcon: \"decrementButtonIcon\",\n    readonly: \"readonly\",\n    step: \"step\",\n    allowEmpty: \"allowEmpty\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    mode: \"mode\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\",\n    useGrouping: \"useGrouping\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    inputStyle: \"inputStyle\",\n    inputStyleClass: \"inputStyleClass\",\n    showClear: \"showClear\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    onInput: \"onInput\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onKeyDown: \"onKeyDown\",\n    onClear: \"onClear\"\n  },\n  features: [i0.ɵɵProvidersFeature([INPUTNUMBER_VALUE_ACCESSOR]), i0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 32,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"pInputText\", \"\", \"inputmode\", \"decimal\", 3, \"ngClass\", \"ngStyle\", \"value\", \"disabled\", \"readonly\", \"input\", \"keydown\", \"keypress\", \"paste\", \"click\", \"focus\", \"blur\"], [\"input\", \"\"], [\"class\", \"p-inputnumber-clear-icon pi pi-times\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"p-inputnumber-button-group\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", 3, \"ngClass\", \"class\", \"icon\", \"disabled\", \"mousedown\", \"mouseup\", \"mouseleave\", \"keydown\", \"keyup\", 4, \"ngIf\"], [1, \"p-inputnumber-clear-icon\", \"pi\", \"pi-times\", 3, \"click\"], [1, \"p-inputnumber-button-group\"], [\"type\", \"button\", \"pButton\", \"\", 3, \"ngClass\", \"icon\", \"disabled\", \"mousedown\", \"mouseup\", \"mouseleave\", \"keydown\", \"keyup\"]],\n  template: function InputNumber_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0)(1, \"input\", 1, 2);\n      i0.ɵɵlistener(\"input\", function InputNumber_Template_input_input_1_listener($event) {\n        return ctx.onUserInput($event);\n      })(\"keydown\", function InputNumber_Template_input_keydown_1_listener($event) {\n        return ctx.onInputKeyDown($event);\n      })(\"keypress\", function InputNumber_Template_input_keypress_1_listener($event) {\n        return ctx.onInputKeyPress($event);\n      })(\"paste\", function InputNumber_Template_input_paste_1_listener($event) {\n        return ctx.onPaste($event);\n      })(\"click\", function InputNumber_Template_input_click_1_listener() {\n        return ctx.onInputClick();\n      })(\"focus\", function InputNumber_Template_input_focus_1_listener($event) {\n        return ctx.onInputFocus($event);\n      })(\"blur\", function InputNumber_Template_input_blur_1_listener($event) {\n        return ctx.onInputBlur($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, InputNumber_i_3_Template, 1, 0, \"i\", 3);\n      i0.ɵɵtemplate(4, InputNumber_span_4_Template, 3, 12, \"span\", 4);\n      i0.ɵɵtemplate(5, InputNumber_button_5_Template, 1, 6, \"button\", 5);\n      i0.ɵɵtemplate(6, InputNumber_button_6_Template, 1, 6, \"button\", 5);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(28, _c3, ctx.showButtons && ctx.buttonLayout === \"stacked\", ctx.showButtons && ctx.buttonLayout === \"horizontal\", ctx.showButtons && ctx.buttonLayout === \"vertical\"))(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(ctx.inputStyleClass);\n      i0.ɵɵproperty(\"ngClass\", \"p-inputnumber-input\")(\"ngStyle\", ctx.inputStyle)(\"value\", ctx.formattedValue())(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly);\n      i0.ɵɵattribute(\"placeholder\", ctx.placeholder)(\"title\", ctx.title)(\"id\", ctx.inputId)(\"size\", ctx.size)(\"name\", ctx.name)(\"autocomplete\", ctx.autocomplete)(\"maxlength\", ctx.maxlength)(\"tabindex\", ctx.tabindex)(\"aria-label\", ctx.ariaLabel)(\"aria-required\", ctx.ariaRequired)(\"required\", ctx.required)(\"min\", ctx.min)(\"max\", ctx.max);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.buttonLayout != \"vertical\" && ctx.showClear && ctx.value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout === \"stacked\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout !== \"stacked\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout !== \"stacked\");\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgIf, i1.NgStyle, i2.InputText, i3.ButtonDirective],\n  styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputNumber, [{\n    type: Component,\n    args: [{\n      selector: 'p-inputNumber',\n      template: \"\\n        <span\\n            [ngClass]=\\\"{\\n                'p-inputnumber p-component': true,\\n                'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\\n                'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\\n            }\\\"\\n            [ngStyle]=\\\"style\\\"\\n            [class]=\\\"styleClass\\\"\\n        >\\n            <input\\n                #input\\n                [ngClass]=\\\"'p-inputnumber-input'\\\"\\n                [ngStyle]=\\\"inputStyle\\\"\\n                [class]=\\\"inputStyleClass\\\"\\n                pInputText\\n                [value]=\\\"formattedValue()\\\"\\n                [attr.placeholder]=\\\"placeholder\\\"\\n                [attr.title]=\\\"title\\\"\\n                [attr.id]=\\\"inputId\\\"\\n                [attr.size]=\\\"size\\\"\\n                [attr.name]=\\\"name\\\"\\n                [attr.autocomplete]=\\\"autocomplete\\\"\\n                [attr.maxlength]=\\\"maxlength\\\"\\n                [attr.tabindex]=\\\"tabindex\\\"\\n                [attr.aria-label]=\\\"ariaLabel\\\"\\n                [attr.aria-required]=\\\"ariaRequired\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [attr.required]=\\\"required\\\"\\n                [attr.min]=\\\"min\\\"\\n                [attr.max]=\\\"max\\\"\\n                [readonly]=\\\"readonly\\\"\\n                inputmode=\\\"decimal\\\"\\n                (input)=\\\"onUserInput($event)\\\"\\n                (keydown)=\\\"onInputKeyDown($event)\\\"\\n                (keypress)=\\\"onInputKeyPress($event)\\\"\\n                (paste)=\\\"onPaste($event)\\\"\\n                (click)=\\\"onInputClick()\\\"\\n                (focus)=\\\"onInputFocus($event)\\\"\\n                (blur)=\\\"onInputBlur($event)\\\"\\n            />\\n            <i *ngIf=\\\"buttonLayout != 'vertical' && showClear && value\\\" class=\\\"p-inputnumber-clear-icon pi pi-times\\\" (click)=\\\"clear()\\\"></i>\\n            <span class=\\\"p-inputnumber-button-group\\\" *ngIf=\\\"showButtons && buttonLayout === 'stacked'\\\">\\n                <button\\n                    type=\\\"button\\\"\\n                    pButton\\n                    [ngClass]=\\\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\\\"\\n                    [class]=\\\"incrementButtonClass\\\"\\n                    [icon]=\\\"incrementButtonIcon\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    (mousedown)=\\\"this.onUpButtonMouseDown($event)\\\"\\n                    (mouseup)=\\\"onUpButtonMouseUp()\\\"\\n                    (mouseleave)=\\\"onUpButtonMouseLeave()\\\"\\n                    (keydown)=\\\"onUpButtonKeyDown($event)\\\"\\n                    (keyup)=\\\"onUpButtonKeyUp()\\\"\\n                ></button>\\n                <button\\n                    type=\\\"button\\\"\\n                    pButton\\n                    [ngClass]=\\\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\\\"\\n                    [class]=\\\"decrementButtonClass\\\"\\n                    [icon]=\\\"decrementButtonIcon\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    (mousedown)=\\\"this.onDownButtonMouseDown($event)\\\"\\n                    (mouseup)=\\\"onDownButtonMouseUp()\\\"\\n                    (mouseleave)=\\\"onDownButtonMouseLeave()\\\"\\n                    (keydown)=\\\"onDownButtonKeyDown($event)\\\"\\n                    (keyup)=\\\"onDownButtonKeyUp()\\\"\\n                ></button>\\n            </span>\\n            <button\\n                type=\\\"button\\\"\\n                pButton\\n                [ngClass]=\\\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\\\"\\n                [class]=\\\"incrementButtonClass\\\"\\n                [icon]=\\\"incrementButtonIcon\\\"\\n                *ngIf=\\\"showButtons && buttonLayout !== 'stacked'\\\"\\n                [disabled]=\\\"disabled\\\"\\n                (mousedown)=\\\"this.onUpButtonMouseDown($event)\\\"\\n                (mouseup)=\\\"onUpButtonMouseUp()\\\"\\n                (mouseleave)=\\\"onUpButtonMouseLeave()\\\"\\n                (keydown)=\\\"onUpButtonKeyDown($event)\\\"\\n                (keyup)=\\\"onUpButtonKeyUp()\\\"\\n            ></button>\\n            <button\\n                type=\\\"button\\\"\\n                pButton\\n                [ngClass]=\\\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\\\"\\n                [class]=\\\"decrementButtonClass\\\"\\n                [icon]=\\\"decrementButtonIcon\\\"\\n                *ngIf=\\\"showButtons && buttonLayout !== 'stacked'\\\"\\n                [disabled]=\\\"disabled\\\"\\n                (mousedown)=\\\"this.onDownButtonMouseDown($event)\\\"\\n                (mouseup)=\\\"onDownButtonMouseUp()\\\"\\n                (mouseleave)=\\\"onDownButtonMouseLeave()\\\"\\n                (keydown)=\\\"onDownButtonKeyDown($event)\\\"\\n                (keyup)=\\\"onDownButtonKeyUp()\\\"\\n            ></button>\\n        </span>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [INPUTNUMBER_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused',\n        '[class.p-inputnumber-clearable]': 'showClear && buttonLayout != \"vertical\"'\n      },\n      styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    showButtons: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    buttonLayout: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaRequired: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    incrementButtonClass: [{\n      type: Input\n    }],\n    decrementButtonClass: [{\n      type: Input\n    }],\n    incrementButtonIcon: [{\n      type: Input\n    }],\n    decrementButtonIcon: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    allowEmpty: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    onInput: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\nvar InputNumberModule = /*#__PURE__*/_createClass(function InputNumberModule() {\n  _classCallCheck(this, InputNumberModule);\n});\n\nInputNumberModule.ɵfac = function InputNumberModule_Factory(t) {\n  return new (t || InputNumberModule)();\n};\n\nInputNumberModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: InputNumberModule\n});\nInputNumberModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, InputTextModule, ButtonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputNumberModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule, ButtonModule],\n      exports: [InputNumber],\n      declarations: [InputNumber]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { INPUTNUMBER_VALUE_ACCESSOR, InputNumber, InputNumberModule };","map":{"version":3,"names":["i1","CommonModule","i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","ViewChild","Output","NgModule","NG_VALUE_ACCESSOR","i3","ButtonModule","DomHandler","i2","InputTextModule","INPUTNUMBER_VALUE_ACCESSOR","provide","useExisting","InputNumber","multi","el","cd","showButtons","format","buttonLayout","incrementButtonIcon","decrementButtonIcon","readonly","step","allowEmpty","mode","useGrouping","showClear","onInput","onFocus","onBlur","onKeyDown","onClear","onModelChange","onModelTouched","groupChar","prefixChar","suffixChar","_disabled","disabled","focused","timer","clearTimer","simpleChange","props","some","p","updateConstructParser","constructParser","initialized","localeMatcher","style","currency","currencyDisplay","minimumFractionDigits","minFractionDigits","maximumFractionDigits","maxFractionDigits","numberFormat","Intl","NumberFormat","locale","getOptions","numerals","reverse","index","Map","map","d","i","_numeral","RegExp","join","_group","getGroupingExpression","_minusSign","getMinusSignExpression","_currency","getCurrencyExpression","_decimal","getDecimalExpression","_suffix","getSuffixExpression","_prefix","getPrefixExpression","_index","get","text","replace","formatter","Object","assign","trim","charAt","prefix","split","escapeRegExp","suffix","value","formattedValue","toString","filteredText","parsedValue","isNaN","event","interval","dir","setTimeout","repeat","spin","currentValue","parseValue","input","nativeElement","newValue","validateValue","maxlength","formatValue","length","updateInput","updateModel","handleOnInput","emit","focus","preventDefault","keyCode","isSpecialChar","target","lastValue","shiftKey","altKey","selectionStart","selectionEnd","inputValue","newValueStr","which","isNumeralChar","setAttribute","deleteChar","getDecimalCharIndexes","decimalCharIndex","decimalCharIndexWithoutPrefix","decimalLength","getDecimalLength","test","lastIndex","slice","setSelectionRange","insertedText","isDecimalMode","updateValue","deleteRange","code","char","String","fromCharCode","isDecimalSign","isMinusSign","insert","data","clipboardData","window","getData","filteredData","min","val","search","filteredVal","minusCharIndex","suffixCharIndex","currencyCharIndex","sign","minusCharIndexOnText","allowMinusSign","getCharIndexes","insertText","resolvedOptions","operation","charIndex","start","end","textSplit","valueLength","prefixLength","getSelection","initCursor","resetRegex","valueStr","insertedValueStr","isValueChanged","originalEvent","parsedCurrentValue","max","currentLength","concatValues","newLength","startValue","startValueStr","startExpr","sRegex","tExpr","tRegex","prevChar","nextChar","diff","isGroupChar","val1","val2","valueSplit","markForCheck","fn","clearInterval","ɵfac","ElementRef","ChangeDetectorRef","ɵcmp","NgClass","NgIf","NgStyle","InputText","ButtonDirective","type","args","selector","template","changeDetection","OnPush","providers","encapsulation","None","host","class","styles","inputId","styleClass","placeholder","size","tabindex","title","ariaLabel","ariaRequired","name","required","autocomplete","incrementButtonClass","decrementButtonClass","inputStyle","inputStyleClass","InputNumberModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/MSI/Desktop/pfe/yas/angular/node_modules/primeng/fesm2015/primeng-inputnumber.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { DomHandler } from 'primeng/dom';\nimport * as i2 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\n\nconst INPUTNUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputNumber),\n    multi: true\n};\nclass InputNumber {\n    constructor(el, cd) {\n        this.el = el;\n        this.cd = cd;\n        this.showButtons = false;\n        this.format = true;\n        this.buttonLayout = 'stacked';\n        this.incrementButtonIcon = 'pi pi-angle-up';\n        this.decrementButtonIcon = 'pi pi-angle-down';\n        this.readonly = false;\n        this.step = 1;\n        this.allowEmpty = true;\n        this.mode = 'decimal';\n        this.useGrouping = true;\n        this.showClear = false;\n        this.onInput = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onKeyDown = new EventEmitter();\n        this.onClear = new EventEmitter();\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.groupChar = '';\n        this.prefixChar = '';\n        this.suffixChar = '';\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(disabled) {\n        if (disabled)\n            this.focused = false;\n        this._disabled = disabled;\n        if (this.timer)\n            this.clearTimer();\n    }\n    ngOnChanges(simpleChange) {\n        const props = ['locale', 'localeMatcher', 'mode', 'currency', 'currencyDisplay', 'useGrouping', 'minFractionDigits', 'maxFractionDigits', 'prefix', 'suffix'];\n        if (props.some((p) => !!simpleChange[p])) {\n            this.updateConstructParser();\n        }\n    }\n    ngOnInit() {\n        this.constructParser();\n        this.initialized = true;\n    }\n    getOptions() {\n        return {\n            localeMatcher: this.localeMatcher,\n            style: this.mode,\n            currency: this.currency,\n            currencyDisplay: this.currencyDisplay,\n            useGrouping: this.useGrouping,\n            minimumFractionDigits: this.minFractionDigits,\n            maximumFractionDigits: this.maxFractionDigits\n        };\n    }\n    constructParser() {\n        this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());\n        const numerals = [...new Intl.NumberFormat(this.locale, { useGrouping: false }).format(9876543210)].reverse();\n        const index = new Map(numerals.map((d, i) => [d, i]));\n        this._numeral = new RegExp(`[${numerals.join('')}]`, 'g');\n        this._group = this.getGroupingExpression();\n        this._minusSign = this.getMinusSignExpression();\n        this._currency = this.getCurrencyExpression();\n        this._decimal = this.getDecimalExpression();\n        this._suffix = this.getSuffixExpression();\n        this._prefix = this.getPrefixExpression();\n        this._index = (d) => index.get(d);\n    }\n    updateConstructParser() {\n        if (this.initialized) {\n            this.constructParser();\n        }\n    }\n    escapeRegExp(text) {\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    }\n    getDecimalExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, Object.assign(Object.assign({}, this.getOptions()), { useGrouping: false }));\n        return new RegExp(`[${formatter.format(1.1).replace(this._currency, '').trim().replace(this._numeral, '')}]`, 'g');\n    }\n    getGroupingExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, { useGrouping: true });\n        this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0);\n        return new RegExp(`[${this.groupChar}]`, 'g');\n    }\n    getMinusSignExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, { useGrouping: false });\n        return new RegExp(`[${formatter.format(-1).trim().replace(this._numeral, '')}]`, 'g');\n    }\n    getCurrencyExpression() {\n        if (this.currency) {\n            const formatter = new Intl.NumberFormat(this.locale, { style: 'currency', currency: this.currency, currencyDisplay: this.currencyDisplay, minimumFractionDigits: 0, maximumFractionDigits: 0 });\n            return new RegExp(`[${formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._group, '')}]`, 'g');\n        }\n        return new RegExp(`[]`, 'g');\n    }\n    getPrefixExpression() {\n        if (this.prefix) {\n            this.prefixChar = this.prefix;\n        }\n        else {\n            const formatter = new Intl.NumberFormat(this.locale, { style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay });\n            this.prefixChar = formatter.format(1).split('1')[0];\n        }\n        return new RegExp(`${this.escapeRegExp(this.prefixChar || '')}`, 'g');\n    }\n    getSuffixExpression() {\n        if (this.suffix) {\n            this.suffixChar = this.suffix;\n        }\n        else {\n            const formatter = new Intl.NumberFormat(this.locale, { style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay, minimumFractionDigits: 0, maximumFractionDigits: 0 });\n            this.suffixChar = formatter.format(1).split('1')[1];\n        }\n        return new RegExp(`${this.escapeRegExp(this.suffixChar || '')}`, 'g');\n    }\n    formatValue(value) {\n        if (value != null) {\n            if (value === '-') {\n                // Minus sign\n                return value;\n            }\n            if (this.format) {\n                let formatter = new Intl.NumberFormat(this.locale, this.getOptions());\n                let formattedValue = formatter.format(value);\n                if (this.prefix) {\n                    formattedValue = this.prefix + formattedValue;\n                }\n                if (this.suffix) {\n                    formattedValue = formattedValue + this.suffix;\n                }\n                return formattedValue;\n            }\n            return value.toString();\n        }\n        return '';\n    }\n    parseValue(text) {\n        let filteredText = text\n            .replace(this._suffix, '')\n            .replace(this._prefix, '')\n            .trim()\n            .replace(/\\s/g, '')\n            .replace(this._currency, '')\n            .replace(this._group, '')\n            .replace(this._minusSign, '-')\n            .replace(this._decimal, '.')\n            .replace(this._numeral, this._index);\n        if (filteredText) {\n            if (filteredText === '-')\n                // Minus sign\n                return filteredText;\n            let parsedValue = +filteredText;\n            return isNaN(parsedValue) ? null : parsedValue;\n        }\n        return null;\n    }\n    repeat(event, interval, dir) {\n        if (this.readonly) {\n            return;\n        }\n        let i = interval || 500;\n        this.clearTimer();\n        this.timer = setTimeout(() => {\n            this.repeat(event, 40, dir);\n        }, i);\n        this.spin(event, dir);\n    }\n    spin(event, dir) {\n        let step = this.step * dir;\n        let currentValue = this.parseValue(this.input.nativeElement.value) || 0;\n        let newValue = this.validateValue(currentValue + step);\n        if (this.maxlength && this.maxlength < this.formatValue(newValue).length) {\n            return;\n        }\n        this.updateInput(newValue, null, 'spin', null);\n        this.updateModel(event, newValue);\n        this.handleOnInput(event, currentValue, newValue);\n    }\n    clear() {\n        this.value = null;\n        this.onModelChange(this.value);\n        this.onClear.emit();\n    }\n    onUpButtonMouseDown(event) {\n        this.input.nativeElement.focus();\n        this.repeat(event, null, 1);\n        event.preventDefault();\n    }\n    onUpButtonMouseUp() {\n        this.clearTimer();\n    }\n    onUpButtonMouseLeave() {\n        this.clearTimer();\n    }\n    onUpButtonKeyDown(event) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            this.repeat(event, null, 1);\n        }\n    }\n    onUpButtonKeyUp() {\n        this.clearTimer();\n    }\n    onDownButtonMouseDown(event) {\n        this.input.nativeElement.focus();\n        this.repeat(event, null, -1);\n        event.preventDefault();\n    }\n    onDownButtonMouseUp() {\n        this.clearTimer();\n    }\n    onDownButtonMouseLeave() {\n        this.clearTimer();\n    }\n    onDownButtonKeyUp() {\n        this.clearTimer();\n    }\n    onDownButtonKeyDown(event) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            this.repeat(event, null, -1);\n        }\n    }\n    onUserInput(event) {\n        if (this.readonly) {\n            return;\n        }\n        if (this.isSpecialChar) {\n            event.target.value = this.lastValue;\n        }\n        this.isSpecialChar = false;\n    }\n    onInputKeyDown(event) {\n        if (this.readonly) {\n            return;\n        }\n        this.lastValue = event.target.value;\n        if (event.shiftKey || event.altKey) {\n            this.isSpecialChar = true;\n            return;\n        }\n        let selectionStart = event.target.selectionStart;\n        let selectionEnd = event.target.selectionEnd;\n        let inputValue = event.target.value;\n        let newValueStr = null;\n        if (event.altKey) {\n            event.preventDefault();\n        }\n        switch (event.which) {\n            //up\n            case 38:\n                this.spin(event, 1);\n                event.preventDefault();\n                break;\n            //down\n            case 40:\n                this.spin(event, -1);\n                event.preventDefault();\n                break;\n            //left\n            case 37:\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart - 1))) {\n                    event.preventDefault();\n                }\n                break;\n            //right\n            case 39:\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart))) {\n                    event.preventDefault();\n                }\n                break;\n            //enter\n            case 13:\n                newValueStr = this.validateValue(this.parseValue(this.input.nativeElement.value));\n                this.input.nativeElement.value = this.formatValue(newValueStr);\n                this.input.nativeElement.setAttribute('aria-valuenow', newValueStr);\n                this.updateModel(event, newValueStr);\n                break;\n            //backspace\n            case 8: {\n                event.preventDefault();\n                if (selectionStart === selectionEnd) {\n                    const deleteChar = inputValue.charAt(selectionStart - 1);\n                    const { decimalCharIndex, decimalCharIndexWithoutPrefix } = this.getDecimalCharIndexes(inputValue);\n                    if (this.isNumeralChar(deleteChar)) {\n                        const decimalLength = this.getDecimalLength(inputValue);\n                        if (this._group.test(deleteChar)) {\n                            this._group.lastIndex = 0;\n                            newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1);\n                        }\n                        else if (this._decimal.test(deleteChar)) {\n                            this._decimal.lastIndex = 0;\n                            if (decimalLength) {\n                                this.input.nativeElement.setSelectionRange(selectionStart - 1, selectionStart - 1);\n                            }\n                            else {\n                                newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                            }\n                        }\n                        else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                            const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + insertedText + inputValue.slice(selectionStart);\n                        }\n                        else if (decimalCharIndexWithoutPrefix === 1) {\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n                        }\n                        else {\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                        }\n                    }\n                    this.updateValue(event, newValueStr, null, 'delete-single');\n                }\n                else {\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n                    this.updateValue(event, newValueStr, null, 'delete-range');\n                }\n                break;\n            }\n            // del\n            case 46:\n                event.preventDefault();\n                if (selectionStart === selectionEnd) {\n                    const deleteChar = inputValue.charAt(selectionStart);\n                    const { decimalCharIndex, decimalCharIndexWithoutPrefix } = this.getDecimalCharIndexes(inputValue);\n                    if (this.isNumeralChar(deleteChar)) {\n                        const decimalLength = this.getDecimalLength(inputValue);\n                        if (this._group.test(deleteChar)) {\n                            this._group.lastIndex = 0;\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2);\n                        }\n                        else if (this._decimal.test(deleteChar)) {\n                            this._decimal.lastIndex = 0;\n                            if (decimalLength) {\n                                this.input.nativeElement.setSelectionRange(selectionStart + 1, selectionStart + 1);\n                            }\n                            else {\n                                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n                            }\n                        }\n                        else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                            const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n                            newValueStr = inputValue.slice(0, selectionStart) + insertedText + inputValue.slice(selectionStart + 1);\n                        }\n                        else if (decimalCharIndexWithoutPrefix === 1) {\n                            newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n                        }\n                        else {\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n                        }\n                    }\n                    this.updateValue(event, newValueStr, null, 'delete-back-single');\n                }\n                else {\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n                    this.updateValue(event, newValueStr, null, 'delete-range');\n                }\n                break;\n            default:\n                break;\n        }\n        this.onKeyDown.emit(event);\n    }\n    onInputKeyPress(event) {\n        if (this.readonly) {\n            return;\n        }\n        let code = event.which || event.keyCode;\n        let char = String.fromCharCode(code);\n        const isDecimalSign = this.isDecimalSign(char);\n        const isMinusSign = this.isMinusSign(char);\n        if (code != 13) {\n            event.preventDefault();\n        }\n        if ((48 <= code && code <= 57) || isMinusSign || isDecimalSign) {\n            this.insert(event, char, { isDecimalSign, isMinusSign });\n        }\n    }\n    onPaste(event) {\n        if (!this.disabled && !this.readonly) {\n            event.preventDefault();\n            let data = (event.clipboardData || window['clipboardData']).getData('Text');\n            if (data) {\n                let filteredData = this.parseValue(data);\n                if (filteredData != null) {\n                    this.insert(event, filteredData.toString());\n                }\n            }\n        }\n    }\n    allowMinusSign() {\n        return this.min == null || this.min < 0;\n    }\n    isMinusSign(char) {\n        if (this._minusSign.test(char) || char === '-') {\n            this._minusSign.lastIndex = 0;\n            return true;\n        }\n        return false;\n    }\n    isDecimalSign(char) {\n        if (this._decimal.test(char)) {\n            this._decimal.lastIndex = 0;\n            return true;\n        }\n        return false;\n    }\n    isDecimalMode() {\n        return this.mode === 'decimal';\n    }\n    getDecimalCharIndexes(val) {\n        let decimalCharIndex = val.search(this._decimal);\n        this._decimal.lastIndex = 0;\n        const filteredVal = val.replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '');\n        const decimalCharIndexWithoutPrefix = filteredVal.search(this._decimal);\n        this._decimal.lastIndex = 0;\n        return { decimalCharIndex, decimalCharIndexWithoutPrefix };\n    }\n    getCharIndexes(val) {\n        const decimalCharIndex = val.search(this._decimal);\n        this._decimal.lastIndex = 0;\n        const minusCharIndex = val.search(this._minusSign);\n        this._minusSign.lastIndex = 0;\n        const suffixCharIndex = val.search(this._suffix);\n        this._suffix.lastIndex = 0;\n        const currencyCharIndex = val.search(this._currency);\n        this._currency.lastIndex = 0;\n        return { decimalCharIndex, minusCharIndex, suffixCharIndex, currencyCharIndex };\n    }\n    insert(event, text, sign = { isDecimalSign: false, isMinusSign: false }) {\n        const minusCharIndexOnText = text.search(this._minusSign);\n        this._minusSign.lastIndex = 0;\n        if (!this.allowMinusSign() && minusCharIndexOnText !== -1) {\n            return;\n        }\n        let selectionStart = this.input.nativeElement.selectionStart;\n        let selectionEnd = this.input.nativeElement.selectionEnd;\n        let inputValue = this.input.nativeElement.value.trim();\n        const { decimalCharIndex, minusCharIndex, suffixCharIndex, currencyCharIndex } = this.getCharIndexes(inputValue);\n        let newValueStr;\n        if (sign.isMinusSign) {\n            if (selectionStart === 0) {\n                newValueStr = inputValue;\n                if (minusCharIndex === -1 || selectionEnd !== 0) {\n                    newValueStr = this.insertText(inputValue, text, 0, selectionEnd);\n                }\n                this.updateValue(event, newValueStr, text, 'insert');\n            }\n        }\n        else if (sign.isDecimalSign) {\n            if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\n                this.updateValue(event, inputValue, text, 'insert');\n            }\n            else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n                this.updateValue(event, newValueStr, text, 'insert');\n            }\n            else if (decimalCharIndex === -1 && this.maxFractionDigits) {\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n                this.updateValue(event, newValueStr, text, 'insert');\n            }\n        }\n        else {\n            const maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits;\n            const operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert';\n            if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                if (selectionStart + text.length - (decimalCharIndex + 1) <= maxFractionDigits) {\n                    const charIndex = currencyCharIndex >= selectionStart ? currencyCharIndex - 1 : suffixCharIndex >= selectionStart ? suffixCharIndex : inputValue.length;\n                    newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length, charIndex) + inputValue.slice(charIndex);\n                    this.updateValue(event, newValueStr, text, operation);\n                }\n            }\n            else {\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n                this.updateValue(event, newValueStr, text, operation);\n            }\n        }\n    }\n    insertText(value, text, start, end) {\n        let textSplit = text === '.' ? text : text.split('.');\n        if (textSplit.length === 2) {\n            const decimalCharIndex = value.slice(start, end).search(this._decimal);\n            this._decimal.lastIndex = 0;\n            return decimalCharIndex > 0 ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : value || this.formatValue(text);\n        }\n        else if (end - start === value.length) {\n            return this.formatValue(text);\n        }\n        else if (start === 0) {\n            return text + value.slice(end);\n        }\n        else if (end === value.length) {\n            return value.slice(0, start) + text;\n        }\n        else {\n            return value.slice(0, start) + text + value.slice(end);\n        }\n    }\n    deleteRange(value, start, end) {\n        let newValueStr;\n        if (end - start === value.length)\n            newValueStr = '';\n        else if (start === 0)\n            newValueStr = value.slice(end);\n        else if (end === value.length)\n            newValueStr = value.slice(0, start);\n        else\n            newValueStr = value.slice(0, start) + value.slice(end);\n        return newValueStr;\n    }\n    initCursor() {\n        let selectionStart = this.input.nativeElement.selectionStart;\n        let inputValue = this.input.nativeElement.value;\n        let valueLength = inputValue.length;\n        let index = null;\n        // remove prefix\n        let prefixLength = (this.prefixChar || '').length;\n        inputValue = inputValue.replace(this._prefix, '');\n        selectionStart = selectionStart - prefixLength;\n        let char = inputValue.charAt(selectionStart);\n        if (this.isNumeralChar(char)) {\n            return selectionStart + prefixLength;\n        }\n        //left\n        let i = selectionStart - 1;\n        while (i >= 0) {\n            char = inputValue.charAt(i);\n            if (this.isNumeralChar(char)) {\n                index = i + prefixLength;\n                break;\n            }\n            else {\n                i--;\n            }\n        }\n        if (index !== null) {\n            this.input.nativeElement.setSelectionRange(index + 1, index + 1);\n        }\n        else {\n            i = selectionStart;\n            while (i < valueLength) {\n                char = inputValue.charAt(i);\n                if (this.isNumeralChar(char)) {\n                    index = i + prefixLength;\n                    break;\n                }\n                else {\n                    i++;\n                }\n            }\n            if (index !== null) {\n                this.input.nativeElement.setSelectionRange(index, index);\n            }\n        }\n        return index || 0;\n    }\n    onInputClick() {\n        const currentValue = this.input.nativeElement.value;\n        if (!this.readonly && currentValue !== DomHandler.getSelection()) {\n            this.initCursor();\n        }\n    }\n    isNumeralChar(char) {\n        if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\n            this.resetRegex();\n            return true;\n        }\n        return false;\n    }\n    resetRegex() {\n        this._numeral.lastIndex = 0;\n        this._decimal.lastIndex = 0;\n        this._group.lastIndex = 0;\n        this._minusSign.lastIndex = 0;\n    }\n    updateValue(event, valueStr, insertedValueStr, operation) {\n        let currentValue = this.input.nativeElement.value;\n        let newValue = null;\n        if (valueStr != null) {\n            newValue = this.parseValue(valueStr);\n            newValue = !newValue && !this.allowEmpty ? 0 : newValue;\n            this.updateInput(newValue, insertedValueStr, operation, valueStr);\n            this.handleOnInput(event, currentValue, newValue);\n        }\n    }\n    handleOnInput(event, currentValue, newValue) {\n        if (this.isValueChanged(currentValue, newValue)) {\n            this.onInput.emit({ originalEvent: event, value: newValue, formattedValue: currentValue });\n        }\n    }\n    isValueChanged(currentValue, newValue) {\n        if (newValue === null && currentValue !== null) {\n            return true;\n        }\n        if (newValue != null) {\n            let parsedCurrentValue = typeof currentValue === 'string' ? this.parseValue(currentValue) : currentValue;\n            return newValue !== parsedCurrentValue;\n        }\n        return false;\n    }\n    validateValue(value) {\n        if (value === '-' || value == null) {\n            return null;\n        }\n        if (this.min != null && value < this.min) {\n            return this.min;\n        }\n        if (this.max != null && value > this.max) {\n            return this.max;\n        }\n        return value;\n    }\n    updateInput(value, insertedValueStr, operation, valueStr) {\n        insertedValueStr = insertedValueStr || '';\n        let inputValue = this.input.nativeElement.value;\n        let newValue = this.formatValue(value);\n        let currentLength = inputValue.length;\n        if (newValue !== valueStr) {\n            newValue = this.concatValues(newValue, valueStr);\n        }\n        if (currentLength === 0) {\n            this.input.nativeElement.value = newValue;\n            this.input.nativeElement.setSelectionRange(0, 0);\n            const index = this.initCursor();\n            const selectionEnd = index + insertedValueStr.length;\n            this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n        }\n        else {\n            let selectionStart = this.input.nativeElement.selectionStart;\n            let selectionEnd = this.input.nativeElement.selectionEnd;\n            if (this.maxlength && this.maxlength < newValue.length) {\n                return;\n            }\n            this.input.nativeElement.value = newValue;\n            let newLength = newValue.length;\n            if (operation === 'range-insert') {\n                const startValue = this.parseValue((inputValue || '').slice(0, selectionStart));\n                const startValueStr = startValue !== null ? startValue.toString() : '';\n                const startExpr = startValueStr.split('').join(`(${this.groupChar})?`);\n                const sRegex = new RegExp(startExpr, 'g');\n                sRegex.test(newValue);\n                const tExpr = insertedValueStr.split('').join(`(${this.groupChar})?`);\n                const tRegex = new RegExp(tExpr, 'g');\n                tRegex.test(newValue.slice(sRegex.lastIndex));\n                selectionEnd = sRegex.lastIndex + tRegex.lastIndex;\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else if (newLength === currentLength) {\n                if (operation === 'insert' || operation === 'delete-back-single')\n                    this.input.nativeElement.setSelectionRange(selectionEnd + 1, selectionEnd + 1);\n                else if (operation === 'delete-single')\n                    this.input.nativeElement.setSelectionRange(selectionEnd - 1, selectionEnd - 1);\n                else if (operation === 'delete-range' || operation === 'spin')\n                    this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else if (operation === 'delete-back-single') {\n                let prevChar = inputValue.charAt(selectionEnd - 1);\n                let nextChar = inputValue.charAt(selectionEnd);\n                let diff = currentLength - newLength;\n                let isGroupChar = this._group.test(nextChar);\n                if (isGroupChar && diff === 1) {\n                    selectionEnd += 1;\n                }\n                else if (!isGroupChar && this.isNumeralChar(prevChar)) {\n                    selectionEnd += -1 * diff + 1;\n                }\n                this._group.lastIndex = 0;\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else if (inputValue === '-' && operation === 'insert') {\n                this.input.nativeElement.setSelectionRange(0, 0);\n                const index = this.initCursor();\n                const selectionEnd = index + insertedValueStr.length + 1;\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else {\n                selectionEnd = selectionEnd + (newLength - currentLength);\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n        }\n        this.input.nativeElement.setAttribute('aria-valuenow', value);\n    }\n    concatValues(val1, val2) {\n        if (val1 && val2) {\n            let decimalCharIndex = val2.search(this._decimal);\n            this._decimal.lastIndex = 0;\n            if (this.suffixChar) {\n                return val1.replace(this.suffixChar, '').split(this._decimal)[0] + val2.replace(this.suffixChar, '').slice(decimalCharIndex) + this.suffixChar;\n            }\n            else {\n                return decimalCharIndex !== -1 ? val1.split(this._decimal)[0] + val2.slice(decimalCharIndex) : val1;\n            }\n        }\n        return val1;\n    }\n    getDecimalLength(value) {\n        if (value) {\n            const valueSplit = value.split(this._decimal);\n            if (valueSplit.length === 2) {\n                return valueSplit[1].replace(this._suffix, '').trim().replace(/\\s/g, '').replace(this._currency, '').length;\n            }\n        }\n        return 0;\n    }\n    onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    }\n    onInputBlur(event) {\n        this.focused = false;\n        let newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\n        this.input.nativeElement.value = this.formatValue(newValue);\n        this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n        this.updateModel(event, newValue);\n        this.onBlur.emit(event);\n    }\n    formattedValue() {\n        const val = !this.value && !this.allowEmpty ? 0 : this.value;\n        return this.formatValue(val);\n    }\n    updateModel(event, value) {\n        if (this.value !== value) {\n            this.value = value;\n            this.onModelChange(value);\n        }\n        this.onModelTouched();\n    }\n    writeValue(value) {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    get filled() {\n        return this.value != null && this.value.toString().length > 0;\n    }\n    clearTimer() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n    getFormatter() {\n        return this.numberFormat;\n    }\n}\nInputNumber.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: InputNumber, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nInputNumber.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.7\", type: InputNumber, selector: \"p-inputNumber\", inputs: { showButtons: \"showButtons\", format: \"format\", buttonLayout: \"buttonLayout\", inputId: \"inputId\", styleClass: \"styleClass\", style: \"style\", placeholder: \"placeholder\", size: \"size\", maxlength: \"maxlength\", tabindex: \"tabindex\", title: \"title\", ariaLabel: \"ariaLabel\", ariaRequired: \"ariaRequired\", name: \"name\", required: \"required\", autocomplete: \"autocomplete\", min: \"min\", max: \"max\", incrementButtonClass: \"incrementButtonClass\", decrementButtonClass: \"decrementButtonClass\", incrementButtonIcon: \"incrementButtonIcon\", decrementButtonIcon: \"decrementButtonIcon\", readonly: \"readonly\", step: \"step\", allowEmpty: \"allowEmpty\", locale: \"locale\", localeMatcher: \"localeMatcher\", mode: \"mode\", currency: \"currency\", currencyDisplay: \"currencyDisplay\", useGrouping: \"useGrouping\", minFractionDigits: \"minFractionDigits\", maxFractionDigits: \"maxFractionDigits\", prefix: \"prefix\", suffix: \"suffix\", inputStyle: \"inputStyle\", inputStyleClass: \"inputStyleClass\", showClear: \"showClear\", disabled: \"disabled\" }, outputs: { onInput: \"onInput\", onFocus: \"onFocus\", onBlur: \"onBlur\", onKeyDown: \"onKeyDown\", onClear: \"onClear\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"focused\", \"class.p-inputnumber-clearable\": \"showClear && buttonLayout != \\\"vertical\\\"\" }, classAttribute: \"p-element p-inputwrapper\" }, providers: [INPUTNUMBER_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"input\", first: true, predicate: [\"input\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n        <span\n            [ngClass]=\"{\n                'p-inputnumber p-component': true,\n                'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\n                'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\n            }\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n        >\n            <input\n                #input\n                [ngClass]=\"'p-inputnumber-input'\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                pInputText\n                [value]=\"formattedValue()\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.title]=\"title\"\n                [attr.id]=\"inputId\"\n                [attr.size]=\"size\"\n                [attr.name]=\"name\"\n                [attr.autocomplete]=\"autocomplete\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-required]=\"ariaRequired\"\n                [disabled]=\"disabled\"\n                [attr.required]=\"required\"\n                [attr.min]=\"min\"\n                [attr.max]=\"max\"\n                [readonly]=\"readonly\"\n                inputmode=\"decimal\"\n                (input)=\"onUserInput($event)\"\n                (keydown)=\"onInputKeyDown($event)\"\n                (keypress)=\"onInputKeyPress($event)\"\n                (paste)=\"onPaste($event)\"\n                (click)=\"onInputClick()\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <i *ngIf=\"buttonLayout != 'vertical' && showClear && value\" class=\"p-inputnumber-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\">\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                    [class]=\"incrementButtonClass\"\n                    [icon]=\"incrementButtonIcon\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"this.onUpButtonMouseDown($event)\"\n                    (mouseup)=\"onUpButtonMouseUp()\"\n                    (mouseleave)=\"onUpButtonMouseLeave()\"\n                    (keydown)=\"onUpButtonKeyDown($event)\"\n                    (keyup)=\"onUpButtonKeyUp()\"\n                ></button>\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                    [class]=\"decrementButtonClass\"\n                    [icon]=\"decrementButtonIcon\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"this.onDownButtonMouseDown($event)\"\n                    (mouseup)=\"onDownButtonMouseUp()\"\n                    (mouseleave)=\"onDownButtonMouseLeave()\"\n                    (keydown)=\"onDownButtonKeyDown($event)\"\n                    (keyup)=\"onDownButtonKeyUp()\"\n                ></button>\n            </span>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                [class]=\"incrementButtonClass\"\n                [icon]=\"incrementButtonIcon\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"this.onUpButtonMouseDown($event)\"\n                (mouseup)=\"onUpButtonMouseUp()\"\n                (mouseleave)=\"onUpButtonMouseLeave()\"\n                (keydown)=\"onUpButtonKeyDown($event)\"\n                (keyup)=\"onUpButtonKeyUp()\"\n            ></button>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                [class]=\"decrementButtonClass\"\n                [icon]=\"decrementButtonIcon\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"this.onDownButtonMouseDown($event)\"\n                (mouseup)=\"onDownButtonMouseUp()\"\n                (mouseleave)=\"onDownButtonMouseLeave()\"\n                (keydown)=\"onDownButtonKeyDown($event)\"\n                (keyup)=\"onDownButtonKeyUp()\"\n            ></button>\n        </span>\n    `, isInline: true, styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.InputText, selector: \"[pInputText]\" }, { kind: \"directive\", type: i3.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: InputNumber, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-inputNumber', template: `\n        <span\n            [ngClass]=\"{\n                'p-inputnumber p-component': true,\n                'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\n                'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\n            }\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n        >\n            <input\n                #input\n                [ngClass]=\"'p-inputnumber-input'\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                pInputText\n                [value]=\"formattedValue()\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.title]=\"title\"\n                [attr.id]=\"inputId\"\n                [attr.size]=\"size\"\n                [attr.name]=\"name\"\n                [attr.autocomplete]=\"autocomplete\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-required]=\"ariaRequired\"\n                [disabled]=\"disabled\"\n                [attr.required]=\"required\"\n                [attr.min]=\"min\"\n                [attr.max]=\"max\"\n                [readonly]=\"readonly\"\n                inputmode=\"decimal\"\n                (input)=\"onUserInput($event)\"\n                (keydown)=\"onInputKeyDown($event)\"\n                (keypress)=\"onInputKeyPress($event)\"\n                (paste)=\"onPaste($event)\"\n                (click)=\"onInputClick()\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <i *ngIf=\"buttonLayout != 'vertical' && showClear && value\" class=\"p-inputnumber-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\">\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                    [class]=\"incrementButtonClass\"\n                    [icon]=\"incrementButtonIcon\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"this.onUpButtonMouseDown($event)\"\n                    (mouseup)=\"onUpButtonMouseUp()\"\n                    (mouseleave)=\"onUpButtonMouseLeave()\"\n                    (keydown)=\"onUpButtonKeyDown($event)\"\n                    (keyup)=\"onUpButtonKeyUp()\"\n                ></button>\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                    [class]=\"decrementButtonClass\"\n                    [icon]=\"decrementButtonIcon\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"this.onDownButtonMouseDown($event)\"\n                    (mouseup)=\"onDownButtonMouseUp()\"\n                    (mouseleave)=\"onDownButtonMouseLeave()\"\n                    (keydown)=\"onDownButtonKeyDown($event)\"\n                    (keyup)=\"onDownButtonKeyUp()\"\n                ></button>\n            </span>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                [class]=\"incrementButtonClass\"\n                [icon]=\"incrementButtonIcon\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"this.onUpButtonMouseDown($event)\"\n                (mouseup)=\"onUpButtonMouseUp()\"\n                (mouseleave)=\"onUpButtonMouseLeave()\"\n                (keydown)=\"onUpButtonKeyDown($event)\"\n                (keyup)=\"onUpButtonKeyUp()\"\n            ></button>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                [class]=\"decrementButtonClass\"\n                [icon]=\"decrementButtonIcon\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"this.onDownButtonMouseDown($event)\"\n                (mouseup)=\"onDownButtonMouseUp()\"\n                (mouseleave)=\"onDownButtonMouseLeave()\"\n                (keydown)=\"onDownButtonKeyDown($event)\"\n                (keyup)=\"onDownButtonKeyUp()\"\n            ></button>\n        </span>\n    `, changeDetection: ChangeDetectionStrategy.OnPush, providers: [INPUTNUMBER_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element p-inputwrapper',\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': 'focused',\n                        '[class.p-inputnumber-clearable]': 'showClear && buttonLayout != \"vertical\"'\n                    }, styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { showButtons: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], buttonLayout: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaRequired: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], autocomplete: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], incrementButtonClass: [{\n                type: Input\n            }], decrementButtonClass: [{\n                type: Input\n            }], incrementButtonIcon: [{\n                type: Input\n            }], decrementButtonIcon: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], allowEmpty: [{\n                type: Input\n            }], locale: [{\n                type: Input\n            }], localeMatcher: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], currency: [{\n                type: Input\n            }], currencyDisplay: [{\n                type: Input\n            }], useGrouping: [{\n                type: Input\n            }], minFractionDigits: [{\n                type: Input\n            }], maxFractionDigits: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], suffix: [{\n                type: Input\n            }], inputStyle: [{\n                type: Input\n            }], inputStyleClass: [{\n                type: Input\n            }], showClear: [{\n                type: Input\n            }], input: [{\n                type: ViewChild,\n                args: ['input']\n            }], onInput: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onKeyDown: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], disabled: [{\n                type: Input\n            }] } });\nclass InputNumberModule {\n}\nInputNumberModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: InputNumberModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInputNumberModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.7\", ngImport: i0, type: InputNumberModule, declarations: [InputNumber], imports: [CommonModule, InputTextModule, ButtonModule], exports: [InputNumber] });\nInputNumberModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: InputNumberModule, imports: [CommonModule, InputTextModule, ButtonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: InputNumberModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, InputTextModule, ButtonModule],\n                    exports: [InputNumber],\n                    declarations: [InputNumber]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INPUTNUMBER_VALUE_ACCESSOR, InputNumber, InputNumberModule };\n"],"mappings":";;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,SAAnC,EAA8CC,uBAA9C,EAAuEC,iBAAvE,EAA0FC,KAA1F,EAAiGC,SAAjG,EAA4GC,MAA5G,EAAoHC,QAApH,QAAoI,eAApI;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,mBAApB;AACA,SAASC,eAAT,QAAgC,mBAAhC;;;;;cA0vB8Ff,E;;IAAAA,EA2ClF,0B;IA3CkFA,EA2CuB;MA3CvBA,EA2CuB;MAAA,aA3CvBA,EA2CuB;MAAA,OA3CvBA,EA2CgC,4BAAT;IAAA,E;IA3CvBA,EA2CyC,e;;;;;;;;;;;;;;;;;;cA3CzCA,E;;IAAAA,EA4ClF,6C;IA5CkFA,EAoD1E;MApD0EA,EAoD1E;MAAA,aApD0EA,EAoD1E;MAAA,OApD0EA,EAoD7D,gDAAb;IAAA;MApD0EA,EAoD1E;MAAA,aApD0EA,EAoD1E;MAAA,OApD0EA,EAqD/D,wCADX;IAAA;MApD0EA,EAoD1E;MAAA,cApD0EA,EAoD1E;MAAA,OApD0EA,EAsD5D,4CAFd;IAAA;MApD0EA,EAoD1E;MAAA,cApD0EA,EAoD1E;MAAA,OApD0EA,EAuD/D,+CAHX;IAAA;MApD0EA,EAoD1E;MAAA,cApD0EA,EAoD1E;MAAA,OApD0EA,EAwDjE,uCAJT;IAAA,E;IApD0EA,EAyD7E,e;IAzD6EA,EA0D9E,+B;IA1D8EA,EAiE1E;MAjE0EA,EAiE1E;MAAA,cAjE0EA,EAiE1E;MAAA,OAjE0EA,EAiE7D,mDAAb;IAAA;MAjE0EA,EAiE1E;MAAA,cAjE0EA,EAiE1E;MAAA,OAjE0EA,EAkE/D,2CADX;IAAA;MAjE0EA,EAiE1E;MAAA,cAjE0EA,EAiE1E;MAAA,OAjE0EA,EAmE5D,8CAFd;IAAA;MAjE0EA,EAiE1E;MAAA,cAjE0EA,EAiE1E;MAAA,OAjE0EA,EAoE/D,iDAHX;IAAA;MAjE0EA,EAiE1E;MAAA,cAjE0EA,EAiE1E;MAAA,OAjE0EA,EAqEjE,yCAJT;IAAA,E;IAjE0EA,EAsE7E,iB;;;;iBAtE6EA,E;IAAAA,EAiD1E,a;IAjD0EA,EAiD1E,wC;IAjD0EA,EAgD1E,uBAhD0EA,EAgD1E,2F;IAhD0EA,EA8D1E,a;IA9D0EA,EA8D1E,wC;IA9D0EA,EA6D1E,uBA7D0EA,EA6D1E,2F;;;;;;eA7D0EA,E;;IAAAA,EAwElF,+B;IAxEkFA,EAgF9E;MAhF8EA,EAgF9E;MAAA,cAhF8EA,EAgF9E;MAAA,OAhF8EA,EAgFjE,iDAAb;IAAA;MAhF8EA,EAgF9E;MAAA,cAhF8EA,EAgF9E;MAAA,OAhF8EA,EAiFnE,yCADX;IAAA;MAhF8EA,EAgF9E;MAAA,cAhF8EA,EAgF9E;MAAA,OAhF8EA,EAkFhE,4CAFd;IAAA;MAhF8EA,EAgF9E;MAAA,cAhF8EA,EAgF9E;MAAA,OAhF8EA,EAmFnE,+CAHX;IAAA;MAhF8EA,EAgF9E;MAAA,cAhF8EA,EAgF9E;MAAA,OAhF8EA,EAoFrE,uCAJT;IAAA,E;IAhF8EA,EAqFjF,e;;;;iBArFiFA,E;IAAAA,EA4E9E,wC;IA5E8EA,EA2E9E,uBA3E8EA,EA2E9E,0F;;;;;;eA3E8EA,E;;IAAAA,EAsFlF,+B;IAtFkFA,EA8F9E;MA9F8EA,EA8F9E;MAAA,cA9F8EA,EA8F9E;MAAA,OA9F8EA,EA8FjE,mDAAb;IAAA;MA9F8EA,EA8F9E;MAAA,cA9F8EA,EA8F9E;MAAA,OA9F8EA,EA+FnE,2CADX;IAAA;MA9F8EA,EA8F9E;MAAA,cA9F8EA,EA8F9E;MAAA,OA9F8EA,EAgGhE,8CAFd;IAAA;MA9F8EA,EA8F9E;MAAA,cA9F8EA,EA8F9E;MAAA,OA9F8EA,EAiGnE,iDAHX;IAAA;MA9F8EA,EA8F9E;MAAA,cA9F8EA,EA8F9E;MAAA,OA9F8EA,EAkGrE,yCAJT;IAAA,E;IA9F8EA,EAmGjF,e;;;;iBAnGiFA,E;IAAAA,EA0F9E,wC;IA1F8EA,EAyF9E,uBAzF8EA,EAyF9E,0F;;;;;;;;;;;;;AAj1BhB,IAAMgB,0BAA0B,GAAG;EAC/BC,OAAO,EAAEP,iBADsB;EAE/BQ,WAAW,EAAEjB,UAAU,CAAC;IAAA,OAAMkB,WAAN;EAAA,CAAD,CAFQ;EAG/BC,KAAK,EAAE;AAHwB,CAAnC;;IAKMD,W;EACF,qBAAYE,EAAZ,EAAgBC,EAAhB,EAAoB;IAAA;;IAChB,KAAKD,EAAL,GAAUA,EAAV;IACA,KAAKC,EAAL,GAAUA,EAAV;IACA,KAAKC,WAAL,GAAmB,KAAnB;IACA,KAAKC,MAAL,GAAc,IAAd;IACA,KAAKC,YAAL,GAAoB,SAApB;IACA,KAAKC,mBAAL,GAA2B,gBAA3B;IACA,KAAKC,mBAAL,GAA2B,kBAA3B;IACA,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAKC,IAAL,GAAY,CAAZ;IACA,KAAKC,UAAL,GAAkB,IAAlB;IACA,KAAKC,IAAL,GAAY,SAAZ;IACA,KAAKC,WAAL,GAAmB,IAAnB;IACA,KAAKC,SAAL,GAAiB,KAAjB;IACA,KAAKC,OAAL,GAAe,IAAIhC,YAAJ,EAAf;IACA,KAAKiC,OAAL,GAAe,IAAIjC,YAAJ,EAAf;IACA,KAAKkC,MAAL,GAAc,IAAIlC,YAAJ,EAAd;IACA,KAAKmC,SAAL,GAAiB,IAAInC,YAAJ,EAAjB;IACA,KAAKoC,OAAL,GAAe,IAAIpC,YAAJ,EAAf;;IACA,KAAKqC,aAAL,GAAqB,YAAM,CAAG,CAA9B;;IACA,KAAKC,cAAL,GAAsB,YAAM,CAAG,CAA/B;;IACA,KAAKC,SAAL,GAAiB,EAAjB;IACA,KAAKC,UAAL,GAAkB,EAAlB;IACA,KAAKC,UAAL,GAAkB,EAAlB;EACH;;;;SACD,eAAe;MACX,OAAO,KAAKC,SAAZ;IACH,C;SACD,aAAaC,QAAb,EAAuB;MACnB,IAAIA,QAAJ,EACI,KAAKC,OAAL,GAAe,KAAf;MACJ,KAAKF,SAAL,GAAiBC,QAAjB;MACA,IAAI,KAAKE,KAAT,EACI,KAAKC,UAAL;IACP;;;WACD,qBAAYC,YAAZ,EAA0B;MACtB,IAAMC,KAAK,GAAG,CAAC,QAAD,EAAW,eAAX,EAA4B,MAA5B,EAAoC,UAApC,EAAgD,iBAAhD,EAAmE,aAAnE,EAAkF,mBAAlF,EAAuG,mBAAvG,EAA4H,QAA5H,EAAsI,QAAtI,CAAd;;MACA,IAAIA,KAAK,CAACC,IAAN,CAAW,UAACC,CAAD;QAAA,OAAO,CAAC,CAACH,YAAY,CAACG,CAAD,CAArB;MAAA,CAAX,CAAJ,EAA0C;QACtC,KAAKC,qBAAL;MACH;IACJ;;;WACD,oBAAW;MACP,KAAKC,eAAL;MACA,KAAKC,WAAL,GAAmB,IAAnB;IACH;;;WACD,sBAAa;MACT,OAAO;QACHC,aAAa,EAAE,KAAKA,aADjB;QAEHC,KAAK,EAAE,KAAK1B,IAFT;QAGH2B,QAAQ,EAAE,KAAKA,QAHZ;QAIHC,eAAe,EAAE,KAAKA,eAJnB;QAKH3B,WAAW,EAAE,KAAKA,WALf;QAMH4B,qBAAqB,EAAE,KAAKC,iBANzB;QAOHC,qBAAqB,EAAE,KAAKC;MAPzB,CAAP;IASH;;;WACD,2BAAkB;MACd,KAAKC,YAAL,GAAoB,IAAIC,IAAI,CAACC,YAAT,CAAsB,KAAKC,MAA3B,EAAmC,KAAKC,UAAL,EAAnC,CAApB;;MACA,IAAMC,QAAQ,GAAG,mBAAI,IAAIJ,IAAI,CAACC,YAAT,CAAsB,KAAKC,MAA3B,EAAmC;QAAEnC,WAAW,EAAE;MAAf,CAAnC,EAA2DR,MAA3D,CAAkE,UAAlE,CAAJ,EAAmF8C,OAAnF,EAAjB;;MACA,IAAMC,KAAK,GAAG,IAAIC,GAAJ,CAAQH,QAAQ,CAACI,GAAT,CAAa,UAACC,CAAD,EAAIC,CAAJ;QAAA,OAAU,CAACD,CAAD,EAAIC,CAAJ,CAAV;MAAA,CAAb,CAAR,CAAd;MACA,KAAKC,QAAL,GAAgB,IAAIC,MAAJ,YAAeR,QAAQ,CAACS,IAAT,CAAc,EAAd,CAAf,QAAqC,GAArC,CAAhB;MACA,KAAKC,MAAL,GAAc,KAAKC,qBAAL,EAAd;MACA,KAAKC,UAAL,GAAkB,KAAKC,sBAAL,EAAlB;MACA,KAAKC,SAAL,GAAiB,KAAKC,qBAAL,EAAjB;MACA,KAAKC,QAAL,GAAgB,KAAKC,oBAAL,EAAhB;MACA,KAAKC,OAAL,GAAe,KAAKC,mBAAL,EAAf;MACA,KAAKC,OAAL,GAAe,KAAKC,mBAAL,EAAf;;MACA,KAAKC,MAAL,GAAc,UAACjB,CAAD;QAAA,OAAOH,KAAK,CAACqB,GAAN,CAAUlB,CAAV,CAAP;MAAA,CAAd;IACH;;;WACD,iCAAwB;MACpB,IAAI,KAAKnB,WAAT,EAAsB;QAClB,KAAKD,eAAL;MACH;IACJ;;;WACD,sBAAauC,IAAb,EAAmB;MACf,OAAOA,IAAI,CAACC,OAAL,CAAa,0BAAb,EAAyC,MAAzC,CAAP;IACH;;;WACD,gCAAuB;MACnB,IAAMC,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAT,CAAsB,KAAKC,MAA3B,EAAmC6B,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK7B,UAAL,EAAlB,CAAd,EAAoD;QAAEpC,WAAW,EAAE;MAAf,CAApD,CAAnC,CAAlB;MACA,OAAO,IAAI6C,MAAJ,YAAekB,SAAS,CAACvE,MAAV,CAAiB,GAAjB,EAAsBsE,OAAtB,CAA8B,KAAKX,SAAnC,EAA8C,EAA9C,EAAkDe,IAAlD,GAAyDJ,OAAzD,CAAiE,KAAKlB,QAAtE,EAAgF,EAAhF,CAAf,QAAuG,GAAvG,CAAP;IACH;;;WACD,iCAAwB;MACpB,IAAMmB,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAT,CAAsB,KAAKC,MAA3B,EAAmC;QAAEnC,WAAW,EAAE;MAAf,CAAnC,CAAlB;MACA,KAAKS,SAAL,GAAiBsD,SAAS,CAACvE,MAAV,CAAiB,OAAjB,EAA0B0E,IAA1B,GAAiCJ,OAAjC,CAAyC,KAAKlB,QAA9C,EAAwD,EAAxD,EAA4DuB,MAA5D,CAAmE,CAAnE,CAAjB;MACA,OAAO,IAAItB,MAAJ,YAAe,KAAKpC,SAApB,QAAkC,GAAlC,CAAP;IACH;;;WACD,kCAAyB;MACrB,IAAMsD,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAT,CAAsB,KAAKC,MAA3B,EAAmC;QAAEnC,WAAW,EAAE;MAAf,CAAnC,CAAlB;MACA,OAAO,IAAI6C,MAAJ,YAAekB,SAAS,CAACvE,MAAV,CAAiB,CAAC,CAAlB,EAAqB0E,IAArB,GAA4BJ,OAA5B,CAAoC,KAAKlB,QAAzC,EAAmD,EAAnD,CAAf,QAA0E,GAA1E,CAAP;IACH;;;WACD,iCAAwB;MACpB,IAAI,KAAKlB,QAAT,EAAmB;QACf,IAAMqC,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAT,CAAsB,KAAKC,MAA3B,EAAmC;UAAEV,KAAK,EAAE,UAAT;UAAqBC,QAAQ,EAAE,KAAKA,QAApC;UAA8CC,eAAe,EAAE,KAAKA,eAApE;UAAqFC,qBAAqB,EAAE,CAA5G;UAA+GE,qBAAqB,EAAE;QAAtI,CAAnC,CAAlB;QACA,OAAO,IAAIe,MAAJ,YAAekB,SAAS,CAACvE,MAAV,CAAiB,CAAjB,EAAoBsE,OAApB,CAA4B,KAA5B,EAAmC,EAAnC,EAAuCA,OAAvC,CAA+C,KAAKlB,QAApD,EAA8D,EAA9D,EAAkEkB,OAAlE,CAA0E,KAAKf,MAA/E,EAAuF,EAAvF,CAAf,QAA8G,GAA9G,CAAP;MACH;;MACD,OAAO,IAAIF,MAAJ,OAAiB,GAAjB,CAAP;IACH;;;WACD,+BAAsB;MAClB,IAAI,KAAKuB,MAAT,EAAiB;QACb,KAAK1D,UAAL,GAAkB,KAAK0D,MAAvB;MACH,CAFD,MAGK;QACD,IAAML,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAT,CAAsB,KAAKC,MAA3B,EAAmC;UAAEV,KAAK,EAAE,KAAK1B,IAAd;UAAoB2B,QAAQ,EAAE,KAAKA,QAAnC;UAA6CC,eAAe,EAAE,KAAKA;QAAnE,CAAnC,CAAlB;QACA,KAAKjB,UAAL,GAAkBqD,SAAS,CAACvE,MAAV,CAAiB,CAAjB,EAAoB6E,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAlB;MACH;;MACD,OAAO,IAAIxB,MAAJ,WAAc,KAAKyB,YAAL,CAAkB,KAAK5D,UAAL,IAAmB,EAArC,CAAd,GAA0D,GAA1D,CAAP;IACH;;;WACD,+BAAsB;MAClB,IAAI,KAAK6D,MAAT,EAAiB;QACb,KAAK5D,UAAL,GAAkB,KAAK4D,MAAvB;MACH,CAFD,MAGK;QACD,IAAMR,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAT,CAAsB,KAAKC,MAA3B,EAAmC;UAAEV,KAAK,EAAE,KAAK1B,IAAd;UAAoB2B,QAAQ,EAAE,KAAKA,QAAnC;UAA6CC,eAAe,EAAE,KAAKA,eAAnE;UAAoFC,qBAAqB,EAAE,CAA3G;UAA8GE,qBAAqB,EAAE;QAArI,CAAnC,CAAlB;QACA,KAAKnB,UAAL,GAAkBoD,SAAS,CAACvE,MAAV,CAAiB,CAAjB,EAAoB6E,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAlB;MACH;;MACD,OAAO,IAAIxB,MAAJ,WAAc,KAAKyB,YAAL,CAAkB,KAAK3D,UAAL,IAAmB,EAArC,CAAd,GAA0D,GAA1D,CAAP;IACH;;;WACD,qBAAY6D,KAAZ,EAAmB;MACf,IAAIA,KAAK,IAAI,IAAb,EAAmB;QACf,IAAIA,KAAK,KAAK,GAAd,EAAmB;UACf;UACA,OAAOA,KAAP;QACH;;QACD,IAAI,KAAKhF,MAAT,EAAiB;UACb,IAAIuE,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAT,CAAsB,KAAKC,MAA3B,EAAmC,KAAKC,UAAL,EAAnC,CAAhB;UACA,IAAIqC,cAAc,GAAGV,SAAS,CAACvE,MAAV,CAAiBgF,KAAjB,CAArB;;UACA,IAAI,KAAKJ,MAAT,EAAiB;YACbK,cAAc,GAAG,KAAKL,MAAL,GAAcK,cAA/B;UACH;;UACD,IAAI,KAAKF,MAAT,EAAiB;YACbE,cAAc,GAAGA,cAAc,GAAG,KAAKF,MAAvC;UACH;;UACD,OAAOE,cAAP;QACH;;QACD,OAAOD,KAAK,CAACE,QAAN,EAAP;MACH;;MACD,OAAO,EAAP;IACH;;;WACD,oBAAWb,IAAX,EAAiB;MACb,IAAIc,YAAY,GAAGd,IAAI,CAClBC,OADc,CACN,KAAKP,OADC,EACQ,EADR,EAEdO,OAFc,CAEN,KAAKL,OAFC,EAEQ,EAFR,EAGdS,IAHc,GAIdJ,OAJc,CAIN,KAJM,EAIC,EAJD,EAKdA,OALc,CAKN,KAAKX,SALC,EAKU,EALV,EAMdW,OANc,CAMN,KAAKf,MANC,EAMO,EANP,EAOde,OAPc,CAON,KAAKb,UAPC,EAOW,GAPX,EAQda,OARc,CAQN,KAAKT,QARC,EAQS,GART,EASdS,OATc,CASN,KAAKlB,QATC,EASS,KAAKe,MATd,CAAnB;;MAUA,IAAIgB,YAAJ,EAAkB;QACd,IAAIA,YAAY,KAAK,GAArB,EACI;UACA,OAAOA,YAAP;QACJ,IAAIC,WAAW,GAAG,CAACD,YAAnB;QACA,OAAOE,KAAK,CAACD,WAAD,CAAL,GAAqB,IAArB,GAA4BA,WAAnC;MACH;;MACD,OAAO,IAAP;IACH;;;WACD,gBAAOE,KAAP,EAAcC,QAAd,EAAwBC,GAAxB,EAA6B;MAAA;;MACzB,IAAI,KAAKpF,QAAT,EAAmB;QACf;MACH;;MACD,IAAI+C,CAAC,GAAGoC,QAAQ,IAAI,GAApB;MACA,KAAK/D,UAAL;MACA,KAAKD,KAAL,GAAakE,UAAU,CAAC,YAAM;QAC1B,KAAI,CAACC,MAAL,CAAYJ,KAAZ,EAAmB,EAAnB,EAAuBE,GAAvB;MACH,CAFsB,EAEpBrC,CAFoB,CAAvB;MAGA,KAAKwC,IAAL,CAAUL,KAAV,EAAiBE,GAAjB;IACH;;;WACD,cAAKF,KAAL,EAAYE,GAAZ,EAAiB;MACb,IAAInF,IAAI,GAAG,KAAKA,IAAL,GAAYmF,GAAvB;MACA,IAAII,YAAY,GAAG,KAAKC,UAAL,CAAgB,KAAKC,KAAL,CAAWC,aAAX,CAAyBf,KAAzC,KAAmD,CAAtE;MACA,IAAIgB,QAAQ,GAAG,KAAKC,aAAL,CAAmBL,YAAY,GAAGvF,IAAlC,CAAf;;MACA,IAAI,KAAK6F,SAAL,IAAkB,KAAKA,SAAL,GAAiB,KAAKC,WAAL,CAAiBH,QAAjB,EAA2BI,MAAlE,EAA0E;QACtE;MACH;;MACD,KAAKC,WAAL,CAAiBL,QAAjB,EAA2B,IAA3B,EAAiC,MAAjC,EAAyC,IAAzC;MACA,KAAKM,WAAL,CAAiBhB,KAAjB,EAAwBU,QAAxB;MACA,KAAKO,aAAL,CAAmBjB,KAAnB,EAA0BM,YAA1B,EAAwCI,QAAxC;IACH;;;WACD,iBAAQ;MACJ,KAAKhB,KAAL,GAAa,IAAb;MACA,KAAKjE,aAAL,CAAmB,KAAKiE,KAAxB;MACA,KAAKlE,OAAL,CAAa0F,IAAb;IACH;;;WACD,6BAAoBlB,KAApB,EAA2B;MACvB,KAAKQ,KAAL,CAAWC,aAAX,CAAyBU,KAAzB;MACA,KAAKf,MAAL,CAAYJ,KAAZ,EAAmB,IAAnB,EAAyB,CAAzB;MACAA,KAAK,CAACoB,cAAN;IACH;;;WACD,6BAAoB;MAChB,KAAKlF,UAAL;IACH;;;WACD,gCAAuB;MACnB,KAAKA,UAAL;IACH;;;WACD,2BAAkB8D,KAAlB,EAAyB;MACrB,IAAIA,KAAK,CAACqB,OAAN,KAAkB,EAAlB,IAAwBrB,KAAK,CAACqB,OAAN,KAAkB,EAA9C,EAAkD;QAC9C,KAAKjB,MAAL,CAAYJ,KAAZ,EAAmB,IAAnB,EAAyB,CAAzB;MACH;IACJ;;;WACD,2BAAkB;MACd,KAAK9D,UAAL;IACH;;;WACD,+BAAsB8D,KAAtB,EAA6B;MACzB,KAAKQ,KAAL,CAAWC,aAAX,CAAyBU,KAAzB;MACA,KAAKf,MAAL,CAAYJ,KAAZ,EAAmB,IAAnB,EAAyB,CAAC,CAA1B;MACAA,KAAK,CAACoB,cAAN;IACH;;;WACD,+BAAsB;MAClB,KAAKlF,UAAL;IACH;;;WACD,kCAAyB;MACrB,KAAKA,UAAL;IACH;;;WACD,6BAAoB;MAChB,KAAKA,UAAL;IACH;;;WACD,6BAAoB8D,KAApB,EAA2B;MACvB,IAAIA,KAAK,CAACqB,OAAN,KAAkB,EAAlB,IAAwBrB,KAAK,CAACqB,OAAN,KAAkB,EAA9C,EAAkD;QAC9C,KAAKjB,MAAL,CAAYJ,KAAZ,EAAmB,IAAnB,EAAyB,CAAC,CAA1B;MACH;IACJ;;;WACD,qBAAYA,KAAZ,EAAmB;MACf,IAAI,KAAKlF,QAAT,EAAmB;QACf;MACH;;MACD,IAAI,KAAKwG,aAAT,EAAwB;QACpBtB,KAAK,CAACuB,MAAN,CAAa7B,KAAb,GAAqB,KAAK8B,SAA1B;MACH;;MACD,KAAKF,aAAL,GAAqB,KAArB;IACH;;;WACD,wBAAetB,KAAf,EAAsB;MAClB,IAAI,KAAKlF,QAAT,EAAmB;QACf;MACH;;MACD,KAAK0G,SAAL,GAAiBxB,KAAK,CAACuB,MAAN,CAAa7B,KAA9B;;MACA,IAAIM,KAAK,CAACyB,QAAN,IAAkBzB,KAAK,CAAC0B,MAA5B,EAAoC;QAChC,KAAKJ,aAAL,GAAqB,IAArB;QACA;MACH;;MACD,IAAIK,cAAc,GAAG3B,KAAK,CAACuB,MAAN,CAAaI,cAAlC;MACA,IAAIC,YAAY,GAAG5B,KAAK,CAACuB,MAAN,CAAaK,YAAhC;MACA,IAAIC,UAAU,GAAG7B,KAAK,CAACuB,MAAN,CAAa7B,KAA9B;MACA,IAAIoC,WAAW,GAAG,IAAlB;;MACA,IAAI9B,KAAK,CAAC0B,MAAV,EAAkB;QACd1B,KAAK,CAACoB,cAAN;MACH;;MACD,QAAQpB,KAAK,CAAC+B,KAAd;QACI;QACA,KAAK,EAAL;UACI,KAAK1B,IAAL,CAAUL,KAAV,EAAiB,CAAjB;UACAA,KAAK,CAACoB,cAAN;UACA;QACJ;;QACA,KAAK,EAAL;UACI,KAAKf,IAAL,CAAUL,KAAV,EAAiB,CAAC,CAAlB;UACAA,KAAK,CAACoB,cAAN;UACA;QACJ;;QACA,KAAK,EAAL;UACI,IAAI,CAAC,KAAKY,aAAL,CAAmBH,UAAU,CAACxC,MAAX,CAAkBsC,cAAc,GAAG,CAAnC,CAAnB,CAAL,EAAgE;YAC5D3B,KAAK,CAACoB,cAAN;UACH;;UACD;QACJ;;QACA,KAAK,EAAL;UACI,IAAI,CAAC,KAAKY,aAAL,CAAmBH,UAAU,CAACxC,MAAX,CAAkBsC,cAAlB,CAAnB,CAAL,EAA4D;YACxD3B,KAAK,CAACoB,cAAN;UACH;;UACD;QACJ;;QACA,KAAK,EAAL;UACIU,WAAW,GAAG,KAAKnB,aAAL,CAAmB,KAAKJ,UAAL,CAAgB,KAAKC,KAAL,CAAWC,aAAX,CAAyBf,KAAzC,CAAnB,CAAd;UACA,KAAKc,KAAL,CAAWC,aAAX,CAAyBf,KAAzB,GAAiC,KAAKmB,WAAL,CAAiBiB,WAAjB,CAAjC;UACA,KAAKtB,KAAL,CAAWC,aAAX,CAAyBwB,YAAzB,CAAsC,eAAtC,EAAuDH,WAAvD;UACA,KAAKd,WAAL,CAAiBhB,KAAjB,EAAwB8B,WAAxB;UACA;QACJ;;QACA,KAAK,CAAL;UAAQ;YACJ9B,KAAK,CAACoB,cAAN;;YACA,IAAIO,cAAc,KAAKC,YAAvB,EAAqC;cACjC,IAAMM,UAAU,GAAGL,UAAU,CAACxC,MAAX,CAAkBsC,cAAc,GAAG,CAAnC,CAAnB;;cACA,4BAA4D,KAAKQ,qBAAL,CAA2BN,UAA3B,CAA5D;cAAA,IAAQO,gBAAR,yBAAQA,gBAAR;cAAA,IAA0BC,6BAA1B,yBAA0BA,6BAA1B;;cACA,IAAI,KAAKL,aAAL,CAAmBE,UAAnB,CAAJ,EAAoC;gBAChC,IAAMI,aAAa,GAAG,KAAKC,gBAAL,CAAsBV,UAAtB,CAAtB;;gBACA,IAAI,KAAK5D,MAAL,CAAYuE,IAAZ,CAAiBN,UAAjB,CAAJ,EAAkC;kBAC9B,KAAKjE,MAAL,CAAYwE,SAAZ,GAAwB,CAAxB;kBACAX,WAAW,GAAGD,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoBf,cAAc,GAAG,CAArC,IAA0CE,UAAU,CAACa,KAAX,CAAiBf,cAAc,GAAG,CAAlC,CAAxD;gBACH,CAHD,MAIK,IAAI,KAAKpD,QAAL,CAAciE,IAAd,CAAmBN,UAAnB,CAAJ,EAAoC;kBACrC,KAAK3D,QAAL,CAAckE,SAAd,GAA0B,CAA1B;;kBACA,IAAIH,aAAJ,EAAmB;oBACf,KAAK9B,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2ChB,cAAc,GAAG,CAA5D,EAA+DA,cAAc,GAAG,CAAhF;kBACH,CAFD,MAGK;oBACDG,WAAW,GAAGD,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoBf,cAAc,GAAG,CAArC,IAA0CE,UAAU,CAACa,KAAX,CAAiBf,cAAjB,CAAxD;kBACH;gBACJ,CARI,MASA,IAAIS,gBAAgB,GAAG,CAAnB,IAAwBT,cAAc,GAAGS,gBAA7C,EAA+D;kBAChE,IAAMQ,YAAY,GAAG,KAAKC,aAAL,MAAwB,CAAC,KAAK9F,iBAAL,IAA0B,CAA3B,IAAgCuF,aAAxD,GAAwE,EAAxE,GAA6E,GAAlG;kBACAR,WAAW,GAAGD,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoBf,cAAc,GAAG,CAArC,IAA0CiB,YAA1C,GAAyDf,UAAU,CAACa,KAAX,CAAiBf,cAAjB,CAAvE;gBACH,CAHI,MAIA,IAAIU,6BAA6B,KAAK,CAAtC,EAAyC;kBAC1CP,WAAW,GAAGD,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoBf,cAAc,GAAG,CAArC,IAA0C,GAA1C,GAAgDE,UAAU,CAACa,KAAX,CAAiBf,cAAjB,CAA9D;kBACAG,WAAW,GAAG,KAAKvB,UAAL,CAAgBuB,WAAhB,IAA+B,CAA/B,GAAmCA,WAAnC,GAAiD,EAA/D;gBACH,CAHI,MAIA;kBACDA,WAAW,GAAGD,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoBf,cAAc,GAAG,CAArC,IAA0CE,UAAU,CAACa,KAAX,CAAiBf,cAAjB,CAAxD;gBACH;cACJ;;cACD,KAAKmB,WAAL,CAAiB9C,KAAjB,EAAwB8B,WAAxB,EAAqC,IAArC,EAA2C,eAA3C;YACH,CA/BD,MAgCK;cACDA,WAAW,GAAG,KAAKiB,WAAL,CAAiBlB,UAAjB,EAA6BF,cAA7B,EAA6CC,YAA7C,CAAd;cACA,KAAKkB,WAAL,CAAiB9C,KAAjB,EAAwB8B,WAAxB,EAAqC,IAArC,EAA2C,cAA3C;YACH;;YACD;UACH;QACD;;QACA,KAAK,EAAL;UACI9B,KAAK,CAACoB,cAAN;;UACA,IAAIO,cAAc,KAAKC,YAAvB,EAAqC;YACjC,IAAMM,WAAU,GAAGL,UAAU,CAACxC,MAAX,CAAkBsC,cAAlB,CAAnB;;YACA,6BAA4D,KAAKQ,qBAAL,CAA2BN,UAA3B,CAA5D;YAAA,IAAQO,iBAAR,0BAAQA,gBAAR;YAAA,IAA0BC,8BAA1B,0BAA0BA,6BAA1B;;YACA,IAAI,KAAKL,aAAL,CAAmBE,WAAnB,CAAJ,EAAoC;cAChC,IAAMI,cAAa,GAAG,KAAKC,gBAAL,CAAsBV,UAAtB,CAAtB;;cACA,IAAI,KAAK5D,MAAL,CAAYuE,IAAZ,CAAiBN,WAAjB,CAAJ,EAAkC;gBAC9B,KAAKjE,MAAL,CAAYwE,SAAZ,GAAwB,CAAxB;gBACAX,WAAW,GAAGD,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoBf,cAApB,IAAsCE,UAAU,CAACa,KAAX,CAAiBf,cAAc,GAAG,CAAlC,CAApD;cACH,CAHD,MAIK,IAAI,KAAKpD,QAAL,CAAciE,IAAd,CAAmBN,WAAnB,CAAJ,EAAoC;gBACrC,KAAK3D,QAAL,CAAckE,SAAd,GAA0B,CAA1B;;gBACA,IAAIH,cAAJ,EAAmB;kBACf,KAAK9B,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2ChB,cAAc,GAAG,CAA5D,EAA+DA,cAAc,GAAG,CAAhF;gBACH,CAFD,MAGK;kBACDG,WAAW,GAAGD,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoBf,cAApB,IAAsCE,UAAU,CAACa,KAAX,CAAiBf,cAAc,GAAG,CAAlC,CAApD;gBACH;cACJ,CARI,MASA,IAAIS,iBAAgB,GAAG,CAAnB,IAAwBT,cAAc,GAAGS,iBAA7C,EAA+D;gBAChE,IAAMQ,aAAY,GAAG,KAAKC,aAAL,MAAwB,CAAC,KAAK9F,iBAAL,IAA0B,CAA3B,IAAgCuF,cAAxD,GAAwE,EAAxE,GAA6E,GAAlG;;gBACAR,WAAW,GAAGD,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoBf,cAApB,IAAsCiB,aAAtC,GAAqDf,UAAU,CAACa,KAAX,CAAiBf,cAAc,GAAG,CAAlC,CAAnE;cACH,CAHI,MAIA,IAAIU,8BAA6B,KAAK,CAAtC,EAAyC;gBAC1CP,WAAW,GAAGD,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoBf,cAApB,IAAsC,GAAtC,GAA4CE,UAAU,CAACa,KAAX,CAAiBf,cAAc,GAAG,CAAlC,CAA1D;gBACAG,WAAW,GAAG,KAAKvB,UAAL,CAAgBuB,WAAhB,IAA+B,CAA/B,GAAmCA,WAAnC,GAAiD,EAA/D;cACH,CAHI,MAIA;gBACDA,WAAW,GAAGD,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoBf,cAApB,IAAsCE,UAAU,CAACa,KAAX,CAAiBf,cAAc,GAAG,CAAlC,CAApD;cACH;YACJ;;YACD,KAAKmB,WAAL,CAAiB9C,KAAjB,EAAwB8B,WAAxB,EAAqC,IAArC,EAA2C,oBAA3C;UACH,CA/BD,MAgCK;YACDA,WAAW,GAAG,KAAKiB,WAAL,CAAiBlB,UAAjB,EAA6BF,cAA7B,EAA6CC,YAA7C,CAAd;YACA,KAAKkB,WAAL,CAAiB9C,KAAjB,EAAwB8B,WAAxB,EAAqC,IAArC,EAA2C,cAA3C;UACH;;UACD;;QACJ;UACI;MAhHR;;MAkHA,KAAKvG,SAAL,CAAe2F,IAAf,CAAoBlB,KAApB;IACH;;;WACD,yBAAgBA,KAAhB,EAAuB;MACnB,IAAI,KAAKlF,QAAT,EAAmB;QACf;MACH;;MACD,IAAIkI,IAAI,GAAGhD,KAAK,CAAC+B,KAAN,IAAe/B,KAAK,CAACqB,OAAhC;MACA,IAAI4B,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBH,IAApB,CAAX;MACA,IAAMI,aAAa,GAAG,KAAKA,aAAL,CAAmBH,IAAnB,CAAtB;MACA,IAAMI,WAAW,GAAG,KAAKA,WAAL,CAAiBJ,IAAjB,CAApB;;MACA,IAAID,IAAI,IAAI,EAAZ,EAAgB;QACZhD,KAAK,CAACoB,cAAN;MACH;;MACD,IAAK,MAAM4B,IAAN,IAAcA,IAAI,IAAI,EAAvB,IAA8BK,WAA9B,IAA6CD,aAAjD,EAAgE;QAC5D,KAAKE,MAAL,CAAYtD,KAAZ,EAAmBiD,IAAnB,EAAyB;UAAEG,aAAa,EAAbA,aAAF;UAAiBC,WAAW,EAAXA;QAAjB,CAAzB;MACH;IACJ;;;WACD,iBAAQrD,KAAR,EAAe;MACX,IAAI,CAAC,KAAKjE,QAAN,IAAkB,CAAC,KAAKjB,QAA5B,EAAsC;QAClCkF,KAAK,CAACoB,cAAN;QACA,IAAImC,IAAI,GAAG,CAACvD,KAAK,CAACwD,aAAN,IAAuBC,MAAM,CAAC,eAAD,CAA9B,EAAiDC,OAAjD,CAAyD,MAAzD,CAAX;;QACA,IAAIH,IAAJ,EAAU;UACN,IAAII,YAAY,GAAG,KAAKpD,UAAL,CAAgBgD,IAAhB,CAAnB;;UACA,IAAII,YAAY,IAAI,IAApB,EAA0B;YACtB,KAAKL,MAAL,CAAYtD,KAAZ,EAAmB2D,YAAY,CAAC/D,QAAb,EAAnB;UACH;QACJ;MACJ;IACJ;;;WACD,0BAAiB;MACb,OAAO,KAAKgE,GAAL,IAAY,IAAZ,IAAoB,KAAKA,GAAL,GAAW,CAAtC;IACH;;;WACD,qBAAYX,IAAZ,EAAkB;MACd,IAAI,KAAK9E,UAAL,CAAgBqE,IAAhB,CAAqBS,IAArB,KAA8BA,IAAI,KAAK,GAA3C,EAAgD;QAC5C,KAAK9E,UAAL,CAAgBsE,SAAhB,GAA4B,CAA5B;QACA,OAAO,IAAP;MACH;;MACD,OAAO,KAAP;IACH;;;WACD,uBAAcQ,IAAd,EAAoB;MAChB,IAAI,KAAK1E,QAAL,CAAciE,IAAd,CAAmBS,IAAnB,CAAJ,EAA8B;QAC1B,KAAK1E,QAAL,CAAckE,SAAd,GAA0B,CAA1B;QACA,OAAO,IAAP;MACH;;MACD,OAAO,KAAP;IACH;;;WACD,yBAAgB;MACZ,OAAO,KAAKxH,IAAL,KAAc,SAArB;IACH;;;WACD,+BAAsB4I,GAAtB,EAA2B;MACvB,IAAIzB,gBAAgB,GAAGyB,GAAG,CAACC,MAAJ,CAAW,KAAKvF,QAAhB,CAAvB;MACA,KAAKA,QAAL,CAAckE,SAAd,GAA0B,CAA1B;MACA,IAAMsB,WAAW,GAAGF,GAAG,CAAC7E,OAAJ,CAAY,KAAKL,OAAjB,EAA0B,EAA1B,EAA8BS,IAA9B,GAAqCJ,OAArC,CAA6C,KAA7C,EAAoD,EAApD,EAAwDA,OAAxD,CAAgE,KAAKX,SAArE,EAAgF,EAAhF,CAApB;MACA,IAAMgE,6BAA6B,GAAG0B,WAAW,CAACD,MAAZ,CAAmB,KAAKvF,QAAxB,CAAtC;MACA,KAAKA,QAAL,CAAckE,SAAd,GAA0B,CAA1B;MACA,OAAO;QAAEL,gBAAgB,EAAhBA,gBAAF;QAAoBC,6BAA6B,EAA7BA;MAApB,CAAP;IACH;;;WACD,wBAAewB,GAAf,EAAoB;MAChB,IAAMzB,gBAAgB,GAAGyB,GAAG,CAACC,MAAJ,CAAW,KAAKvF,QAAhB,CAAzB;MACA,KAAKA,QAAL,CAAckE,SAAd,GAA0B,CAA1B;MACA,IAAMuB,cAAc,GAAGH,GAAG,CAACC,MAAJ,CAAW,KAAK3F,UAAhB,CAAvB;MACA,KAAKA,UAAL,CAAgBsE,SAAhB,GAA4B,CAA5B;MACA,IAAMwB,eAAe,GAAGJ,GAAG,CAACC,MAAJ,CAAW,KAAKrF,OAAhB,CAAxB;MACA,KAAKA,OAAL,CAAagE,SAAb,GAAyB,CAAzB;MACA,IAAMyB,iBAAiB,GAAGL,GAAG,CAACC,MAAJ,CAAW,KAAKzF,SAAhB,CAA1B;MACA,KAAKA,SAAL,CAAeoE,SAAf,GAA2B,CAA3B;MACA,OAAO;QAAEL,gBAAgB,EAAhBA,gBAAF;QAAoB4B,cAAc,EAAdA,cAApB;QAAoCC,eAAe,EAAfA,eAApC;QAAqDC,iBAAiB,EAAjBA;MAArD,CAAP;IACH;;;WACD,gBAAOlE,KAAP,EAAcjB,IAAd,EAAyE;MAAA,IAArDoF,IAAqD,uEAA9C;QAAEf,aAAa,EAAE,KAAjB;QAAwBC,WAAW,EAAE;MAArC,CAA8C;MACrE,IAAMe,oBAAoB,GAAGrF,IAAI,CAAC+E,MAAL,CAAY,KAAK3F,UAAjB,CAA7B;MACA,KAAKA,UAAL,CAAgBsE,SAAhB,GAA4B,CAA5B;;MACA,IAAI,CAAC,KAAK4B,cAAL,EAAD,IAA0BD,oBAAoB,KAAK,CAAC,CAAxD,EAA2D;QACvD;MACH;;MACD,IAAIzC,cAAc,GAAG,KAAKnB,KAAL,CAAWC,aAAX,CAAyBkB,cAA9C;MACA,IAAIC,YAAY,GAAG,KAAKpB,KAAL,CAAWC,aAAX,CAAyBmB,YAA5C;MACA,IAAIC,UAAU,GAAG,KAAKrB,KAAL,CAAWC,aAAX,CAAyBf,KAAzB,CAA+BN,IAA/B,EAAjB;;MACA,2BAAiF,KAAKkF,cAAL,CAAoBzC,UAApB,CAAjF;MAAA,IAAQO,gBAAR,wBAAQA,gBAAR;MAAA,IAA0B4B,cAA1B,wBAA0BA,cAA1B;MAAA,IAA0CC,eAA1C,wBAA0CA,eAA1C;MAAA,IAA2DC,iBAA3D,wBAA2DA,iBAA3D;;MACA,IAAIpC,WAAJ;;MACA,IAAIqC,IAAI,CAACd,WAAT,EAAsB;QAClB,IAAI1B,cAAc,KAAK,CAAvB,EAA0B;UACtBG,WAAW,GAAGD,UAAd;;UACA,IAAImC,cAAc,KAAK,CAAC,CAApB,IAAyBpC,YAAY,KAAK,CAA9C,EAAiD;YAC7CE,WAAW,GAAG,KAAKyC,UAAL,CAAgB1C,UAAhB,EAA4B9C,IAA5B,EAAkC,CAAlC,EAAqC6C,YAArC,CAAd;UACH;;UACD,KAAKkB,WAAL,CAAiB9C,KAAjB,EAAwB8B,WAAxB,EAAqC/C,IAArC,EAA2C,QAA3C;QACH;MACJ,CARD,MASK,IAAIoF,IAAI,CAACf,aAAT,EAAwB;QACzB,IAAIhB,gBAAgB,GAAG,CAAnB,IAAwBT,cAAc,KAAKS,gBAA/C,EAAiE;UAC7D,KAAKU,WAAL,CAAiB9C,KAAjB,EAAwB6B,UAAxB,EAAoC9C,IAApC,EAA0C,QAA1C;QACH,CAFD,MAGK,IAAIqD,gBAAgB,GAAGT,cAAnB,IAAqCS,gBAAgB,GAAGR,YAA5D,EAA0E;UAC3EE,WAAW,GAAG,KAAKyC,UAAL,CAAgB1C,UAAhB,EAA4B9C,IAA5B,EAAkC4C,cAAlC,EAAkDC,YAAlD,CAAd;UACA,KAAKkB,WAAL,CAAiB9C,KAAjB,EAAwB8B,WAAxB,EAAqC/C,IAArC,EAA2C,QAA3C;QACH,CAHI,MAIA,IAAIqD,gBAAgB,KAAK,CAAC,CAAtB,IAA2B,KAAKnF,iBAApC,EAAuD;UACxD6E,WAAW,GAAG,KAAKyC,UAAL,CAAgB1C,UAAhB,EAA4B9C,IAA5B,EAAkC4C,cAAlC,EAAkDC,YAAlD,CAAd;UACA,KAAKkB,WAAL,CAAiB9C,KAAjB,EAAwB8B,WAAxB,EAAqC/C,IAArC,EAA2C,QAA3C;QACH;MACJ,CAZI,MAaA;QACD,IAAM9B,iBAAiB,GAAG,KAAKC,YAAL,CAAkBsH,eAAlB,GAAoCxH,qBAA9D;QACA,IAAMyH,SAAS,GAAG9C,cAAc,KAAKC,YAAnB,GAAkC,cAAlC,GAAmD,QAArE;;QACA,IAAIQ,gBAAgB,GAAG,CAAnB,IAAwBT,cAAc,GAAGS,gBAA7C,EAA+D;UAC3D,IAAIT,cAAc,GAAG5C,IAAI,CAAC+B,MAAtB,IAAgCsB,gBAAgB,GAAG,CAAnD,KAAyDnF,iBAA7D,EAAgF;YAC5E,IAAMyH,SAAS,GAAGR,iBAAiB,IAAIvC,cAArB,GAAsCuC,iBAAiB,GAAG,CAA1D,GAA8DD,eAAe,IAAItC,cAAnB,GAAoCsC,eAApC,GAAsDpC,UAAU,CAACf,MAAjJ;YACAgB,WAAW,GAAGD,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoBf,cAApB,IAAsC5C,IAAtC,GAA6C8C,UAAU,CAACa,KAAX,CAAiBf,cAAc,GAAG5C,IAAI,CAAC+B,MAAvC,EAA+C4D,SAA/C,CAA7C,GAAyG7C,UAAU,CAACa,KAAX,CAAiBgC,SAAjB,CAAvH;YACA,KAAK5B,WAAL,CAAiB9C,KAAjB,EAAwB8B,WAAxB,EAAqC/C,IAArC,EAA2C0F,SAA3C;UACH;QACJ,CAND,MAOK;UACD3C,WAAW,GAAG,KAAKyC,UAAL,CAAgB1C,UAAhB,EAA4B9C,IAA5B,EAAkC4C,cAAlC,EAAkDC,YAAlD,CAAd;UACA,KAAKkB,WAAL,CAAiB9C,KAAjB,EAAwB8B,WAAxB,EAAqC/C,IAArC,EAA2C0F,SAA3C;QACH;MACJ;IACJ;;;WACD,oBAAW/E,KAAX,EAAkBX,IAAlB,EAAwB4F,KAAxB,EAA+BC,GAA/B,EAAoC;MAChC,IAAIC,SAAS,GAAG9F,IAAI,KAAK,GAAT,GAAeA,IAAf,GAAsBA,IAAI,CAACQ,KAAL,CAAW,GAAX,CAAtC;;MACA,IAAIsF,SAAS,CAAC/D,MAAV,KAAqB,CAAzB,EAA4B;QACxB,IAAMsB,gBAAgB,GAAG1C,KAAK,CAACgD,KAAN,CAAYiC,KAAZ,EAAmBC,GAAnB,EAAwBd,MAAxB,CAA+B,KAAKvF,QAApC,CAAzB;QACA,KAAKA,QAAL,CAAckE,SAAd,GAA0B,CAA1B;QACA,OAAOL,gBAAgB,GAAG,CAAnB,GAAuB1C,KAAK,CAACgD,KAAN,CAAY,CAAZ,EAAeiC,KAAf,IAAwB,KAAK9D,WAAL,CAAiB9B,IAAjB,CAAxB,GAAiDW,KAAK,CAACgD,KAAN,CAAYkC,GAAZ,CAAxE,GAA2FlF,KAAK,IAAI,KAAKmB,WAAL,CAAiB9B,IAAjB,CAA3G;MACH,CAJD,MAKK,IAAI6F,GAAG,GAAGD,KAAN,KAAgBjF,KAAK,CAACoB,MAA1B,EAAkC;QACnC,OAAO,KAAKD,WAAL,CAAiB9B,IAAjB,CAAP;MACH,CAFI,MAGA,IAAI4F,KAAK,KAAK,CAAd,EAAiB;QAClB,OAAO5F,IAAI,GAAGW,KAAK,CAACgD,KAAN,CAAYkC,GAAZ,CAAd;MACH,CAFI,MAGA,IAAIA,GAAG,KAAKlF,KAAK,CAACoB,MAAlB,EAA0B;QAC3B,OAAOpB,KAAK,CAACgD,KAAN,CAAY,CAAZ,EAAeiC,KAAf,IAAwB5F,IAA/B;MACH,CAFI,MAGA;QACD,OAAOW,KAAK,CAACgD,KAAN,CAAY,CAAZ,EAAeiC,KAAf,IAAwB5F,IAAxB,GAA+BW,KAAK,CAACgD,KAAN,CAAYkC,GAAZ,CAAtC;MACH;IACJ;;;WACD,qBAAYlF,KAAZ,EAAmBiF,KAAnB,EAA0BC,GAA1B,EAA+B;MAC3B,IAAI9C,WAAJ;MACA,IAAI8C,GAAG,GAAGD,KAAN,KAAgBjF,KAAK,CAACoB,MAA1B,EACIgB,WAAW,GAAG,EAAd,CADJ,KAEK,IAAI6C,KAAK,KAAK,CAAd,EACD7C,WAAW,GAAGpC,KAAK,CAACgD,KAAN,CAAYkC,GAAZ,CAAd,CADC,KAEA,IAAIA,GAAG,KAAKlF,KAAK,CAACoB,MAAlB,EACDgB,WAAW,GAAGpC,KAAK,CAACgD,KAAN,CAAY,CAAZ,EAAeiC,KAAf,CAAd,CADC,KAGD7C,WAAW,GAAGpC,KAAK,CAACgD,KAAN,CAAY,CAAZ,EAAeiC,KAAf,IAAwBjF,KAAK,CAACgD,KAAN,CAAYkC,GAAZ,CAAtC;MACJ,OAAO9C,WAAP;IACH;;;WACD,sBAAa;MACT,IAAIH,cAAc,GAAG,KAAKnB,KAAL,CAAWC,aAAX,CAAyBkB,cAA9C;MACA,IAAIE,UAAU,GAAG,KAAKrB,KAAL,CAAWC,aAAX,CAAyBf,KAA1C;MACA,IAAIoF,WAAW,GAAGjD,UAAU,CAACf,MAA7B;MACA,IAAIrD,KAAK,GAAG,IAAZ,CAJS,CAKT;;MACA,IAAIsH,YAAY,GAAG,CAAC,KAAKnJ,UAAL,IAAmB,EAApB,EAAwBkF,MAA3C;MACAe,UAAU,GAAGA,UAAU,CAAC7C,OAAX,CAAmB,KAAKL,OAAxB,EAAiC,EAAjC,CAAb;MACAgD,cAAc,GAAGA,cAAc,GAAGoD,YAAlC;MACA,IAAI9B,IAAI,GAAGpB,UAAU,CAACxC,MAAX,CAAkBsC,cAAlB,CAAX;;MACA,IAAI,KAAKK,aAAL,CAAmBiB,IAAnB,CAAJ,EAA8B;QAC1B,OAAOtB,cAAc,GAAGoD,YAAxB;MACH,CAZQ,CAaT;;;MACA,IAAIlH,CAAC,GAAG8D,cAAc,GAAG,CAAzB;;MACA,OAAO9D,CAAC,IAAI,CAAZ,EAAe;QACXoF,IAAI,GAAGpB,UAAU,CAACxC,MAAX,CAAkBxB,CAAlB,CAAP;;QACA,IAAI,KAAKmE,aAAL,CAAmBiB,IAAnB,CAAJ,EAA8B;UAC1BxF,KAAK,GAAGI,CAAC,GAAGkH,YAAZ;UACA;QACH,CAHD,MAIK;UACDlH,CAAC;QACJ;MACJ;;MACD,IAAIJ,KAAK,KAAK,IAAd,EAAoB;QAChB,KAAK+C,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2ClF,KAAK,GAAG,CAAnD,EAAsDA,KAAK,GAAG,CAA9D;MACH,CAFD,MAGK;QACDI,CAAC,GAAG8D,cAAJ;;QACA,OAAO9D,CAAC,GAAGiH,WAAX,EAAwB;UACpB7B,IAAI,GAAGpB,UAAU,CAACxC,MAAX,CAAkBxB,CAAlB,CAAP;;UACA,IAAI,KAAKmE,aAAL,CAAmBiB,IAAnB,CAAJ,EAA8B;YAC1BxF,KAAK,GAAGI,CAAC,GAAGkH,YAAZ;YACA;UACH,CAHD,MAIK;YACDlH,CAAC;UACJ;QACJ;;QACD,IAAIJ,KAAK,KAAK,IAAd,EAAoB;UAChB,KAAK+C,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2ClF,KAA3C,EAAkDA,KAAlD;QACH;MACJ;;MACD,OAAOA,KAAK,IAAI,CAAhB;IACH;;;WACD,wBAAe;MACX,IAAM6C,YAAY,GAAG,KAAKE,KAAL,CAAWC,aAAX,CAAyBf,KAA9C;;MACA,IAAI,CAAC,KAAK5E,QAAN,IAAkBwF,YAAY,KAAKvG,UAAU,CAACiL,YAAX,EAAvC,EAAkE;QAC9D,KAAKC,UAAL;MACH;IACJ;;;WACD,uBAAchC,IAAd,EAAoB;MAChB,IAAIA,IAAI,CAACnC,MAAL,KAAgB,CAAhB,KAAsB,KAAKhD,QAAL,CAAc0E,IAAd,CAAmBS,IAAnB,KAA4B,KAAK1E,QAAL,CAAciE,IAAd,CAAmBS,IAAnB,CAA5B,IAAwD,KAAKhF,MAAL,CAAYuE,IAAZ,CAAiBS,IAAjB,CAAxD,IAAkF,KAAK9E,UAAL,CAAgBqE,IAAhB,CAAqBS,IAArB,CAAxG,CAAJ,EAAyI;QACrI,KAAKiC,UAAL;QACA,OAAO,IAAP;MACH;;MACD,OAAO,KAAP;IACH;;;WACD,sBAAa;MACT,KAAKpH,QAAL,CAAc2E,SAAd,GAA0B,CAA1B;MACA,KAAKlE,QAAL,CAAckE,SAAd,GAA0B,CAA1B;MACA,KAAKxE,MAAL,CAAYwE,SAAZ,GAAwB,CAAxB;MACA,KAAKtE,UAAL,CAAgBsE,SAAhB,GAA4B,CAA5B;IACH;;;WACD,qBAAYzC,KAAZ,EAAmBmF,QAAnB,EAA6BC,gBAA7B,EAA+CX,SAA/C,EAA0D;MACtD,IAAInE,YAAY,GAAG,KAAKE,KAAL,CAAWC,aAAX,CAAyBf,KAA5C;MACA,IAAIgB,QAAQ,GAAG,IAAf;;MACA,IAAIyE,QAAQ,IAAI,IAAhB,EAAsB;QAClBzE,QAAQ,GAAG,KAAKH,UAAL,CAAgB4E,QAAhB,CAAX;QACAzE,QAAQ,GAAG,CAACA,QAAD,IAAa,CAAC,KAAK1F,UAAnB,GAAgC,CAAhC,GAAoC0F,QAA/C;QACA,KAAKK,WAAL,CAAiBL,QAAjB,EAA2B0E,gBAA3B,EAA6CX,SAA7C,EAAwDU,QAAxD;QACA,KAAKlE,aAAL,CAAmBjB,KAAnB,EAA0BM,YAA1B,EAAwCI,QAAxC;MACH;IACJ;;;WACD,uBAAcV,KAAd,EAAqBM,YAArB,EAAmCI,QAAnC,EAA6C;MACzC,IAAI,KAAK2E,cAAL,CAAoB/E,YAApB,EAAkCI,QAAlC,CAAJ,EAAiD;QAC7C,KAAKtF,OAAL,CAAa8F,IAAb,CAAkB;UAAEoE,aAAa,EAAEtF,KAAjB;UAAwBN,KAAK,EAAEgB,QAA/B;UAAyCf,cAAc,EAAEW;QAAzD,CAAlB;MACH;IACJ;;;WACD,wBAAeA,YAAf,EAA6BI,QAA7B,EAAuC;MACnC,IAAIA,QAAQ,KAAK,IAAb,IAAqBJ,YAAY,KAAK,IAA1C,EAAgD;QAC5C,OAAO,IAAP;MACH;;MACD,IAAII,QAAQ,IAAI,IAAhB,EAAsB;QAClB,IAAI6E,kBAAkB,GAAG,OAAOjF,YAAP,KAAwB,QAAxB,GAAmC,KAAKC,UAAL,CAAgBD,YAAhB,CAAnC,GAAmEA,YAA5F;QACA,OAAOI,QAAQ,KAAK6E,kBAApB;MACH;;MACD,OAAO,KAAP;IACH;;;WACD,uBAAc7F,KAAd,EAAqB;MACjB,IAAIA,KAAK,KAAK,GAAV,IAAiBA,KAAK,IAAI,IAA9B,EAAoC;QAChC,OAAO,IAAP;MACH;;MACD,IAAI,KAAKkE,GAAL,IAAY,IAAZ,IAAoBlE,KAAK,GAAG,KAAKkE,GAArC,EAA0C;QACtC,OAAO,KAAKA,GAAZ;MACH;;MACD,IAAI,KAAK4B,GAAL,IAAY,IAAZ,IAAoB9F,KAAK,GAAG,KAAK8F,GAArC,EAA0C;QACtC,OAAO,KAAKA,GAAZ;MACH;;MACD,OAAO9F,KAAP;IACH;;;WACD,qBAAYA,KAAZ,EAAmB0F,gBAAnB,EAAqCX,SAArC,EAAgDU,QAAhD,EAA0D;MACtDC,gBAAgB,GAAGA,gBAAgB,IAAI,EAAvC;MACA,IAAIvD,UAAU,GAAG,KAAKrB,KAAL,CAAWC,aAAX,CAAyBf,KAA1C;MACA,IAAIgB,QAAQ,GAAG,KAAKG,WAAL,CAAiBnB,KAAjB,CAAf;MACA,IAAI+F,aAAa,GAAG5D,UAAU,CAACf,MAA/B;;MACA,IAAIJ,QAAQ,KAAKyE,QAAjB,EAA2B;QACvBzE,QAAQ,GAAG,KAAKgF,YAAL,CAAkBhF,QAAlB,EAA4ByE,QAA5B,CAAX;MACH;;MACD,IAAIM,aAAa,KAAK,CAAtB,EAAyB;QACrB,KAAKjF,KAAL,CAAWC,aAAX,CAAyBf,KAAzB,GAAiCgB,QAAjC;QACA,KAAKF,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2C,CAA3C,EAA8C,CAA9C;QACA,IAAMlF,KAAK,GAAG,KAAKwH,UAAL,EAAd;QACA,IAAMrD,YAAY,GAAGnE,KAAK,GAAG2H,gBAAgB,CAACtE,MAA9C;QACA,KAAKN,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2Cf,YAA3C,EAAyDA,YAAzD;MACH,CAND,MAOK;QACD,IAAID,cAAc,GAAG,KAAKnB,KAAL,CAAWC,aAAX,CAAyBkB,cAA9C;QACA,IAAIC,aAAY,GAAG,KAAKpB,KAAL,CAAWC,aAAX,CAAyBmB,YAA5C;;QACA,IAAI,KAAKhB,SAAL,IAAkB,KAAKA,SAAL,GAAiBF,QAAQ,CAACI,MAAhD,EAAwD;UACpD;QACH;;QACD,KAAKN,KAAL,CAAWC,aAAX,CAAyBf,KAAzB,GAAiCgB,QAAjC;QACA,IAAIiF,SAAS,GAAGjF,QAAQ,CAACI,MAAzB;;QACA,IAAI2D,SAAS,KAAK,cAAlB,EAAkC;UAC9B,IAAMmB,UAAU,GAAG,KAAKrF,UAAL,CAAgB,CAACsB,UAAU,IAAI,EAAf,EAAmBa,KAAnB,CAAyB,CAAzB,EAA4Bf,cAA5B,CAAhB,CAAnB;UACA,IAAMkE,aAAa,GAAGD,UAAU,KAAK,IAAf,GAAsBA,UAAU,CAAChG,QAAX,EAAtB,GAA8C,EAApE;UACA,IAAMkG,SAAS,GAAGD,aAAa,CAACtG,KAAd,CAAoB,EAApB,EAAwBvB,IAAxB,YAAiC,KAAKrC,SAAtC,QAAlB;UACA,IAAMoK,MAAM,GAAG,IAAIhI,MAAJ,CAAW+H,SAAX,EAAsB,GAAtB,CAAf;UACAC,MAAM,CAACvD,IAAP,CAAY9B,QAAZ;UACA,IAAMsF,KAAK,GAAGZ,gBAAgB,CAAC7F,KAAjB,CAAuB,EAAvB,EAA2BvB,IAA3B,YAAoC,KAAKrC,SAAzC,QAAd;UACA,IAAMsK,MAAM,GAAG,IAAIlI,MAAJ,CAAWiI,KAAX,EAAkB,GAAlB,CAAf;UACAC,MAAM,CAACzD,IAAP,CAAY9B,QAAQ,CAACgC,KAAT,CAAeqD,MAAM,CAACtD,SAAtB,CAAZ;UACAb,aAAY,GAAGmE,MAAM,CAACtD,SAAP,GAAmBwD,MAAM,CAACxD,SAAzC;UACA,KAAKjC,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2Cf,aAA3C,EAAyDA,aAAzD;QACH,CAXD,MAYK,IAAI+D,SAAS,KAAKF,aAAlB,EAAiC;UAClC,IAAIhB,SAAS,KAAK,QAAd,IAA0BA,SAAS,KAAK,oBAA5C,EACI,KAAKjE,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2Cf,aAAY,GAAG,CAA1D,EAA6DA,aAAY,GAAG,CAA5E,EADJ,KAEK,IAAI6C,SAAS,KAAK,eAAlB,EACD,KAAKjE,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2Cf,aAAY,GAAG,CAA1D,EAA6DA,aAAY,GAAG,CAA5E,EADC,KAEA,IAAI6C,SAAS,KAAK,cAAd,IAAgCA,SAAS,KAAK,MAAlD,EACD,KAAKjE,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2Cf,aAA3C,EAAyDA,aAAzD;QACP,CAPI,MAQA,IAAI6C,SAAS,KAAK,oBAAlB,EAAwC;UACzC,IAAIyB,QAAQ,GAAGrE,UAAU,CAACxC,MAAX,CAAkBuC,aAAY,GAAG,CAAjC,CAAf;UACA,IAAIuE,QAAQ,GAAGtE,UAAU,CAACxC,MAAX,CAAkBuC,aAAlB,CAAf;UACA,IAAIwE,IAAI,GAAGX,aAAa,GAAGE,SAA3B;;UACA,IAAIU,WAAW,GAAG,KAAKpI,MAAL,CAAYuE,IAAZ,CAAiB2D,QAAjB,CAAlB;;UACA,IAAIE,WAAW,IAAID,IAAI,KAAK,CAA5B,EAA+B;YAC3BxE,aAAY,IAAI,CAAhB;UACH,CAFD,MAGK,IAAI,CAACyE,WAAD,IAAgB,KAAKrE,aAAL,CAAmBkE,QAAnB,CAApB,EAAkD;YACnDtE,aAAY,IAAI,CAAC,CAAD,GAAKwE,IAAL,GAAY,CAA5B;UACH;;UACD,KAAKnI,MAAL,CAAYwE,SAAZ,GAAwB,CAAxB;UACA,KAAKjC,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2Cf,aAA3C,EAAyDA,aAAzD;QACH,CAbI,MAcA,IAAIC,UAAU,KAAK,GAAf,IAAsB4C,SAAS,KAAK,QAAxC,EAAkD;UACnD,KAAKjE,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2C,CAA3C,EAA8C,CAA9C;;UACA,IAAMlF,MAAK,GAAG,KAAKwH,UAAL,EAAd;;UACA,IAAMrD,cAAY,GAAGnE,MAAK,GAAG2H,gBAAgB,CAACtE,MAAzB,GAAkC,CAAvD;;UACA,KAAKN,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2Cf,cAA3C,EAAyDA,cAAzD;QACH,CALI,MAMA;UACDA,aAAY,GAAGA,aAAY,IAAI+D,SAAS,GAAGF,aAAhB,CAA3B;UACA,KAAKjF,KAAL,CAAWC,aAAX,CAAyBkC,iBAAzB,CAA2Cf,aAA3C,EAAyDA,aAAzD;QACH;MACJ;;MACD,KAAKpB,KAAL,CAAWC,aAAX,CAAyBwB,YAAzB,CAAsC,eAAtC,EAAuDvC,KAAvD;IACH;;;WACD,sBAAa4G,IAAb,EAAmBC,IAAnB,EAAyB;MACrB,IAAID,IAAI,IAAIC,IAAZ,EAAkB;QACd,IAAInE,gBAAgB,GAAGmE,IAAI,CAACzC,MAAL,CAAY,KAAKvF,QAAjB,CAAvB;QACA,KAAKA,QAAL,CAAckE,SAAd,GAA0B,CAA1B;;QACA,IAAI,KAAK5G,UAAT,EAAqB;UACjB,OAAOyK,IAAI,CAACtH,OAAL,CAAa,KAAKnD,UAAlB,EAA8B,EAA9B,EAAkC0D,KAAlC,CAAwC,KAAKhB,QAA7C,EAAuD,CAAvD,IAA4DgI,IAAI,CAACvH,OAAL,CAAa,KAAKnD,UAAlB,EAA8B,EAA9B,EAAkC6G,KAAlC,CAAwCN,gBAAxC,CAA5D,GAAwH,KAAKvG,UAApI;QACH,CAFD,MAGK;UACD,OAAOuG,gBAAgB,KAAK,CAAC,CAAtB,GAA0BkE,IAAI,CAAC/G,KAAL,CAAW,KAAKhB,QAAhB,EAA0B,CAA1B,IAA+BgI,IAAI,CAAC7D,KAAL,CAAWN,gBAAX,CAAzD,GAAwFkE,IAA/F;QACH;MACJ;;MACD,OAAOA,IAAP;IACH;;;WACD,0BAAiB5G,KAAjB,EAAwB;MACpB,IAAIA,KAAJ,EAAW;QACP,IAAM8G,UAAU,GAAG9G,KAAK,CAACH,KAAN,CAAY,KAAKhB,QAAjB,CAAnB;;QACA,IAAIiI,UAAU,CAAC1F,MAAX,KAAsB,CAA1B,EAA6B;UACzB,OAAO0F,UAAU,CAAC,CAAD,CAAV,CAAcxH,OAAd,CAAsB,KAAKP,OAA3B,EAAoC,EAApC,EAAwCW,IAAxC,GAA+CJ,OAA/C,CAAuD,KAAvD,EAA8D,EAA9D,EAAkEA,OAAlE,CAA0E,KAAKX,SAA/E,EAA0F,EAA1F,EAA8FyC,MAArG;QACH;MACJ;;MACD,OAAO,CAAP;IACH;;;WACD,sBAAad,KAAb,EAAoB;MAChB,KAAKhE,OAAL,GAAe,IAAf;MACA,KAAKX,OAAL,CAAa6F,IAAb,CAAkBlB,KAAlB;IACH;;;WACD,qBAAYA,KAAZ,EAAmB;MACf,KAAKhE,OAAL,GAAe,KAAf;MACA,IAAI0E,QAAQ,GAAG,KAAKC,aAAL,CAAmB,KAAKJ,UAAL,CAAgB,KAAKC,KAAL,CAAWC,aAAX,CAAyBf,KAAzC,CAAnB,CAAf;MACA,KAAKc,KAAL,CAAWC,aAAX,CAAyBf,KAAzB,GAAiC,KAAKmB,WAAL,CAAiBH,QAAjB,CAAjC;MACA,KAAKF,KAAL,CAAWC,aAAX,CAAyBwB,YAAzB,CAAsC,eAAtC,EAAuDvB,QAAvD;MACA,KAAKM,WAAL,CAAiBhB,KAAjB,EAAwBU,QAAxB;MACA,KAAKpF,MAAL,CAAY4F,IAAZ,CAAiBlB,KAAjB;IACH;;;WACD,0BAAiB;MACb,IAAM6D,GAAG,GAAG,CAAC,KAAKnE,KAAN,IAAe,CAAC,KAAK1E,UAArB,GAAkC,CAAlC,GAAsC,KAAK0E,KAAvD;MACA,OAAO,KAAKmB,WAAL,CAAiBgD,GAAjB,CAAP;IACH;;;WACD,qBAAY7D,KAAZ,EAAmBN,KAAnB,EAA0B;MACtB,IAAI,KAAKA,KAAL,KAAeA,KAAnB,EAA0B;QACtB,KAAKA,KAAL,GAAaA,KAAb;QACA,KAAKjE,aAAL,CAAmBiE,KAAnB;MACH;;MACD,KAAKhE,cAAL;IACH;;;WACD,oBAAWgE,KAAX,EAAkB;MACd,KAAKA,KAAL,GAAaA,KAAb;MACA,KAAKlF,EAAL,CAAQiM,YAAR;IACH;;;WACD,0BAAiBC,EAAjB,EAAqB;MACjB,KAAKjL,aAAL,GAAqBiL,EAArB;IACH;;;WACD,2BAAkBA,EAAlB,EAAsB;MAClB,KAAKhL,cAAL,GAAsBgL,EAAtB;IACH;;;WACD,0BAAiB7C,GAAjB,EAAsB;MAClB,KAAK9H,QAAL,GAAgB8H,GAAhB;MACA,KAAKrJ,EAAL,CAAQiM,YAAR;IACH;;;SACD,eAAa;MACT,OAAO,KAAK/G,KAAL,IAAc,IAAd,IAAsB,KAAKA,KAAL,CAAWE,QAAX,GAAsBkB,MAAtB,GAA+B,CAA5D;IACH;;;WACD,sBAAa;MACT,IAAI,KAAK7E,KAAT,EAAgB;QACZ0K,aAAa,CAAC,KAAK1K,KAAN,CAAb;MACH;IACJ;;;WACD,wBAAe;MACX,OAAO,KAAKiB,YAAZ;IACH;;;;;;AAEL7C,WAAW,CAACuM,IAAZ;EAAA,iBAAwGvM,WAAxG,EAA8FnB,EAA9F,mBAAqIA,EAAE,CAAC2N,UAAxI,GAA8F3N,EAA9F,mBAA+JA,EAAE,CAAC4N,iBAAlK;AAAA;;AACAzM,WAAW,CAAC0M,IAAZ,kBAD8F7N,EAC9F;EAAA,MAA4FmB,WAA5F;EAAA;EAAA;IAAA;MAD8FnB,EAC9F;IAAA;;IAAA;MAAA;;MAD8FA,EAC9F,qBAD8FA,EAC9F;IAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAD8FA,EAC9F;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAD8FA,EAC9F,oBAA89C,CAACgB,0BAAD,CAA99C,GAD8FhB,EAC9F;EAAA;EAAA;EAAA;EAAA;IAAA;MAD8FA,EAEtF,+CADR;MAD8FA,EAmC9E;QAAA,OAAS,uBAAT;MAAA;QAAA,OACW,0BADX;MAAA;QAAA,OAEY,2BAFZ;MAAA;QAAA,OAGS,mBAHT;MAAA;QAAA,OAIS,kBAJT;MAAA;QAAA,OAKS,wBALT;MAAA;QAAA,OAMQ,uBANR;MAAA,EAlChB;MAD8FA,EAYlF,eAXZ;MAD8FA,EA2ClF,sDA1CZ;MAD8FA,EA4ClF,6DA3CZ;MAD8FA,EAwElF,gEAvEZ;MAD8FA,EAsFlF,gEArFZ;MAD8FA,EAoGtF,eAnGR;IAAA;;IAAA;MAD8FA,EAUlF,2BATZ;MAD8FA,EAGlF,uBAHkFA,EAGlF,6MAFZ;MAD8FA,EAgB9E,aAfhB;MAD8FA,EAgB9E,gCAfhB;MAD8FA,EAc9E,2JAbhB;MAD8FA,EAmB9E,yUAlBhB;MAD8FA,EA2C9E,aA1ChB;MAD8FA,EA2C9E,iFA1ChB;MAD8FA,EA4CxC,aA3CtD;MAD8FA,EA4CxC,sEA3CtD;MAD8FA,EA8E7E,aA7EjB;MAD8FA,EA8E7E,sEA7EjB;MAD8FA,EA4F7E,aA3FjB;MAD8FA,EA4F7E,sEA3FjB;IAAA;EAAA;EAAA,eAoGilEF,EAAE,CAACgO,OApGplE,EAoG+qEhO,EAAE,CAACiO,IApGlrE,EAoGmxEjO,EAAE,CAACkO,OApGtxE,EAoGw2ElN,EAAE,CAACmN,SApG32E,EAoG66EtN,EAAE,CAACuN,eApGh7E;EAAA;EAAA;EAAA;AAAA;;AAqGA;EAAA,mDAtG8FlO,EAsG9F,mBAA2FmB,WAA3F,EAAoH,CAAC;IACzGgN,IAAI,EAAEhO,SADmG;IAEzGiO,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,eAAZ;MAA6BC,QAAQ,2tJAArC;MAoGZC,eAAe,EAAEnO,uBAAuB,CAACoO,MApG7B;MAoGqCC,SAAS,EAAE,CAACzN,0BAAD,CApGhD;MAoG8E0N,aAAa,EAAErO,iBAAiB,CAACsO,IApG/G;MAoGqHC,IAAI,EAAE;QACtHC,KAAK,EAAE,0BAD+G;QAEtH,iCAAiC,QAFqF;QAGtH,gCAAgC,SAHsF;QAItH,mCAAmC;MAJmF,CApG3H;MAyGIC,MAAM,EAAE,CAAC,ogEAAD;IAzGZ,CAAD;EAFmG,CAAD,CAApH,EA4G4B,YAAY;IAAE,OAAO,CAAC;MAAEX,IAAI,EAAEnO,EAAE,CAAC2N;IAAX,CAAD,EAA0B;MAAEQ,IAAI,EAAEnO,EAAE,CAAC4N;IAAX,CAA1B,CAAP;EAAmE,CA5G7G,EA4G+H;IAAErM,WAAW,EAAE,CAAC;MAC/H4M,IAAI,EAAE7N;IADyH,CAAD,CAAf;IAE/GkB,MAAM,EAAE,CAAC;MACT2M,IAAI,EAAE7N;IADG,CAAD,CAFuG;IAI/GmB,YAAY,EAAE,CAAC;MACf0M,IAAI,EAAE7N;IADS,CAAD,CAJiG;IAM/GyO,OAAO,EAAE,CAAC;MACVZ,IAAI,EAAE7N;IADI,CAAD,CANsG;IAQ/G0O,UAAU,EAAE,CAAC;MACbb,IAAI,EAAE7N;IADO,CAAD,CARmG;IAU/GmD,KAAK,EAAE,CAAC;MACR0K,IAAI,EAAE7N;IADE,CAAD,CAVwG;IAY/G2O,WAAW,EAAE,CAAC;MACdd,IAAI,EAAE7N;IADQ,CAAD,CAZkG;IAc/G4O,IAAI,EAAE,CAAC;MACPf,IAAI,EAAE7N;IADC,CAAD,CAdyG;IAgB/GoH,SAAS,EAAE,CAAC;MACZyG,IAAI,EAAE7N;IADM,CAAD,CAhBoG;IAkB/G6O,QAAQ,EAAE,CAAC;MACXhB,IAAI,EAAE7N;IADK,CAAD,CAlBqG;IAoB/G8O,KAAK,EAAE,CAAC;MACRjB,IAAI,EAAE7N;IADE,CAAD,CApBwG;IAsB/G+O,SAAS,EAAE,CAAC;MACZlB,IAAI,EAAE7N;IADM,CAAD,CAtBoG;IAwB/GgP,YAAY,EAAE,CAAC;MACfnB,IAAI,EAAE7N;IADS,CAAD,CAxBiG;IA0B/GiP,IAAI,EAAE,CAAC;MACPpB,IAAI,EAAE7N;IADC,CAAD,CA1ByG;IA4B/GkP,QAAQ,EAAE,CAAC;MACXrB,IAAI,EAAE7N;IADK,CAAD,CA5BqG;IA8B/GmP,YAAY,EAAE,CAAC;MACftB,IAAI,EAAE7N;IADS,CAAD,CA9BiG;IAgC/GoK,GAAG,EAAE,CAAC;MACNyD,IAAI,EAAE7N;IADA,CAAD,CAhC0G;IAkC/GgM,GAAG,EAAE,CAAC;MACN6B,IAAI,EAAE7N;IADA,CAAD,CAlC0G;IAoC/GoP,oBAAoB,EAAE,CAAC;MACvBvB,IAAI,EAAE7N;IADiB,CAAD,CApCyF;IAsC/GqP,oBAAoB,EAAE,CAAC;MACvBxB,IAAI,EAAE7N;IADiB,CAAD,CAtCyF;IAwC/GoB,mBAAmB,EAAE,CAAC;MACtByM,IAAI,EAAE7N;IADgB,CAAD,CAxC0F;IA0C/GqB,mBAAmB,EAAE,CAAC;MACtBwM,IAAI,EAAE7N;IADgB,CAAD,CA1C0F;IA4C/GsB,QAAQ,EAAE,CAAC;MACXuM,IAAI,EAAE7N;IADK,CAAD,CA5CqG;IA8C/GuB,IAAI,EAAE,CAAC;MACPsM,IAAI,EAAE7N;IADC,CAAD,CA9CyG;IAgD/GwB,UAAU,EAAE,CAAC;MACbqM,IAAI,EAAE7N;IADO,CAAD,CAhDmG;IAkD/G6D,MAAM,EAAE,CAAC;MACTgK,IAAI,EAAE7N;IADG,CAAD,CAlDuG;IAoD/GkD,aAAa,EAAE,CAAC;MAChB2K,IAAI,EAAE7N;IADU,CAAD,CApDgG;IAsD/GyB,IAAI,EAAE,CAAC;MACPoM,IAAI,EAAE7N;IADC,CAAD,CAtDyG;IAwD/GoD,QAAQ,EAAE,CAAC;MACXyK,IAAI,EAAE7N;IADK,CAAD,CAxDqG;IA0D/GqD,eAAe,EAAE,CAAC;MAClBwK,IAAI,EAAE7N;IADY,CAAD,CA1D8F;IA4D/G0B,WAAW,EAAE,CAAC;MACdmM,IAAI,EAAE7N;IADQ,CAAD,CA5DkG;IA8D/GuD,iBAAiB,EAAE,CAAC;MACpBsK,IAAI,EAAE7N;IADc,CAAD,CA9D4F;IAgE/GyD,iBAAiB,EAAE,CAAC;MACpBoK,IAAI,EAAE7N;IADc,CAAD,CAhE4F;IAkE/G8F,MAAM,EAAE,CAAC;MACT+H,IAAI,EAAE7N;IADG,CAAD,CAlEuG;IAoE/GiG,MAAM,EAAE,CAAC;MACT4H,IAAI,EAAE7N;IADG,CAAD,CApEuG;IAsE/GsP,UAAU,EAAE,CAAC;MACbzB,IAAI,EAAE7N;IADO,CAAD,CAtEmG;IAwE/GuP,eAAe,EAAE,CAAC;MAClB1B,IAAI,EAAE7N;IADY,CAAD,CAxE8F;IA0E/G2B,SAAS,EAAE,CAAC;MACZkM,IAAI,EAAE7N;IADM,CAAD,CA1EoG;IA4E/GgH,KAAK,EAAE,CAAC;MACR6G,IAAI,EAAE5N,SADE;MAER6N,IAAI,EAAE,CAAC,OAAD;IAFE,CAAD,CA5EwG;IA+E/GlM,OAAO,EAAE,CAAC;MACViM,IAAI,EAAE3N;IADI,CAAD,CA/EsG;IAiF/G2B,OAAO,EAAE,CAAC;MACVgM,IAAI,EAAE3N;IADI,CAAD,CAjFsG;IAmF/G4B,MAAM,EAAE,CAAC;MACT+L,IAAI,EAAE3N;IADG,CAAD,CAnFuG;IAqF/G6B,SAAS,EAAE,CAAC;MACZ8L,IAAI,EAAE3N;IADM,CAAD,CArFoG;IAuF/G8B,OAAO,EAAE,CAAC;MACV6L,IAAI,EAAE3N;IADI,CAAD,CAvFsG;IAyF/GqC,QAAQ,EAAE,CAAC;MACXsL,IAAI,EAAE7N;IADK,CAAD;EAzFqG,CA5G/H;AAAA;;IAwMMwP,iB;;;;AAENA,iBAAiB,CAACpC,IAAlB;EAAA,iBAA8GoC,iBAA9G;AAAA;;AACAA,iBAAiB,CAACC,IAAlB,kBAjT8F/P,EAiT9F;EAAA,MAA+G8P;AAA/G;AACAA,iBAAiB,CAACE,IAAlB,kBAlT8FhQ,EAkT9F;EAAA,UAA4ID,YAA5I,EAA0JgB,eAA1J,EAA2KH,YAA3K;AAAA;;AACA;EAAA,mDAnT8FZ,EAmT9F,mBAA2F8P,iBAA3F,EAA0H,CAAC;IAC/G3B,IAAI,EAAE1N,QADyG;IAE/G2N,IAAI,EAAE,CAAC;MACC6B,OAAO,EAAE,CAAClQ,YAAD,EAAegB,eAAf,EAAgCH,YAAhC,CADV;MAECsP,OAAO,EAAE,CAAC/O,WAAD,CAFV;MAGCgP,YAAY,EAAE,CAAChP,WAAD;IAHf,CAAD;EAFyG,CAAD,CAA1H;AAAA;AASA;AACA;AACA;;;AAEA,SAASH,0BAAT,EAAqCG,WAArC,EAAkD2O,iBAAlD"},"metadata":{},"sourceType":"module"}